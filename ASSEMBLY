.code
  PUSH 60			contract Crowdsale is MultiLev...
  PUSH 40			contract Crowdsale is MultiLev...
  MSTORE 			contract Crowdsale is MultiLev...
  PUSH 0			false
  PUSH 3			bool public mintingFinished = ...
  PUSH 14			bool public mintingFinished = ...
  PUSH 100			bool public mintingFinished = ...
  EXP 			bool public mintingFinished = ...
  DUP2 			bool public mintingFinished = ...
  SLOAD 			bool public mintingFinished = ...
  DUP2 			bool public mintingFinished = ...
  PUSH FF			bool public mintingFinished = ...
  MUL 			bool public mintingFinished = ...
  NOT 			bool public mintingFinished = ...
  AND 			bool public mintingFinished = ...
  SWAP1 			bool public mintingFinished = ...
  DUP4 			bool public mintingFinished = ...
  ISZERO 			bool public mintingFinished = ...
  ISZERO 			bool public mintingFinished = ...
  MUL 			bool public mintingFinished = ...
  OR 			bool public mintingFinished = ...
  SWAP1 			bool public mintingFinished = ...
  SSTORE 			bool public mintingFinished = ...
  POP 			bool public mintingFinished = ...
  PUSH [tag] 1			new MultiLevelToken()
  PUSH [tag] 2			new MultiLevelToken()
  JUMP [in]			new MultiLevelToken()
tag 1			new MultiLevelToken()
  JUMPDEST 			new MultiLevelToken()
  PUSH 40			new MultiLevelToken()
  MLOAD 			new MultiLevelToken()
  DUP1 			new MultiLevelToken()
  SWAP2 			new MultiLevelToken()
  SUB 			new MultiLevelToken()
  SWAP1 			new MultiLevelToken()
  PUSH 0			new MultiLevelToken()
  CREATE 			new MultiLevelToken()
  DUP1 			new MultiLevelToken()
  ISZERO 			new MultiLevelToken()
  ISZERO 			new MultiLevelToken()
  PUSH [tag] 3			new MultiLevelToken()
  JUMPI 			new MultiLevelToken()
  PUSH 0			new MultiLevelToken()
  DUP1 			new MultiLevelToken()
  REVERT 			new MultiLevelToken()
tag 3			new MultiLevelToken()
  JUMPDEST 			new MultiLevelToken()
  PUSH 6			MultiLevelToken public token =...
  PUSH 0			MultiLevelToken public token =...
  PUSH 100			MultiLevelToken public token =...
  EXP 			MultiLevelToken public token =...
  DUP2 			MultiLevelToken public token =...
  SLOAD 			MultiLevelToken public token =...
  DUP2 			MultiLevelToken public token =...
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			MultiLevelToken public token =...
  MUL 			MultiLevelToken public token =...
  NOT 			MultiLevelToken public token =...
  AND 			MultiLevelToken public token =...
  SWAP1 			MultiLevelToken public token =...
  DUP4 			MultiLevelToken public token =...
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			MultiLevelToken public token =...
  AND 			MultiLevelToken public token =...
  MUL 			MultiLevelToken public token =...
  OR 			MultiLevelToken public token =...
  SWAP1 			MultiLevelToken public token =...
  SSTORE 			MultiLevelToken public token =...
  POP 			MultiLevelToken public token =...
  PUSH 12			18
  PUSH FFFFFFFF			uint256(decimals)
  AND 			uint256(decimals)
  PUSH A			10
  EXP 			10 ** uint256(decimals)
  PUSH A			uint256 DEC = 10 ** uint256(de...
  SSTORE 			uint256 DEC = 10 ** uint256(de...
  PUSH 1			1
  PUSH D			uint public a=1
  SSTORE 			uint public a=1
  PUSH 1			1
  PUSH E			uint public b=1
  SSTORE 			uint public b=1
  PUSH 1			1
  PUSH F			uint public c=1
  SSTORE 			uint public c=1
  CALLVALUE 			function Crowdsale()public {\n...
  ISZERO 			function Crowdsale()public {\n...
  PUSH [tag] 4			function Crowdsale()public {\n...
  JUMPI 			function Crowdsale()public {\n...
  PUSH 0			function Crowdsale()public {\n...
  DUP1 			function Crowdsale()public {\n...
  REVERT 			function Crowdsale()public {\n...
tag 4			function Crowdsale()public {\n...
  JUMPDEST 			function Crowdsale()public {\n...
  CALLER 			msg.sender
  PUSH 3			owner
  PUSH 0			owner
  PUSH 100			owner = msg.sender
  EXP 			owner = msg.sender
  DUP2 			owner = msg.sender
  SLOAD 			owner = msg.sender
  DUP2 			owner = msg.sender
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = msg.sender
  MUL 			owner = msg.sender
  NOT 			owner = msg.sender
  AND 			owner = msg.sender
  SWAP1 			owner = msg.sender
  DUP4 			owner = msg.sender
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = msg.sender
  AND 			owner = msg.sender
  MUL 			owner = msg.sender
  OR 			owner = msg.sender
  SWAP1 			owner = msg.sender
  SSTORE 			owner = msg.sender
  POP 			owner = msg.sender
  PUSH 5B6029D086D98669E30C8B9C289E78370AE2DB3C			0x5b6029d086D98669e30c8B9c289e...
  PUSH 4			multisig
  PUSH 0			multisig
  PUSH 100			multisig = 0x5b6029d086D98669e...
  EXP 			multisig = 0x5b6029d086D98669e...
  DUP2 			multisig = 0x5b6029d086D98669e...
  SLOAD 			multisig = 0x5b6029d086D98669e...
  DUP2 			multisig = 0x5b6029d086D98669e...
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			multisig = 0x5b6029d086D98669e...
  MUL 			multisig = 0x5b6029d086D98669e...
  NOT 			multisig = 0x5b6029d086D98669e...
  AND 			multisig = 0x5b6029d086D98669e...
  SWAP1 			multisig = 0x5b6029d086D98669e...
  DUP4 			multisig = 0x5b6029d086D98669e...
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			multisig = 0x5b6029d086D98669e...
  AND 			multisig = 0x5b6029d086D98669e...
  MUL 			multisig = 0x5b6029d086D98669e...
  OR 			multisig = 0x5b6029d086D98669e...
  SWAP1 			multisig = 0x5b6029d086D98669e...
  SSTORE 			multisig = 0x5b6029d086D98669e...
  POP 			multisig = 0x5b6029d086D98669e...
  PUSH A			10
  PUSH 5			multisigPercent
  DUP2 			multisigPercent = 10
  SWAP1 			multisigPercent = 10
  SSTORE 			multisigPercent = 10
  POP 			multisigPercent = 10
  PUSH 56BC75E2D63100000			100000000000000000000
  PUSH 7			rate
  DUP2 			rate = 100000000000000000000
  SWAP1 			rate = 100000000000000000000
  SSTORE 			rate = 100000000000000000000
  POP 			rate = 100000000000000000000
  PUSH [tag] 9			contract Crowdsale is MultiLev...
  JUMP 			contract Crowdsale is MultiLev...
tag 2			contract Crowdsale is MultiLev...
  JUMPDEST 			contract Crowdsale is MultiLev...
  PUSH 40			contract Crowdsale is MultiLev...
  MLOAD 			contract Crowdsale is MultiLev...
  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000001			contract Crowdsale is MultiLev...
  DUP1 			contract Crowdsale is MultiLev...
  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000001			contract Crowdsale is MultiLev...
  DUP4 			contract Crowdsale is MultiLev...
  CODECOPY 			contract Crowdsale is MultiLev...
  ADD 			contract Crowdsale is MultiLev...
  SWAP1 			contract Crowdsale is MultiLev...
  JUMP [out]			contract Crowdsale is MultiLev...
tag 9			contract Crowdsale is MultiLev...
  JUMPDEST 			contract Crowdsale is MultiLev...
  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000			contract Crowdsale is MultiLev...
  DUP1 			contract Crowdsale is MultiLev...
  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000			contract Crowdsale is MultiLev...
  PUSH 0			contract Crowdsale is MultiLev...
  CODECOPY 			contract Crowdsale is MultiLev...
  PUSH 0			contract Crowdsale is MultiLev...
  RETURN 			contract Crowdsale is MultiLev...
.data
  0:
    .code
      PUSH 60			contract Crowdsale is MultiLev...
      PUSH 40			contract Crowdsale is MultiLev...
      MSTORE 			contract Crowdsale is MultiLev...
      PUSH 4			contract Crowdsale is MultiLev...
      CALLDATASIZE 			contract Crowdsale is MultiLev...
      LT 			contract Crowdsale is MultiLev...
      PUSH [tag] 1			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      PUSH 0			contract Crowdsale is MultiLev...
      CALLDATALOAD 			contract Crowdsale is MultiLev...
      PUSH 100000000000000000000000000000000000000000000000000000000			contract Crowdsale is MultiLev...
      SWAP1 			contract Crowdsale is MultiLev...
      DIV 			contract Crowdsale is MultiLev...
      PUSH FFFFFFFF			contract Crowdsale is MultiLev...
      AND 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH 5D2035B			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 2			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH 6FDDE03			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 3			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH 95EA7B3			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 4			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH DBE671F			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 5			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH 16F4D022			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 6			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH 18160DDD			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 7			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH 23B872DD			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 8			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH 31198D19			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 9			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH 313CE567			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 10			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH 40C10F19			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 11			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH 4BDF1B0E			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 12			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH 4DF7E3D0			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 13			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH 70A08231			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 14			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH 7D64BCB4			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 15			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH 8DA5CB5B			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 16			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH 95D89B41			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 17			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH A9059CBB			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 18			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH B4427263			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 19			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH C3DA42B8			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 20			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH C5C0DB08			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 21			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH DD62ED3E			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 22			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH E4FC6B6D			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 23			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH F2FDE38B			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 24			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
      DUP1 			contract Crowdsale is MultiLev...
      PUSH FC0C546A			contract Crowdsale is MultiLev...
      EQ 			contract Crowdsale is MultiLev...
      PUSH [tag] 25			contract Crowdsale is MultiLev...
      JUMPI 			contract Crowdsale is MultiLev...
    tag 1			contract Crowdsale is MultiLev...
      JUMPDEST 			contract Crowdsale is MultiLev...
      PUSH [tag] 28			createTokens()
      PUSH [tag] 29			createTokens
      JUMP [in]			createTokens()
    tag 28			createTokens()
      JUMPDEST 			createTokens()
      STOP 			contract Crowdsale is MultiLev...
    tag 2			bool public mintingFinished = ...
      JUMPDEST 			bool public mintingFinished = ...
      CALLVALUE 			bool public mintingFinished = ...
      ISZERO 			bool public mintingFinished = ...
      PUSH [tag] 30			bool public mintingFinished = ...
      JUMPI 			bool public mintingFinished = ...
      PUSH 0			bool public mintingFinished = ...
      DUP1 			bool public mintingFinished = ...
      REVERT 			bool public mintingFinished = ...
    tag 30			bool public mintingFinished = ...
      JUMPDEST 			bool public mintingFinished = ...
      PUSH [tag] 31			bool public mintingFinished = ...
      PUSH [tag] 32			bool public mintingFinished = ...
      JUMP 			bool public mintingFinished = ...
    tag 31			bool public mintingFinished = ...
      JUMPDEST 			bool public mintingFinished = ...
      PUSH 40			bool public mintingFinished = ...
      MLOAD 			bool public mintingFinished = ...
      DUP1 			bool public mintingFinished = ...
      DUP3 			bool public mintingFinished = ...
      ISZERO 			bool public mintingFinished = ...
      ISZERO 			bool public mintingFinished = ...
      ISZERO 			bool public mintingFinished = ...
      ISZERO 			bool public mintingFinished = ...
      DUP2 			bool public mintingFinished = ...
      MSTORE 			bool public mintingFinished = ...
      PUSH 20			bool public mintingFinished = ...
      ADD 			bool public mintingFinished = ...
      SWAP2 			bool public mintingFinished = ...
      POP 			bool public mintingFinished = ...
      POP 			bool public mintingFinished = ...
      PUSH 40			bool public mintingFinished = ...
      MLOAD 			bool public mintingFinished = ...
      DUP1 			bool public mintingFinished = ...
      SWAP2 			bool public mintingFinished = ...
      SUB 			bool public mintingFinished = ...
      SWAP1 			bool public mintingFinished = ...
      RETURN 			bool public mintingFinished = ...
    tag 3			string public constant name = ...
      JUMPDEST 			string public constant name = ...
      CALLVALUE 			string public constant name = ...
      ISZERO 			string public constant name = ...
      PUSH [tag] 33			string public constant name = ...
      JUMPI 			string public constant name = ...
      PUSH 0			string public constant name = ...
      DUP1 			string public constant name = ...
      REVERT 			string public constant name = ...
    tag 33			string public constant name = ...
      JUMPDEST 			string public constant name = ...
      PUSH [tag] 34			string public constant name = ...
      PUSH [tag] 35			string public constant name = ...
      JUMP 			string public constant name = ...
    tag 34			string public constant name = ...
      JUMPDEST 			string public constant name = ...
      PUSH 40			string public constant name = ...
      MLOAD 			string public constant name = ...
      DUP1 			string public constant name = ...
      DUP1 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      DUP3 			string public constant name = ...
      DUP2 			string public constant name = ...
      SUB 			string public constant name = ...
      DUP3 			string public constant name = ...
      MSTORE 			string public constant name = ...
      DUP4 			string public constant name = ...
      DUP2 			string public constant name = ...
      DUP2 			string public constant name = ...
      MLOAD 			string public constant name = ...
      DUP2 			string public constant name = ...
      MSTORE 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      SWAP2 			string public constant name = ...
      POP 			string public constant name = ...
      DUP1 			string public constant name = ...
      MLOAD 			string public constant name = ...
      SWAP1 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      SWAP1 			string public constant name = ...
      DUP1 			string public constant name = ...
      DUP4 			string public constant name = ...
      DUP4 			string public constant name = ...
      PUSH 0			;
    tag 36			olidity ^0.4.13;\n
/**
 * @tit...
      JUMPDEST 			olidity ^0.4.13;\n
/**
 * @tit...
      DUP4 			@ti
      DUP2 			 
      LT 			**\n * @tit
      ISZERO 			olidity ^0.4.13;\n
/**
 * @tit...
      PUSH [tag] 37			olidity ^0.4.13;\n
/**
 * @tit...
      JUMPI 			olidity ^0.4.13;\n
/**
 * @tit...
      DUP1 			e
      DUP3 			 * 
      ADD 			ace\n * @dev
      MLOAD 			interface\n * @dev 
      DUP2 			C
      DUP5 			of 
      ADD 			ion of ERC2
      MSTORE 			er version of ERC20 interface\...
      PUSH 20			* 
      DUP2 			c
      ADD 			Basic\n * @
      SWAP1 			ERC20Basic\n * @
      POP 			ERC20Basic\n * @
      PUSH [tag] 36			olidity ^0.4.13;\n
/**
 * @tit...
      JUMP 			olidity ^0.4.13;\n
/**
 * @tit...
    tag 37			olidity ^0.4.13;\n
/**
 * @tit...
      JUMPDEST 			olidity ^0.4.13;\n
/**
 * @tit...
      POP 			ity ^0.4.13;\n

      POP 			string public constant name = ...
      POP 			string public constant name = ...
      POP 			string public constant name = ...
      SWAP1 			string public constant name = ...
      POP 			string public constant name = ...
      SWAP1 			string public constant name = ...
      DUP2 			string public constant name = ...
      ADD 			string public constant name = ...
      SWAP1 			string public constant name = ...
      PUSH 1F			string public constant name = ...
      AND 			string public constant name = ...
      DUP1 			string public constant name = ...
      ISZERO 			string public constant name = ...
      PUSH [tag] 39			string public constant name = ...
      JUMPI 			string public constant name = ...
      DUP1 			string public constant name = ...
      DUP3 			string public constant name = ...
      SUB 			string public constant name = ...
      DUP1 			string public constant name = ...
      MLOAD 			string public constant name = ...
      PUSH 1			string public constant name = ...
      DUP4 			string public constant name = ...
      PUSH 20			string public constant name = ...
      SUB 			string public constant name = ...
      PUSH 100			string public constant name = ...
      EXP 			string public constant name = ...
      SUB 			string public constant name = ...
      NOT 			string public constant name = ...
      AND 			string public constant name = ...
      DUP2 			string public constant name = ...
      MSTORE 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      SWAP2 			string public constant name = ...
      POP 			string public constant name = ...
    tag 39			string public constant name = ...
      JUMPDEST 			string public constant name = ...
      POP 			string public constant name = ...
      SWAP3 			string public constant name = ...
      POP 			string public constant name = ...
      POP 			string public constant name = ...
      POP 			string public constant name = ...
      PUSH 40			string public constant name = ...
      MLOAD 			string public constant name = ...
      DUP1 			string public constant name = ...
      SWAP2 			string public constant name = ...
      SUB 			string public constant name = ...
      SWAP1 			string public constant name = ...
      RETURN 			string public constant name = ...
    tag 4			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      CALLVALUE 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      PUSH [tag] 40			function approve(address _spen...
      JUMPI 			function approve(address _spen...
      PUSH 0			function approve(address _spen...
      DUP1 			function approve(address _spen...
      REVERT 			function approve(address _spen...
    tag 40			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      PUSH [tag] 41			function approve(address _spen...
      PUSH 4			function approve(address _spen...
      DUP1 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      CALLDATALOAD 			function approve(address _spen...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function approve(address _spen...
      AND 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      PUSH 20			function approve(address _spen...
      ADD 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      CALLDATALOAD 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      PUSH 20			function approve(address _spen...
      ADD 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      POP 			function approve(address _spen...
      POP 			function approve(address _spen...
      PUSH [tag] 42			function approve(address _spen...
      JUMP 			function approve(address _spen...
    tag 41			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      PUSH 40			function approve(address _spen...
      MLOAD 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      DUP3 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      DUP2 			function approve(address _spen...
      MSTORE 			function approve(address _spen...
      PUSH 20			function approve(address _spen...
      ADD 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      POP 			function approve(address _spen...
      POP 			function approve(address _spen...
      PUSH 40			function approve(address _spen...
      MLOAD 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      SUB 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      RETURN 			function approve(address _spen...
    tag 5			uint public a=1
      JUMPDEST 			uint public a=1
      CALLVALUE 			uint public a=1
      ISZERO 			uint public a=1
      PUSH [tag] 43			uint public a=1
      JUMPI 			uint public a=1
      PUSH 0			uint public a=1
      DUP1 			uint public a=1
      REVERT 			uint public a=1
    tag 43			uint public a=1
      JUMPDEST 			uint public a=1
      PUSH [tag] 44			uint public a=1
      PUSH [tag] 45			uint public a=1
      JUMP 			uint public a=1
    tag 44			uint public a=1
      JUMPDEST 			uint public a=1
      PUSH 40			uint public a=1
      MLOAD 			uint public a=1
      DUP1 			uint public a=1
      DUP3 			uint public a=1
      DUP2 			uint public a=1
      MSTORE 			uint public a=1
      PUSH 20			uint public a=1
      ADD 			uint public a=1
      SWAP2 			uint public a=1
      POP 			uint public a=1
      POP 			uint public a=1
      PUSH 40			uint public a=1
      MLOAD 			uint public a=1
      DUP1 			uint public a=1
      SWAP2 			uint public a=1
      SUB 			uint public a=1
      SWAP1 			uint public a=1
      RETURN 			uint public a=1
    tag 6			uint public tier
      JUMPDEST 			uint public tier
      CALLVALUE 			uint public tier
      ISZERO 			uint public tier
      PUSH [tag] 46			uint public tier
      JUMPI 			uint public tier
      PUSH 0			uint public tier
      DUP1 			uint public tier
      REVERT 			uint public tier
    tag 46			uint public tier
      JUMPDEST 			uint public tier
      PUSH [tag] 47			uint public tier
      PUSH [tag] 48			uint public tier
      JUMP 			uint public tier
    tag 47			uint public tier
      JUMPDEST 			uint public tier
      PUSH 40			uint public tier
      MLOAD 			uint public tier
      DUP1 			uint public tier
      DUP3 			uint public tier
      DUP2 			uint public tier
      MSTORE 			uint public tier
      PUSH 20			uint public tier
      ADD 			uint public tier
      SWAP2 			uint public tier
      POP 			uint public tier
      POP 			uint public tier
      PUSH 40			uint public tier
      MLOAD 			uint public tier
      DUP1 			uint public tier
      SWAP2 			uint public tier
      SUB 			uint public tier
      SWAP1 			uint public tier
      RETURN 			uint public tier
    tag 7			uint256 public totalSupply
      JUMPDEST 			uint256 public totalSupply
      CALLVALUE 			uint256 public totalSupply
      ISZERO 			uint256 public totalSupply
      PUSH [tag] 49			uint256 public totalSupply
      JUMPI 			uint256 public totalSupply
      PUSH 0			uint256 public totalSupply
      DUP1 			uint256 public totalSupply
      REVERT 			uint256 public totalSupply
    tag 49			uint256 public totalSupply
      JUMPDEST 			uint256 public totalSupply
      PUSH [tag] 50			uint256 public totalSupply
      PUSH [tag] 51			uint256 public totalSupply
      JUMP 			uint256 public totalSupply
    tag 50			uint256 public totalSupply
      JUMPDEST 			uint256 public totalSupply
      PUSH 40			uint256 public totalSupply
      MLOAD 			uint256 public totalSupply
      DUP1 			uint256 public totalSupply
      DUP3 			uint256 public totalSupply
      DUP2 			uint256 public totalSupply
      MSTORE 			uint256 public totalSupply
      PUSH 20			uint256 public totalSupply
      ADD 			uint256 public totalSupply
      SWAP2 			uint256 public totalSupply
      POP 			uint256 public totalSupply
      POP 			uint256 public totalSupply
      PUSH 40			uint256 public totalSupply
      MLOAD 			uint256 public totalSupply
      DUP1 			uint256 public totalSupply
      SWAP2 			uint256 public totalSupply
      SUB 			uint256 public totalSupply
      SWAP1 			uint256 public totalSupply
      RETURN 			uint256 public totalSupply
    tag 8			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      CALLVALUE 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      PUSH [tag] 52			function transferFrom(address ...
      JUMPI 			function transferFrom(address ...
      PUSH 0			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      REVERT 			function transferFrom(address ...
    tag 52			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      PUSH [tag] 53			function transferFrom(address ...
      PUSH 4			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      CALLDATALOAD 			function transferFrom(address ...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transferFrom(address ...
      AND 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      PUSH 20			function transferFrom(address ...
      ADD 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      CALLDATALOAD 			function transferFrom(address ...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transferFrom(address ...
      AND 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      PUSH 20			function transferFrom(address ...
      ADD 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      CALLDATALOAD 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      PUSH 20			function transferFrom(address ...
      ADD 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      PUSH [tag] 54			function transferFrom(address ...
      JUMP 			function transferFrom(address ...
    tag 53			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      PUSH 40			function transferFrom(address ...
      MLOAD 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      DUP3 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      DUP2 			function transferFrom(address ...
      MSTORE 			function transferFrom(address ...
      PUSH 20			function transferFrom(address ...
      ADD 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      PUSH 40			function transferFrom(address ...
      MLOAD 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      SUB 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      RETURN 			function transferFrom(address ...
    tag 9			function transferEthFromContra...
      JUMPDEST 			function transferEthFromContra...
      CALLVALUE 			function transferEthFromContra...
      ISZERO 			function transferEthFromContra...
      PUSH [tag] 55			function transferEthFromContra...
      JUMPI 			function transferEthFromContra...
      PUSH 0			function transferEthFromContra...
      DUP1 			function transferEthFromContra...
      REVERT 			function transferEthFromContra...
    tag 55			function transferEthFromContra...
      JUMPDEST 			function transferEthFromContra...
      PUSH [tag] 56			function transferEthFromContra...
      PUSH 4			function transferEthFromContra...
      DUP1 			function transferEthFromContra...
      DUP1 			function transferEthFromContra...
      CALLDATALOAD 			function transferEthFromContra...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transferEthFromContra...
      AND 			function transferEthFromContra...
      SWAP1 			function transferEthFromContra...
      PUSH 20			function transferEthFromContra...
      ADD 			function transferEthFromContra...
      SWAP1 			function transferEthFromContra...
      SWAP2 			function transferEthFromContra...
      SWAP1 			function transferEthFromContra...
      DUP1 			function transferEthFromContra...
      CALLDATALOAD 			function transferEthFromContra...
      SWAP1 			function transferEthFromContra...
      PUSH 20			function transferEthFromContra...
      ADD 			function transferEthFromContra...
      SWAP1 			function transferEthFromContra...
      SWAP2 			function transferEthFromContra...
      SWAP1 			function transferEthFromContra...
      POP 			function transferEthFromContra...
      POP 			function transferEthFromContra...
      PUSH [tag] 57			function transferEthFromContra...
      JUMP 			function transferEthFromContra...
    tag 56			function transferEthFromContra...
      JUMPDEST 			function transferEthFromContra...
      STOP 			function transferEthFromContra...
    tag 10			uint32 public constant decimal...
      JUMPDEST 			uint32 public constant decimal...
      CALLVALUE 			uint32 public constant decimal...
      ISZERO 			uint32 public constant decimal...
      PUSH [tag] 58			uint32 public constant decimal...
      JUMPI 			uint32 public constant decimal...
      PUSH 0			uint32 public constant decimal...
      DUP1 			uint32 public constant decimal...
      REVERT 			uint32 public constant decimal...
    tag 58			uint32 public constant decimal...
      JUMPDEST 			uint32 public constant decimal...
      PUSH [tag] 59			uint32 public constant decimal...
      PUSH [tag] 60			uint32 public constant decimal...
      JUMP 			uint32 public constant decimal...
    tag 59			uint32 public constant decimal...
      JUMPDEST 			uint32 public constant decimal...
      PUSH 40			uint32 public constant decimal...
      MLOAD 			uint32 public constant decimal...
      DUP1 			uint32 public constant decimal...
      DUP3 			uint32 public constant decimal...
      PUSH FFFFFFFF			uint32 public constant decimal...
      AND 			uint32 public constant decimal...
      PUSH FFFFFFFF			uint32 public constant decimal...
      AND 			uint32 public constant decimal...
      DUP2 			uint32 public constant decimal...
      MSTORE 			uint32 public constant decimal...
      PUSH 20			uint32 public constant decimal...
      ADD 			uint32 public constant decimal...
      SWAP2 			uint32 public constant decimal...
      POP 			uint32 public constant decimal...
      POP 			uint32 public constant decimal...
      PUSH 40			uint32 public constant decimal...
      MLOAD 			uint32 public constant decimal...
      DUP1 			uint32 public constant decimal...
      SWAP2 			uint32 public constant decimal...
      SUB 			uint32 public constant decimal...
      SWAP1 			uint32 public constant decimal...
      RETURN 			uint32 public constant decimal...
    tag 11			function mint(address _to, uin...
      JUMPDEST 			function mint(address _to, uin...
      CALLVALUE 			function mint(address _to, uin...
      ISZERO 			function mint(address _to, uin...
      PUSH [tag] 61			function mint(address _to, uin...
      JUMPI 			function mint(address _to, uin...
      PUSH 0			function mint(address _to, uin...
      DUP1 			function mint(address _to, uin...
      REVERT 			function mint(address _to, uin...
    tag 61			function mint(address _to, uin...
      JUMPDEST 			function mint(address _to, uin...
      PUSH [tag] 62			function mint(address _to, uin...
      PUSH 4			function mint(address _to, uin...
      DUP1 			function mint(address _to, uin...
      DUP1 			function mint(address _to, uin...
      CALLDATALOAD 			function mint(address _to, uin...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function mint(address _to, uin...
      AND 			function mint(address _to, uin...
      SWAP1 			function mint(address _to, uin...
      PUSH 20			function mint(address _to, uin...
      ADD 			function mint(address _to, uin...
      SWAP1 			function mint(address _to, uin...
      SWAP2 			function mint(address _to, uin...
      SWAP1 			function mint(address _to, uin...
      DUP1 			function mint(address _to, uin...
      CALLDATALOAD 			function mint(address _to, uin...
      SWAP1 			function mint(address _to, uin...
      PUSH 20			function mint(address _to, uin...
      ADD 			function mint(address _to, uin...
      SWAP1 			function mint(address _to, uin...
      SWAP2 			function mint(address _to, uin...
      SWAP1 			function mint(address _to, uin...
      POP 			function mint(address _to, uin...
      POP 			function mint(address _to, uin...
      PUSH [tag] 63			function mint(address _to, uin...
      JUMP 			function mint(address _to, uin...
    tag 62			function mint(address _to, uin...
      JUMPDEST 			function mint(address _to, uin...
      PUSH 40			function mint(address _to, uin...
      MLOAD 			function mint(address _to, uin...
      DUP1 			function mint(address _to, uin...
      DUP3 			function mint(address _to, uin...
      ISZERO 			function mint(address _to, uin...
      ISZERO 			function mint(address _to, uin...
      ISZERO 			function mint(address _to, uin...
      ISZERO 			function mint(address _to, uin...
      DUP2 			function mint(address _to, uin...
      MSTORE 			function mint(address _to, uin...
      PUSH 20			function mint(address _to, uin...
      ADD 			function mint(address _to, uin...
      SWAP2 			function mint(address _to, uin...
      POP 			function mint(address _to, uin...
      POP 			function mint(address _to, uin...
      PUSH 40			function mint(address _to, uin...
      MLOAD 			function mint(address _to, uin...
      DUP1 			function mint(address _to, uin...
      SWAP2 			function mint(address _to, uin...
      SUB 			function mint(address _to, uin...
      SWAP1 			function mint(address _to, uin...
      RETURN 			function mint(address _to, uin...
    tag 12			function receiveApproval(addre...
      JUMPDEST 			function receiveApproval(addre...
      PUSH [tag] 64			function receiveApproval(addre...
      PUSH 4			function receiveApproval(addre...
      DUP1 			function receiveApproval(addre...
      DUP1 			function receiveApproval(addre...
      CALLDATALOAD 			function receiveApproval(addre...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function receiveApproval(addre...
      AND 			function receiveApproval(addre...
      SWAP1 			function receiveApproval(addre...
      PUSH 20			function receiveApproval(addre...
      ADD 			function receiveApproval(addre...
      SWAP1 			function receiveApproval(addre...
      SWAP2 			function receiveApproval(addre...
      SWAP1 			function receiveApproval(addre...
      DUP1 			function receiveApproval(addre...
      CALLDATALOAD 			function receiveApproval(addre...
      SWAP1 			function receiveApproval(addre...
      PUSH 20			function receiveApproval(addre...
      ADD 			function receiveApproval(addre...
      SWAP1 			function receiveApproval(addre...
      SWAP2 			function receiveApproval(addre...
      SWAP1 			function receiveApproval(addre...
      POP 			function receiveApproval(addre...
      POP 			function receiveApproval(addre...
      PUSH [tag] 65			function receiveApproval(addre...
      JUMP 			function receiveApproval(addre...
    tag 64			function receiveApproval(addre...
      JUMPDEST 			function receiveApproval(addre...
      STOP 			function receiveApproval(addre...
    tag 13			uint public b=1
      JUMPDEST 			uint public b=1
      CALLVALUE 			uint public b=1
      ISZERO 			uint public b=1
      PUSH [tag] 66			uint public b=1
      JUMPI 			uint public b=1
      PUSH 0			uint public b=1
      DUP1 			uint public b=1
      REVERT 			uint public b=1
    tag 66			uint public b=1
      JUMPDEST 			uint public b=1
      PUSH [tag] 67			uint public b=1
      PUSH [tag] 68			uint public b=1
      JUMP 			uint public b=1
    tag 67			uint public b=1
      JUMPDEST 			uint public b=1
      PUSH 40			uint public b=1
      MLOAD 			uint public b=1
      DUP1 			uint public b=1
      DUP3 			uint public b=1
      DUP2 			uint public b=1
      MSTORE 			uint public b=1
      PUSH 20			uint public b=1
      ADD 			uint public b=1
      SWAP2 			uint public b=1
      POP 			uint public b=1
      POP 			uint public b=1
      PUSH 40			uint public b=1
      MLOAD 			uint public b=1
      DUP1 			uint public b=1
      SWAP2 			uint public b=1
      SUB 			uint public b=1
      SWAP1 			uint public b=1
      RETURN 			uint public b=1
    tag 14			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      CALLVALUE 			function balanceOf(address _ow...
      ISZERO 			function balanceOf(address _ow...
      PUSH [tag] 69			function balanceOf(address _ow...
      JUMPI 			function balanceOf(address _ow...
      PUSH 0			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      REVERT 			function balanceOf(address _ow...
    tag 69			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      PUSH [tag] 70			function balanceOf(address _ow...
      PUSH 4			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      CALLDATALOAD 			function balanceOf(address _ow...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function balanceOf(address _ow...
      AND 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      PUSH 20			function balanceOf(address _ow...
      ADD 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      SWAP2 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      PUSH [tag] 71			function balanceOf(address _ow...
      JUMP 			function balanceOf(address _ow...
    tag 70			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      PUSH 40			function balanceOf(address _ow...
      MLOAD 			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      DUP3 			function balanceOf(address _ow...
      DUP2 			function balanceOf(address _ow...
      MSTORE 			function balanceOf(address _ow...
      PUSH 20			function balanceOf(address _ow...
      ADD 			function balanceOf(address _ow...
      SWAP2 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      PUSH 40			function balanceOf(address _ow...
      MLOAD 			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      SWAP2 			function balanceOf(address _ow...
      SUB 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      RETURN 			function balanceOf(address _ow...
    tag 15			function finishMinting() publi...
      JUMPDEST 			function finishMinting() publi...
      CALLVALUE 			function finishMinting() publi...
      ISZERO 			function finishMinting() publi...
      PUSH [tag] 72			function finishMinting() publi...
      JUMPI 			function finishMinting() publi...
      PUSH 0			function finishMinting() publi...
      DUP1 			function finishMinting() publi...
      REVERT 			function finishMinting() publi...
    tag 72			function finishMinting() publi...
      JUMPDEST 			function finishMinting() publi...
      PUSH [tag] 73			function finishMinting() publi...
      PUSH [tag] 74			function finishMinting() publi...
      JUMP 			function finishMinting() publi...
    tag 73			function finishMinting() publi...
      JUMPDEST 			function finishMinting() publi...
      PUSH 40			function finishMinting() publi...
      MLOAD 			function finishMinting() publi...
      DUP1 			function finishMinting() publi...
      DUP3 			function finishMinting() publi...
      ISZERO 			function finishMinting() publi...
      ISZERO 			function finishMinting() publi...
      ISZERO 			function finishMinting() publi...
      ISZERO 			function finishMinting() publi...
      DUP2 			function finishMinting() publi...
      MSTORE 			function finishMinting() publi...
      PUSH 20			function finishMinting() publi...
      ADD 			function finishMinting() publi...
      SWAP2 			function finishMinting() publi...
      POP 			function finishMinting() publi...
      POP 			function finishMinting() publi...
      PUSH 40			function finishMinting() publi...
      MLOAD 			function finishMinting() publi...
      DUP1 			function finishMinting() publi...
      SWAP2 			function finishMinting() publi...
      SUB 			function finishMinting() publi...
      SWAP1 			function finishMinting() publi...
      RETURN 			function finishMinting() publi...
    tag 16			address public owner
      JUMPDEST 			address public owner
      CALLVALUE 			address public owner
      ISZERO 			address public owner
      PUSH [tag] 75			address public owner
      JUMPI 			address public owner
      PUSH 0			address public owner
      DUP1 			address public owner
      REVERT 			address public owner
    tag 75			address public owner
      JUMPDEST 			address public owner
      PUSH [tag] 76			address public owner
      PUSH [tag] 77			address public owner
      JUMP 			address public owner
    tag 76			address public owner
      JUMPDEST 			address public owner
      PUSH 40			address public owner
      MLOAD 			address public owner
      DUP1 			address public owner
      DUP3 			address public owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address public owner
      AND 			address public owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address public owner
      AND 			address public owner
      DUP2 			address public owner
      MSTORE 			address public owner
      PUSH 20			address public owner
      ADD 			address public owner
      SWAP2 			address public owner
      POP 			address public owner
      POP 			address public owner
      PUSH 40			address public owner
      MLOAD 			address public owner
      DUP1 			address public owner
      SWAP2 			address public owner
      SUB 			address public owner
      SWAP1 			address public owner
      RETURN 			address public owner
    tag 17			string public constant symbol ...
      JUMPDEST 			string public constant symbol ...
      CALLVALUE 			string public constant symbol ...
      ISZERO 			string public constant symbol ...
      PUSH [tag] 78			string public constant symbol ...
      JUMPI 			string public constant symbol ...
      PUSH 0			string public constant symbol ...
      DUP1 			string public constant symbol ...
      REVERT 			string public constant symbol ...
    tag 78			string public constant symbol ...
      JUMPDEST 			string public constant symbol ...
      PUSH [tag] 79			string public constant symbol ...
      PUSH [tag] 80			string public constant symbol ...
      JUMP 			string public constant symbol ...
    tag 79			string public constant symbol ...
      JUMPDEST 			string public constant symbol ...
      PUSH 40			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      DUP3 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      SUB 			string public constant symbol ...
      DUP3 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      DUP4 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      SWAP2 			string public constant symbol ...
      POP 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      DUP4 			string public constant symbol ...
      DUP4 			string public constant symbol ...
      PUSH 0			;
    tag 81			olidity ^0.4.13;\n
/**
 * @tit...
      JUMPDEST 			olidity ^0.4.13;\n
/**
 * @tit...
      DUP4 			@ti
      DUP2 			 
      LT 			**\n * @tit
      ISZERO 			olidity ^0.4.13;\n
/**
 * @tit...
      PUSH [tag] 82			olidity ^0.4.13;\n
/**
 * @tit...
      JUMPI 			olidity ^0.4.13;\n
/**
 * @tit...
      DUP1 			e
      DUP3 			 * 
      ADD 			ace\n * @dev
      MLOAD 			interface\n * @dev 
      DUP2 			C
      DUP5 			of 
      ADD 			ion of ERC2
      MSTORE 			er version of ERC20 interface\...
      PUSH 20			* 
      DUP2 			c
      ADD 			Basic\n * @
      SWAP1 			ERC20Basic\n * @
      POP 			ERC20Basic\n * @
      PUSH [tag] 81			olidity ^0.4.13;\n
/**
 * @tit...
      JUMP 			olidity ^0.4.13;\n
/**
 * @tit...
    tag 82			olidity ^0.4.13;\n
/**
 * @tit...
      JUMPDEST 			olidity ^0.4.13;\n
/**
 * @tit...
      POP 			ity ^0.4.13;\n

      POP 			string public constant symbol ...
      POP 			string public constant symbol ...
      POP 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      POP 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      ADD 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      PUSH 1F			string public constant symbol ...
      AND 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      ISZERO 			string public constant symbol ...
      PUSH [tag] 84			string public constant symbol ...
      JUMPI 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      DUP3 			string public constant symbol ...
      SUB 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      PUSH 1			string public constant symbol ...
      DUP4 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      SUB 			string public constant symbol ...
      PUSH 100			string public constant symbol ...
      EXP 			string public constant symbol ...
      SUB 			string public constant symbol ...
      NOT 			string public constant symbol ...
      AND 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      SWAP2 			string public constant symbol ...
      POP 			string public constant symbol ...
    tag 84			string public constant symbol ...
      JUMPDEST 			string public constant symbol ...
      POP 			string public constant symbol ...
      SWAP3 			string public constant symbol ...
      POP 			string public constant symbol ...
      POP 			string public constant symbol ...
      POP 			string public constant symbol ...
      PUSH 40			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      SWAP2 			string public constant symbol ...
      SUB 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      RETURN 			string public constant symbol ...
    tag 18			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      CALLVALUE 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      PUSH [tag] 85			function transfer(address _to,...
      JUMPI 			function transfer(address _to,...
      PUSH 0			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      REVERT 			function transfer(address _to,...
    tag 85			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      PUSH [tag] 86			function transfer(address _to,...
      PUSH 4			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      CALLDATALOAD 			function transfer(address _to,...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transfer(address _to,...
      AND 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      PUSH 20			function transfer(address _to,...
      ADD 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      CALLDATALOAD 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      PUSH 20			function transfer(address _to,...
      ADD 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      PUSH [tag] 87			function transfer(address _to,...
      JUMP 			function transfer(address _to,...
    tag 86			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      PUSH 40			function transfer(address _to,...
      MLOAD 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      DUP3 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      DUP2 			function transfer(address _to,...
      MSTORE 			function transfer(address _to,...
      PUSH 20			function transfer(address _to,...
      ADD 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      PUSH 40			function transfer(address _to,...
      MLOAD 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      SUB 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      RETURN 			function transfer(address _to,...
    tag 19			function createTokens()public ...
      JUMPDEST 			function createTokens()public ...
      PUSH [tag] 88			function createTokens()public ...
      PUSH [tag] 29			function createTokens()public ...
      JUMP 			function createTokens()public ...
    tag 88			function createTokens()public ...
      JUMPDEST 			function createTokens()public ...
      STOP 			function createTokens()public ...
    tag 20			uint public c=1
      JUMPDEST 			uint public c=1
      CALLVALUE 			uint public c=1
      ISZERO 			uint public c=1
      PUSH [tag] 89			uint public c=1
      JUMPI 			uint public c=1
      PUSH 0			uint public c=1
      DUP1 			uint public c=1
      REVERT 			uint public c=1
    tag 89			uint public c=1
      JUMPDEST 			uint public c=1
      PUSH [tag] 90			uint public c=1
      PUSH [tag] 91			uint public c=1
      JUMP 			uint public c=1
    tag 90			uint public c=1
      JUMPDEST 			uint public c=1
      PUSH 40			uint public c=1
      MLOAD 			uint public c=1
      DUP1 			uint public c=1
      DUP3 			uint public c=1
      DUP2 			uint public c=1
      MSTORE 			uint public c=1
      PUSH 20			uint public c=1
      ADD 			uint public c=1
      SWAP2 			uint public c=1
      POP 			uint public c=1
      POP 			uint public c=1
      PUSH 40			uint public c=1
      MLOAD 			uint public c=1
      DUP1 			uint public c=1
      SWAP2 			uint public c=1
      SUB 			uint public c=1
      SWAP1 			uint public c=1
      RETURN 			uint public c=1
    tag 21			address public whom
      JUMPDEST 			address public whom
      CALLVALUE 			address public whom
      ISZERO 			address public whom
      PUSH [tag] 92			address public whom
      JUMPI 			address public whom
      PUSH 0			address public whom
      DUP1 			address public whom
      REVERT 			address public whom
    tag 92			address public whom
      JUMPDEST 			address public whom
      PUSH [tag] 93			address public whom
      PUSH [tag] 94			address public whom
      JUMP 			address public whom
    tag 93			address public whom
      JUMPDEST 			address public whom
      PUSH 40			address public whom
      MLOAD 			address public whom
      DUP1 			address public whom
      DUP3 			address public whom
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address public whom
      AND 			address public whom
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address public whom
      AND 			address public whom
      DUP2 			address public whom
      MSTORE 			address public whom
      PUSH 20			address public whom
      ADD 			address public whom
      SWAP2 			address public whom
      POP 			address public whom
      POP 			address public whom
      PUSH 40			address public whom
      MLOAD 			address public whom
      DUP1 			address public whom
      SWAP2 			address public whom
      SUB 			address public whom
      SWAP1 			address public whom
      RETURN 			address public whom
    tag 22			function allowance(address _ow...
      JUMPDEST 			function allowance(address _ow...
      CALLVALUE 			function allowance(address _ow...
      ISZERO 			function allowance(address _ow...
      PUSH [tag] 95			function allowance(address _ow...
      JUMPI 			function allowance(address _ow...
      PUSH 0			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      REVERT 			function allowance(address _ow...
    tag 95			function allowance(address _ow...
      JUMPDEST 			function allowance(address _ow...
      PUSH [tag] 96			function allowance(address _ow...
      PUSH 4			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      CALLDATALOAD 			function allowance(address _ow...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function allowance(address _ow...
      AND 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      PUSH 20			function allowance(address _ow...
      ADD 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      CALLDATALOAD 			function allowance(address _ow...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function allowance(address _ow...
      AND 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      PUSH 20			function allowance(address _ow...
      ADD 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      PUSH [tag] 97			function allowance(address _ow...
      JUMP 			function allowance(address _ow...
    tag 96			function allowance(address _ow...
      JUMPDEST 			function allowance(address _ow...
      PUSH 40			function allowance(address _ow...
      MLOAD 			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      DUP3 			function allowance(address _ow...
      DUP2 			function allowance(address _ow...
      MSTORE 			function allowance(address _ow...
      PUSH 20			function allowance(address _ow...
      ADD 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      PUSH 40			function allowance(address _ow...
      MLOAD 			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      SUB 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      RETURN 			function allowance(address _ow...
    tag 23			function distribute() public{\...
      JUMPDEST 			function distribute() public{\...
      CALLVALUE 			function distribute() public{\...
      ISZERO 			function distribute() public{\...
      PUSH [tag] 98			function distribute() public{\...
      JUMPI 			function distribute() public{\...
      PUSH 0			function distribute() public{\...
      DUP1 			function distribute() public{\...
      REVERT 			function distribute() public{\...
    tag 98			function distribute() public{\...
      JUMPDEST 			function distribute() public{\...
      PUSH [tag] 99			function distribute() public{\...
      PUSH [tag] 100			function distribute() public{\...
      JUMP 			function distribute() public{\...
    tag 99			function distribute() public{\...
      JUMPDEST 			function distribute() public{\...
      STOP 			function distribute() public{\...
    tag 24			function transferOwnership(add...
      JUMPDEST 			function transferOwnership(add...
      CALLVALUE 			function transferOwnership(add...
      ISZERO 			function transferOwnership(add...
      PUSH [tag] 101			function transferOwnership(add...
      JUMPI 			function transferOwnership(add...
      PUSH 0			function transferOwnership(add...
      DUP1 			function transferOwnership(add...
      REVERT 			function transferOwnership(add...
    tag 101			function transferOwnership(add...
      JUMPDEST 			function transferOwnership(add...
      PUSH [tag] 102			function transferOwnership(add...
      PUSH 4			function transferOwnership(add...
      DUP1 			function transferOwnership(add...
      DUP1 			function transferOwnership(add...
      CALLDATALOAD 			function transferOwnership(add...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transferOwnership(add...
      AND 			function transferOwnership(add...
      SWAP1 			function transferOwnership(add...
      PUSH 20			function transferOwnership(add...
      ADD 			function transferOwnership(add...
      SWAP1 			function transferOwnership(add...
      SWAP2 			function transferOwnership(add...
      SWAP1 			function transferOwnership(add...
      POP 			function transferOwnership(add...
      POP 			function transferOwnership(add...
      PUSH [tag] 103			function transferOwnership(add...
      JUMP 			function transferOwnership(add...
    tag 102			function transferOwnership(add...
      JUMPDEST 			function transferOwnership(add...
      STOP 			function transferOwnership(add...
    tag 25			MultiLevelToken public token =...
      JUMPDEST 			MultiLevelToken public token =...
      CALLVALUE 			MultiLevelToken public token =...
      ISZERO 			MultiLevelToken public token =...
      PUSH [tag] 104			MultiLevelToken public token =...
      JUMPI 			MultiLevelToken public token =...
      PUSH 0			MultiLevelToken public token =...
      DUP1 			MultiLevelToken public token =...
      REVERT 			MultiLevelToken public token =...
    tag 104			MultiLevelToken public token =...
      JUMPDEST 			MultiLevelToken public token =...
      PUSH [tag] 105			MultiLevelToken public token =...
      PUSH [tag] 106			MultiLevelToken public token =...
      JUMP 			MultiLevelToken public token =...
    tag 105			MultiLevelToken public token =...
      JUMPDEST 			MultiLevelToken public token =...
      PUSH 40			MultiLevelToken public token =...
      MLOAD 			MultiLevelToken public token =...
      DUP1 			MultiLevelToken public token =...
      DUP3 			MultiLevelToken public token =...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			MultiLevelToken public token =...
      AND 			MultiLevelToken public token =...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			MultiLevelToken public token =...
      AND 			MultiLevelToken public token =...
      DUP2 			MultiLevelToken public token =...
      MSTORE 			MultiLevelToken public token =...
      PUSH 20			MultiLevelToken public token =...
      ADD 			MultiLevelToken public token =...
      SWAP2 			MultiLevelToken public token =...
      POP 			MultiLevelToken public token =...
      POP 			MultiLevelToken public token =...
      PUSH 40			MultiLevelToken public token =...
      MLOAD 			MultiLevelToken public token =...
      DUP1 			MultiLevelToken public token =...
      SWAP2 			MultiLevelToken public token =...
      SUB 			MultiLevelToken public token =...
      SWAP1 			MultiLevelToken public token =...
      RETURN 			MultiLevelToken public token =...
    tag 29			function createTokens()public ...
      JUMPDEST 			function createTokens()public ...
      PUSH 0			uint _multisig
      PUSH B1A2BC2EC50000			1 ether / 20
      CALLVALUE 			msg.value
      GT 			msg.value > 1 ether / 20
      ISZERO 			assert(msg.value > 1 ether / 2...
      ISZERO 			assert(msg.value > 1 ether / 2...
      PUSH [tag] 108			assert(msg.value > 1 ether / 2...
      JUMPI 			assert(msg.value > 1 ether / 2...
      INVALID 			assert(msg.value > 1 ether / 2...
    tag 108			assert(msg.value > 1 ether / 2...
      JUMPDEST 			assert(msg.value > 1 ether / 2...
      PUSH [tag] 109			msg.value.mul(multisigPercent)...
      PUSH 64			100
      PUSH [tag] 110			msg.value.mul(multisigPercent)
      PUSH 5			multisigPercent
      SLOAD 			multisigPercent
      CALLVALUE 			msg.value
      PUSH [tag] 111			msg.value.mul
      SWAP1 			msg.value.mul
      SWAP2 			msg.value.mul(multisigPercent)
      SWAP1 			msg.value.mul(multisigPercent)
      PUSH FFFFFFFF			msg.value.mul(multisigPercent)
      AND 			msg.value.mul(multisigPercent)
      JUMP [in]			msg.value.mul(multisigPercent)
    tag 110			msg.value.mul(multisigPercent)
      JUMPDEST 			msg.value.mul(multisigPercent)
      PUSH [tag] 112			msg.value.mul(multisigPercent)...
      SWAP1 			msg.value.mul(multisigPercent)...
      SWAP2 			msg.value.mul(multisigPercent)...
      SWAP1 			msg.value.mul(multisigPercent)...
      PUSH FFFFFFFF			msg.value.mul(multisigPercent)...
      AND 			msg.value.mul(multisigPercent)...
      JUMP [in]			msg.value.mul(multisigPercent)...
    tag 109			msg.value.mul(multisigPercent)...
      JUMPDEST 			msg.value.mul(multisigPercent)...
      SWAP1 			uint _multisig = msg.value.mul...
      POP 			uint _multisig = msg.value.mul...
      PUSH [tag] 113			rate.mul(msg.value).div(1 ethe...
      PUSH DE0B6B3A7640000			1 ether
      PUSH [tag] 114			rate.mul(msg.value)
      CALLVALUE 			msg.value
      PUSH 7			rate
      SLOAD 			rate
      PUSH [tag] 111			rate.mul
      SWAP1 			rate.mul
      SWAP2 			rate.mul(msg.value)
      SWAP1 			rate.mul(msg.value)
      PUSH FFFFFFFF			rate.mul(msg.value)
      AND 			rate.mul(msg.value)
      JUMP [in]			rate.mul(msg.value)
    tag 114			rate.mul(msg.value)
      JUMPDEST 			rate.mul(msg.value)
      PUSH [tag] 112			rate.mul(msg.value).div
      SWAP1 			rate.mul(msg.value).div
      SWAP2 			rate.mul(msg.value).div(1 ethe...
      SWAP1 			rate.mul(msg.value).div(1 ethe...
      PUSH FFFFFFFF			rate.mul(msg.value).div(1 ethe...
      AND 			rate.mul(msg.value).div(1 ethe...
      JUMP [in]			rate.mul(msg.value).div(1 ethe...
    tag 113			rate.mul(msg.value).div(1 ethe...
      JUMPDEST 			rate.mul(msg.value).div(1 ethe...
      PUSH 8			tokens
      DUP2 			tokens = rate.mul(msg.value).d...
      SWAP1 			tokens = rate.mul(msg.value).d...
      SSTORE 			tokens = rate.mul(msg.value).d...
      POP 			tokens = rate.mul(msg.value).d...
      PUSH [tag] 115			tokens.mul(55).div(100)
      PUSH 64			100
      PUSH [tag] 116			tokens.mul(55)
      PUSH 37			55
      PUSH 8			tokens
      SLOAD 			tokens
      PUSH [tag] 111			tokens.mul
      SWAP1 			tokens.mul
      SWAP2 			tokens.mul(55)
      SWAP1 			tokens.mul(55)
      PUSH FFFFFFFF			tokens.mul(55)
      AND 			tokens.mul(55)
      JUMP [in]			tokens.mul(55)
    tag 116			tokens.mul(55)
      JUMPDEST 			tokens.mul(55)
      PUSH [tag] 112			tokens.mul(55).div
      SWAP1 			tokens.mul(55).div
      SWAP2 			tokens.mul(55).div(100)
      SWAP1 			tokens.mul(55).div(100)
      PUSH FFFFFFFF			tokens.mul(55).div(100)
      AND 			tokens.mul(55).div(100)
      JUMP [in]			tokens.mul(55).div(100)
    tag 115			tokens.mul(55).div(100)
      JUMPDEST 			tokens.mul(55).div(100)
      PUSH 8			tokens
      DUP2 			tokens = tokens.mul(55).div(10...
      SWAP1 			tokens = tokens.mul(55).div(10...
      SSTORE 			tokens = tokens.mul(55).div(10...
      POP 			tokens = tokens.mul(55).div(10...
      PUSH [tag] 117			msg.value.mul(35).div(10)
      PUSH A			10
      PUSH [tag] 118			msg.value.mul(35)
      PUSH 23			35
      CALLVALUE 			msg.value
      PUSH [tag] 111			msg.value.mul
      SWAP1 			msg.value.mul
      SWAP2 			msg.value.mul(35)
      SWAP1 			msg.value.mul(35)
      PUSH FFFFFFFF			msg.value.mul(35)
      AND 			msg.value.mul(35)
      JUMP [in]			msg.value.mul(35)
    tag 118			msg.value.mul(35)
      JUMPDEST 			msg.value.mul(35)
      PUSH [tag] 112			msg.value.mul(35).div
      SWAP1 			msg.value.mul(35).div
      SWAP2 			msg.value.mul(35).div(10)
      SWAP1 			msg.value.mul(35).div(10)
      PUSH FFFFFFFF			msg.value.mul(35).div(10)
      AND 			msg.value.mul(35).div(10)
      JUMP [in]			msg.value.mul(35).div(10)
    tag 117			msg.value.mul(35).div(10)
      JUMPDEST 			msg.value.mul(35).div(10)
      PUSH 11			parentMoney
      DUP2 			parentMoney = msg.value.mul(35...
      SWAP1 			parentMoney = msg.value.mul(35...
      SSTORE 			parentMoney = msg.value.mul(35...
      POP 			parentMoney = msg.value.mul(35...
      PUSH B1A2BC2EC50000			50000000000000000
      CALLVALUE 			msg.value
      LT 			msg.value >= 50000000000000000
      ISZERO 			msg.value >= 50000000000000000
      DUP1 			msg.value >= 50000000000000000...
      ISZERO 			msg.value >= 50000000000000000...
      PUSH [tag] 119			msg.value >= 50000000000000000...
      JUMPI 			msg.value >= 50000000000000000...
      POP 			msg.value >= 50000000000000000...
      PUSH 16345785D8A0000			100000000000000000
      CALLVALUE 			msg.value
      LT 			msg.value < 100000000000000000
    tag 119			msg.value >= 50000000000000000...
      JUMPDEST 			msg.value >= 50000000000000000...
      ISZERO 			if (msg.value >= 5000000000000...
      PUSH [tag] 120			if (msg.value >= 5000000000000...
      JUMPI 			if (msg.value >= 5000000000000...
      PUSH 1			1
      PUSH B			tier
      DUP2 			tier=1
      SWAP1 			tier=1
      SSTORE 			tier=1
      POP 			tier=1
      PUSH D			a
      SLOAD 			a
      PUSH 13			tree
      PUSH 0			tree[tier]
      PUSH B			tier
      SLOAD 			tier
      DUP2 			tree[tier]
      MSTORE 			tree[tier]
      PUSH 20			tree[tier]
      ADD 			tree[tier]
      SWAP1 			tree[tier]
      DUP2 			tree[tier]
      MSTORE 			tree[tier]
      PUSH 20			tree[tier]
      ADD 			tree[tier]
      PUSH 0			tree[tier]
      KECCAK256 			tree[tier]
      PUSH 0			tree[tier][msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			tree[tier][msg.sender]
      AND 			tree[tier][msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			tree[tier][msg.sender]
      AND 			tree[tier][msg.sender]
      DUP2 			tree[tier][msg.sender]
      MSTORE 			tree[tier][msg.sender]
      PUSH 20			tree[tier][msg.sender]
      ADD 			tree[tier][msg.sender]
      SWAP1 			tree[tier][msg.sender]
      DUP2 			tree[tier][msg.sender]
      MSTORE 			tree[tier][msg.sender]
      PUSH 20			tree[tier][msg.sender]
      ADD 			tree[tier][msg.sender]
      PUSH 0			tree[tier][msg.sender]
      KECCAK256 			tree[tier][msg.sender]
      DUP2 			tree[tier][msg.sender]=a
      SWAP1 			tree[tier][msg.sender]=a
      SSTORE 			tree[tier][msg.sender]=a
      POP 			tree[tier][msg.sender]=a
      CALLER 			msg.sender
      PUSH 14			order
      PUSH 0			order[tier]
      PUSH B			tier
      SLOAD 			tier
      DUP2 			order[tier]
      MSTORE 			order[tier]
      PUSH 20			order[tier]
      ADD 			order[tier]
      SWAP1 			order[tier]
      DUP2 			order[tier]
      MSTORE 			order[tier]
      PUSH 20			order[tier]
      ADD 			order[tier]
      PUSH 0			order[tier]
      KECCAK256 			order[tier]
      PUSH 0			order[tier][a]
      PUSH D			a
      SLOAD 			a
      DUP2 			order[tier][a]
      MSTORE 			order[tier][a]
      PUSH 20			order[tier][a]
      ADD 			order[tier][a]
      SWAP1 			order[tier][a]
      DUP2 			order[tier][a]
      MSTORE 			order[tier][a]
      PUSH 20			order[tier][a]
      ADD 			order[tier][a]
      PUSH 0			order[tier][a]
      KECCAK256 			order[tier][a]
      PUSH 0			order[tier][a]
      PUSH 100			order[tier][a]=msg.sender
      EXP 			order[tier][a]=msg.sender
      DUP2 			order[tier][a]=msg.sender
      SLOAD 			order[tier][a]=msg.sender
      DUP2 			order[tier][a]=msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			order[tier][a]=msg.sender
      MUL 			order[tier][a]=msg.sender
      NOT 			order[tier][a]=msg.sender
      AND 			order[tier][a]=msg.sender
      SWAP1 			order[tier][a]=msg.sender
      DUP4 			order[tier][a]=msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			order[tier][a]=msg.sender
      AND 			order[tier][a]=msg.sender
      MUL 			order[tier][a]=msg.sender
      OR 			order[tier][a]=msg.sender
      SWAP1 			order[tier][a]=msg.sender
      SSTORE 			order[tier][a]=msg.sender
      POP 			order[tier][a]=msg.sender
      PUSH D			a
      SLOAD 			a
      PUSH 10			parent
      DUP2 			parent = a
      SWAP1 			parent = a
      SSTORE 			parent = a
      POP 			parent = a
      PUSH 1			1
      PUSH D			a
      PUSH 0			a
      DUP3 			a+=1
      DUP3 			a+=1
      SLOAD 			a+=1
      ADD 			a+=1
      SWAP3 			a+=1
      POP 			a+=1
      POP 			a+=1
      DUP2 			a+=1
      SWAP1 			a+=1
      SSTORE 			a+=1
      POP 			a+=1
      PUSH [tag] 121			distribute()
      PUSH [tag] 100			distribute
      JUMP [in]			distribute()
    tag 121			distribute()
      JUMPDEST 			distribute()
      PUSH [tag] 122			if (msg.value >= 5000000000000...
      JUMP 			if (msg.value >= 5000000000000...
    tag 120			if (msg.value >= 5000000000000...
      JUMPDEST 			if (msg.value >= 5000000000000...
      PUSH 16345785D8A0000			100000000000000000
      CALLVALUE 			msg.value
      LT 			msg.value >= 10000000000000000...
      ISZERO 			msg.value >= 10000000000000000...
      DUP1 			msg.value >= 10000000000000000...
      ISZERO 			msg.value >= 10000000000000000...
      PUSH [tag] 123			msg.value >= 10000000000000000...
      JUMPI 			msg.value >= 10000000000000000...
      POP 			msg.value >= 10000000000000000...
      PUSH 6F05B59D3B20000			500000000000000000
      CALLVALUE 			msg.value
      LT 			msg.value < 500000000000000000
    tag 123			msg.value >= 10000000000000000...
      JUMPDEST 			msg.value >= 10000000000000000...
      ISZERO 			if (msg.value >= 1000000000000...
      PUSH [tag] 124			if (msg.value >= 1000000000000...
      JUMPI 			if (msg.value >= 1000000000000...
      PUSH 2			2
      PUSH B			tier
      DUP2 			tier=2
      SWAP1 			tier=2
      SSTORE 			tier=2
      POP 			tier=2
      PUSH E			b
      SLOAD 			b
      PUSH 13			tree
      PUSH 0			tree[tier]
      PUSH B			tier
      SLOAD 			tier
      DUP2 			tree[tier]
      MSTORE 			tree[tier]
      PUSH 20			tree[tier]
      ADD 			tree[tier]
      SWAP1 			tree[tier]
      DUP2 			tree[tier]
      MSTORE 			tree[tier]
      PUSH 20			tree[tier]
      ADD 			tree[tier]
      PUSH 0			tree[tier]
      KECCAK256 			tree[tier]
      PUSH 0			tree[tier][msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			tree[tier][msg.sender]
      AND 			tree[tier][msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			tree[tier][msg.sender]
      AND 			tree[tier][msg.sender]
      DUP2 			tree[tier][msg.sender]
      MSTORE 			tree[tier][msg.sender]
      PUSH 20			tree[tier][msg.sender]
      ADD 			tree[tier][msg.sender]
      SWAP1 			tree[tier][msg.sender]
      DUP2 			tree[tier][msg.sender]
      MSTORE 			tree[tier][msg.sender]
      PUSH 20			tree[tier][msg.sender]
      ADD 			tree[tier][msg.sender]
      PUSH 0			tree[tier][msg.sender]
      KECCAK256 			tree[tier][msg.sender]
      DUP2 			tree[tier][msg.sender]=b
      SWAP1 			tree[tier][msg.sender]=b
      SSTORE 			tree[tier][msg.sender]=b
      POP 			tree[tier][msg.sender]=b
      CALLER 			msg.sender
      PUSH 14			order
      PUSH 0			order[tier]
      PUSH B			tier
      SLOAD 			tier
      DUP2 			order[tier]
      MSTORE 			order[tier]
      PUSH 20			order[tier]
      ADD 			order[tier]
      SWAP1 			order[tier]
      DUP2 			order[tier]
      MSTORE 			order[tier]
      PUSH 20			order[tier]
      ADD 			order[tier]
      PUSH 0			order[tier]
      KECCAK256 			order[tier]
      PUSH 0			order[tier][b]
      PUSH E			b
      SLOAD 			b
      DUP2 			order[tier][b]
      MSTORE 			order[tier][b]
      PUSH 20			order[tier][b]
      ADD 			order[tier][b]
      SWAP1 			order[tier][b]
      DUP2 			order[tier][b]
      MSTORE 			order[tier][b]
      PUSH 20			order[tier][b]
      ADD 			order[tier][b]
      PUSH 0			order[tier][b]
      KECCAK256 			order[tier][b]
      PUSH 0			order[tier][b]
      PUSH 100			order[tier][b]=msg.sender
      EXP 			order[tier][b]=msg.sender
      DUP2 			order[tier][b]=msg.sender
      SLOAD 			order[tier][b]=msg.sender
      DUP2 			order[tier][b]=msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			order[tier][b]=msg.sender
      MUL 			order[tier][b]=msg.sender
      NOT 			order[tier][b]=msg.sender
      AND 			order[tier][b]=msg.sender
      SWAP1 			order[tier][b]=msg.sender
      DUP4 			order[tier][b]=msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			order[tier][b]=msg.sender
      AND 			order[tier][b]=msg.sender
      MUL 			order[tier][b]=msg.sender
      OR 			order[tier][b]=msg.sender
      SWAP1 			order[tier][b]=msg.sender
      SSTORE 			order[tier][b]=msg.sender
      POP 			order[tier][b]=msg.sender
      PUSH E			b
      SLOAD 			b
      PUSH 10			parent
      DUP2 			parent = b
      SWAP1 			parent = b
      SSTORE 			parent = b
      POP 			parent = b
      PUSH 1			1
      PUSH E			b
      PUSH 0			b
      DUP3 			b+=1
      DUP3 			b+=1
      SLOAD 			b+=1
      ADD 			b+=1
      SWAP3 			b+=1
      POP 			b+=1
      POP 			b+=1
      DUP2 			b+=1
      SWAP1 			b+=1
      SSTORE 			b+=1
      POP 			b+=1
      PUSH [tag] 125			distribute()
      PUSH [tag] 100			distribute
      JUMP [in]			distribute()
    tag 125			distribute()
      JUMPDEST 			distribute()
      PUSH [tag] 126			if (msg.value >= 1000000000000...
      JUMP 			if (msg.value >= 1000000000000...
    tag 124			if (msg.value >= 1000000000000...
      JUMPDEST 			if (msg.value >= 1000000000000...
      PUSH 6F05B59D3B20000			500000000000000000
      CALLVALUE 			msg.value
      LT 			msg.value >= 50000000000000000...
      ISZERO 			msg.value >= 50000000000000000...
      ISZERO 			if(msg.value >= 50000000000000...
      PUSH [tag] 127			if(msg.value >= 50000000000000...
      JUMPI 			if(msg.value >= 50000000000000...
      PUSH 3			3
      PUSH B			tier
      DUP2 			tier=3
      SWAP1 			tier=3
      SSTORE 			tier=3
      POP 			tier=3
      PUSH F			c
      SLOAD 			c
      PUSH 13			tree
      PUSH 0			tree[tier]
      PUSH B			tier
      SLOAD 			tier
      DUP2 			tree[tier]
      MSTORE 			tree[tier]
      PUSH 20			tree[tier]
      ADD 			tree[tier]
      SWAP1 			tree[tier]
      DUP2 			tree[tier]
      MSTORE 			tree[tier]
      PUSH 20			tree[tier]
      ADD 			tree[tier]
      PUSH 0			tree[tier]
      KECCAK256 			tree[tier]
      PUSH 0			tree[tier][msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			tree[tier][msg.sender]
      AND 			tree[tier][msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			tree[tier][msg.sender]
      AND 			tree[tier][msg.sender]
      DUP2 			tree[tier][msg.sender]
      MSTORE 			tree[tier][msg.sender]
      PUSH 20			tree[tier][msg.sender]
      ADD 			tree[tier][msg.sender]
      SWAP1 			tree[tier][msg.sender]
      DUP2 			tree[tier][msg.sender]
      MSTORE 			tree[tier][msg.sender]
      PUSH 20			tree[tier][msg.sender]
      ADD 			tree[tier][msg.sender]
      PUSH 0			tree[tier][msg.sender]
      KECCAK256 			tree[tier][msg.sender]
      DUP2 			tree[tier][msg.sender]=c
      SWAP1 			tree[tier][msg.sender]=c
      SSTORE 			tree[tier][msg.sender]=c
      POP 			tree[tier][msg.sender]=c
      CALLER 			msg.sender
      PUSH 14			order
      PUSH 0			order[tier]
      PUSH B			tier
      SLOAD 			tier
      DUP2 			order[tier]
      MSTORE 			order[tier]
      PUSH 20			order[tier]
      ADD 			order[tier]
      SWAP1 			order[tier]
      DUP2 			order[tier]
      MSTORE 			order[tier]
      PUSH 20			order[tier]
      ADD 			order[tier]
      PUSH 0			order[tier]
      KECCAK256 			order[tier]
      PUSH 0			order[tier][c]
      PUSH F			c
      SLOAD 			c
      DUP2 			order[tier][c]
      MSTORE 			order[tier][c]
      PUSH 20			order[tier][c]
      ADD 			order[tier][c]
      SWAP1 			order[tier][c]
      DUP2 			order[tier][c]
      MSTORE 			order[tier][c]
      PUSH 20			order[tier][c]
      ADD 			order[tier][c]
      PUSH 0			order[tier][c]
      KECCAK256 			order[tier][c]
      PUSH 0			order[tier][c]
      PUSH 100			order[tier][c]=msg.sender
      EXP 			order[tier][c]=msg.sender
      DUP2 			order[tier][c]=msg.sender
      SLOAD 			order[tier][c]=msg.sender
      DUP2 			order[tier][c]=msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			order[tier][c]=msg.sender
      MUL 			order[tier][c]=msg.sender
      NOT 			order[tier][c]=msg.sender
      AND 			order[tier][c]=msg.sender
      SWAP1 			order[tier][c]=msg.sender
      DUP4 			order[tier][c]=msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			order[tier][c]=msg.sender
      AND 			order[tier][c]=msg.sender
      MUL 			order[tier][c]=msg.sender
      OR 			order[tier][c]=msg.sender
      SWAP1 			order[tier][c]=msg.sender
      SSTORE 			order[tier][c]=msg.sender
      POP 			order[tier][c]=msg.sender
      PUSH F			c
      SLOAD 			c
      PUSH 10			parent
      DUP2 			parent = c
      SWAP1 			parent = c
      SSTORE 			parent = c
      POP 			parent = c
      PUSH 1			1
      PUSH F			c
      PUSH 0			c
      DUP3 			c+=1
      DUP3 			c+=1
      SLOAD 			c+=1
      ADD 			c+=1
      SWAP3 			c+=1
      POP 			c+=1
      POP 			c+=1
      DUP2 			c+=1
      SWAP1 			c+=1
      SSTORE 			c+=1
      POP 			c+=1
      PUSH [tag] 128			distribute()
      PUSH [tag] 100			distribute
      JUMP [in]			distribute()
    tag 128			distribute()
      JUMPDEST 			distribute()
    tag 127			if(msg.value >= 50000000000000...
      JUMPDEST 			if(msg.value >= 50000000000000...
    tag 126			if (msg.value >= 1000000000000...
      JUMPDEST 			if (msg.value >= 1000000000000...
    tag 122			if (msg.value >= 5000000000000...
      JUMPDEST 			if (msg.value >= 5000000000000...
      PUSH 6			token
      PUSH 0			token
      SWAP1 			token
      SLOAD 			token
      SWAP1 			token
      PUSH 100			token
      EXP 			token
      SWAP1 			token
      DIV 			token
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token
      AND 			token
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.mint
      AND 			token.mint
      PUSH 40C10F19			token.mint
      CALLER 			msg.sender
      PUSH 8			tokens
      SLOAD 			tokens
      PUSH 0			token.mint(msg.sender, tokens)
      PUSH 40			token.mint(msg.sender, tokens)
      MLOAD 			token.mint(msg.sender, tokens)
      PUSH 20			token.mint(msg.sender, tokens)
      ADD 			token.mint(msg.sender, tokens)
      MSTORE 			token.mint(msg.sender, tokens)
      PUSH 40			token.mint(msg.sender, tokens)
      MLOAD 			token.mint(msg.sender, tokens)
      DUP4 			token.mint(msg.sender, tokens)
      PUSH FFFFFFFF			token.mint(msg.sender, tokens)
      AND 			token.mint(msg.sender, tokens)
      PUSH 100000000000000000000000000000000000000000000000000000000			token.mint(msg.sender, tokens)
      MUL 			token.mint(msg.sender, tokens)
      DUP2 			token.mint(msg.sender, tokens)
      MSTORE 			token.mint(msg.sender, tokens)
      PUSH 4			token.mint(msg.sender, tokens)
      ADD 			token.mint(msg.sender, tokens)
      DUP1 			token.mint(msg.sender, tokens)
      DUP4 			token.mint(msg.sender, tokens)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.mint(msg.sender, tokens)
      AND 			token.mint(msg.sender, tokens)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.mint(msg.sender, tokens)
      AND 			token.mint(msg.sender, tokens)
      DUP2 			token.mint(msg.sender, tokens)
      MSTORE 			token.mint(msg.sender, tokens)
      PUSH 20			token.mint(msg.sender, tokens)
      ADD 			token.mint(msg.sender, tokens)
      DUP3 			token.mint(msg.sender, tokens)
      DUP2 			token.mint(msg.sender, tokens)
      MSTORE 			token.mint(msg.sender, tokens)
      PUSH 20			token.mint(msg.sender, tokens)
      ADD 			token.mint(msg.sender, tokens)
      SWAP3 			token.mint(msg.sender, tokens)
      POP 			token.mint(msg.sender, tokens)
      POP 			token.mint(msg.sender, tokens)
      POP 			token.mint(msg.sender, tokens)
      PUSH 20			token.mint(msg.sender, tokens)
      PUSH 40			token.mint(msg.sender, tokens)
      MLOAD 			token.mint(msg.sender, tokens)
      DUP1 			token.mint(msg.sender, tokens)
      DUP4 			token.mint(msg.sender, tokens)
      SUB 			token.mint(msg.sender, tokens)
      DUP2 			token.mint(msg.sender, tokens)
      PUSH 0			token.mint(msg.sender, tokens)
      DUP8 			token.mint(msg.sender, tokens)
      DUP1 			token.mint(msg.sender, tokens)
      EXTCODESIZE 			token.mint(msg.sender, tokens)
      ISZERO 			token.mint(msg.sender, tokens)
      ISZERO 			token.mint(msg.sender, tokens)
      PUSH [tag] 129			token.mint(msg.sender, tokens)
      JUMPI 			token.mint(msg.sender, tokens)
      PUSH 0			token.mint(msg.sender, tokens)
      DUP1 			token.mint(msg.sender, tokens)
      REVERT 			token.mint(msg.sender, tokens)
    tag 129			token.mint(msg.sender, tokens)
      JUMPDEST 			token.mint(msg.sender, tokens)
      PUSH 2C6			token.mint(msg.sender, tokens)
      GAS 			token.mint(msg.sender, tokens)
      SUB 			token.mint(msg.sender, tokens)
      CALL 			token.mint(msg.sender, tokens)
      ISZERO 			token.mint(msg.sender, tokens)
      ISZERO 			token.mint(msg.sender, tokens)
      PUSH [tag] 130			token.mint(msg.sender, tokens)
      JUMPI 			token.mint(msg.sender, tokens)
      PUSH 0			token.mint(msg.sender, tokens)
      DUP1 			token.mint(msg.sender, tokens)
      REVERT 			token.mint(msg.sender, tokens)
    tag 130			token.mint(msg.sender, tokens)
      JUMPDEST 			token.mint(msg.sender, tokens)
      POP 			token.mint(msg.sender, tokens)
      POP 			token.mint(msg.sender, tokens)
      POP 			token.mint(msg.sender, tokens)
      PUSH 40			token.mint(msg.sender, tokens)
      MLOAD 			token.mint(msg.sender, tokens)
      DUP1 			token.mint(msg.sender, tokens)
      MLOAD 			token.mint(msg.sender, tokens)
      SWAP1 			token.mint(msg.sender, tokens)
      POP 			token.mint(msg.sender, tokens)
      POP 			token.mint(msg.sender, tokens)
      PUSH 4			multisig
      PUSH 0			multisig
      SWAP1 			multisig
      SLOAD 			multisig
      SWAP1 			multisig
      PUSH 100			multisig
      EXP 			multisig
      SWAP1 			multisig
      DIV 			multisig
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			multisig
      AND 			multisig
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			multisig.transfer
      AND 			multisig.transfer
      PUSH 8FC			multisig.transfer(_multisig)
      DUP3 			_multisig
      SWAP1 			multisig.transfer(_multisig)
      DUP2 			multisig.transfer(_multisig)
      ISZERO 			multisig.transfer(_multisig)
      MUL 			multisig.transfer(_multisig)
      SWAP1 			multisig.transfer(_multisig)
      PUSH 40			multisig.transfer(_multisig)
      MLOAD 			multisig.transfer(_multisig)
      PUSH 0			multisig.transfer(_multisig)
      PUSH 40			multisig.transfer(_multisig)
      MLOAD 			multisig.transfer(_multisig)
      DUP1 			multisig.transfer(_multisig)
      DUP4 			multisig.transfer(_multisig)
      SUB 			multisig.transfer(_multisig)
      DUP2 			multisig.transfer(_multisig)
      DUP6 			multisig.transfer(_multisig)
      DUP9 			multisig.transfer(_multisig)
      DUP9 			multisig.transfer(_multisig)
      CALL 			multisig.transfer(_multisig)
      SWAP4 			multisig.transfer(_multisig)
      POP 			multisig.transfer(_multisig)
      POP 			multisig.transfer(_multisig)
      POP 			multisig.transfer(_multisig)
      POP 			multisig.transfer(_multisig)
      ISZERO 			multisig.transfer(_multisig)
      ISZERO 			multisig.transfer(_multisig)
      PUSH [tag] 131			multisig.transfer(_multisig)
      JUMPI 			multisig.transfer(_multisig)
      PUSH 0			multisig.transfer(_multisig)
      DUP1 			multisig.transfer(_multisig)
      REVERT 			multisig.transfer(_multisig)
    tag 131			multisig.transfer(_multisig)
      JUMPDEST 			multisig.transfer(_multisig)
      POP 			function createTokens()public ...
      JUMP [out]			function createTokens()public ...
    tag 32			bool public mintingFinished = ...
      JUMPDEST 			bool public mintingFinished = ...
      PUSH 3			bool public mintingFinished = ...
      PUSH 14			bool public mintingFinished = ...
      SWAP1 			bool public mintingFinished = ...
      SLOAD 			bool public mintingFinished = ...
      SWAP1 			bool public mintingFinished = ...
      PUSH 100			bool public mintingFinished = ...
      EXP 			bool public mintingFinished = ...
      SWAP1 			bool public mintingFinished = ...
      DIV 			bool public mintingFinished = ...
      PUSH FF			bool public mintingFinished = ...
      AND 			bool public mintingFinished = ...
      DUP2 			bool public mintingFinished = ...
      JUMP [out]			bool public mintingFinished = ...
    tag 35			string public constant name = ...
      JUMPDEST 			string public constant name = ...
      PUSH 40			string public constant name = ...
      DUP1 			string public constant name = ...
      MLOAD 			string public constant name = ...
      SWAP1 			string public constant name = ...
      DUP2 			string public constant name = ...
      ADD 			string public constant name = ...
      PUSH 40			string public constant name = ...
      MSTORE 			string public constant name = ...
      DUP1 			string public constant name = ...
      PUSH 15			string public constant name = ...
      DUP2 			string public constant name = ...
      MSTORE 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      PUSH 4D756C74692D4D61726B6574696E6720746F6B656E0000000000000000000000			string public constant name = ...
      DUP2 			string public constant name = ...
      MSTORE 			string public constant name = ...
      POP 			string public constant name = ...
      DUP2 			string public constant name = ...
      JUMP [out]			string public constant name = ...
    tag 42			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      PUSH 0			bool
      DUP1 			0
      DUP3 			_value
      EQ 			_value == 0
      DUP1 			(_value == 0) || (allowed[msg....
      PUSH [tag] 133			(_value == 0) || (allowed[msg....
      JUMPI 			(_value == 0) || (allowed[msg....
      POP 			(_value == 0) || (allowed[msg....
      PUSH 0			0
      PUSH 2			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP6 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      SLOAD 			allowed[msg.sender][_spender]
      EQ 			allowed[msg.sender][_spender] ...
    tag 133			(_value == 0) || (allowed[msg....
      JUMPDEST 			(_value == 0) || (allowed[msg....
      ISZERO 			require((_value == 0) || (allo...
      ISZERO 			require((_value == 0) || (allo...
      PUSH [tag] 134			require((_value == 0) || (allo...
      JUMPI 			require((_value == 0) || (allo...
      PUSH 0			require((_value == 0) || (allo...
      DUP1 			require((_value == 0) || (allo...
      REVERT 			require((_value == 0) || (allo...
    tag 134			require((_value == 0) || (allo...
      JUMPDEST 			require((_value == 0) || (allo...
      DUP2 			_value
      PUSH 2			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP6 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender] ...
      SWAP1 			allowed[msg.sender][_spender] ...
      SSTORE 			allowed[msg.sender][_spender] ...
      POP 			allowed[msg.sender][_spender] ...
      DUP3 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Approval(msg.sender, _spender,...
      AND 			Approval(msg.sender, _spender,...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Approval(msg.sender, _spender,...
      AND 			Approval(msg.sender, _spender,...
      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925			Approval(msg.sender, _spender,...
      DUP5 			_value
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      DUP3 			Approval(msg.sender, _spender,...
      DUP2 			Approval(msg.sender, _spender,...
      MSTORE 			Approval(msg.sender, _spender,...
      PUSH 20			Approval(msg.sender, _spender,...
      ADD 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      POP 			Approval(msg.sender, _spender,...
      POP 			Approval(msg.sender, _spender,...
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      SUB 			Approval(msg.sender, _spender,...
      SWAP1 			Approval(msg.sender, _spender,...
      LOG3 			Approval(msg.sender, _spender,...
      PUSH 1			true
      SWAP1 			return true
      POP 			return true
      SWAP3 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      POP 			function approve(address _spen...
      POP 			function approve(address _spen...
      JUMP [out]			function approve(address _spen...
    tag 45			uint public a=1
      JUMPDEST 			uint public a=1
      PUSH D			uint public a=1
      SLOAD 			uint public a=1
      DUP2 			uint public a=1
      JUMP [out]			uint public a=1
    tag 48			uint public tier
      JUMPDEST 			uint public tier
      PUSH B			uint public tier
      SLOAD 			uint public tier
      DUP2 			uint public tier
      JUMP [out]			uint public tier
    tag 51			uint256 public totalSupply
      JUMPDEST 			uint256 public totalSupply
      PUSH 0			uint256 public totalSupply
      SLOAD 			uint256 public totalSupply
      DUP2 			uint256 public totalSupply
      JUMP [out]			uint256 public totalSupply
    tag 54			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      PUSH 0			bool
      DUP1 			uint _allowance
      PUSH 2			allowed
      PUSH 0			allowed[_from]
      DUP7 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      SWAP1 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      PUSH 0			allowed[_from]
      KECCAK256 			allowed[_from]
      PUSH 0			allowed[_from][msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      SWAP1 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      PUSH 0			allowed[_from][msg.sender]
      KECCAK256 			allowed[_from][msg.sender]
      SLOAD 			allowed[_from][msg.sender]
      SWAP1 			uint _allowance = allowed[_fro...
      POP 			uint _allowance = allowed[_fro...
      PUSH [tag] 136			balances[_to].add(_value)
      DUP4 			_value
      PUSH 1			balances
      PUSH 0			balances[_to]
      DUP8 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      SLOAD 			balances[_to]
      PUSH [tag] 137			balances[_to].add
      SWAP1 			balances[_to].add
      SWAP2 			balances[_to].add(_value)
      SWAP1 			balances[_to].add(_value)
      PUSH FFFFFFFF			balances[_to].add(_value)
      AND 			balances[_to].add(_value)
      JUMP [in]			balances[_to].add(_value)
    tag 136			balances[_to].add(_value)
      JUMPDEST 			balances[_to].add(_value)
      PUSH 1			balances
      PUSH 0			balances[_to]
      DUP7 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      DUP2 			balances[_to] = balances[_to]....
      SWAP1 			balances[_to] = balances[_to]....
      SSTORE 			balances[_to] = balances[_to]....
      POP 			balances[_to] = balances[_to]....
      PUSH [tag] 138			balances[_from].sub(_value)
      DUP4 			_value
      PUSH 1			balances
      PUSH 0			balances[_from]
      DUP9 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      SWAP1 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      PUSH 0			balances[_from]
      KECCAK256 			balances[_from]
      SLOAD 			balances[_from]
      PUSH [tag] 139			balances[_from].sub
      SWAP1 			balances[_from].sub
      SWAP2 			balances[_from].sub(_value)
      SWAP1 			balances[_from].sub(_value)
      PUSH FFFFFFFF			balances[_from].sub(_value)
      AND 			balances[_from].sub(_value)
      JUMP [in]			balances[_from].sub(_value)
    tag 138			balances[_from].sub(_value)
      JUMPDEST 			balances[_from].sub(_value)
      PUSH 1			balances
      PUSH 0			balances[_from]
      DUP8 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      SWAP1 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      PUSH 0			balances[_from]
      KECCAK256 			balances[_from]
      DUP2 			balances[_from] = balances[_fr...
      SWAP1 			balances[_from] = balances[_fr...
      SSTORE 			balances[_from] = balances[_fr...
      POP 			balances[_from] = balances[_fr...
      PUSH [tag] 140			_allowance.sub(_value)
      DUP4 			_value
      DUP3 			_allowance
      PUSH [tag] 139			_allowance.sub
      SWAP1 			_allowance.sub
      SWAP2 			_allowance.sub(_value)
      SWAP1 			_allowance.sub(_value)
      PUSH FFFFFFFF			_allowance.sub(_value)
      AND 			_allowance.sub(_value)
      JUMP [in]			_allowance.sub(_value)
    tag 140			_allowance.sub(_value)
      JUMPDEST 			_allowance.sub(_value)
      PUSH 2			allowed
      PUSH 0			allowed[_from]
      DUP8 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      SWAP1 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      PUSH 0			allowed[_from]
      KECCAK256 			allowed[_from]
      PUSH 0			allowed[_from][msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      SWAP1 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      PUSH 0			allowed[_from][msg.sender]
      KECCAK256 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender] = _...
      SWAP1 			allowed[_from][msg.sender] = _...
      SSTORE 			allowed[_from][msg.sender] = _...
      POP 			allowed[_from][msg.sender] = _...
      DUP4 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(_from, _to, _value)
      AND 			Transfer(_from, _to, _value)
      DUP6 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(_from, _to, _value)
      AND 			Transfer(_from, _to, _value)
      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(_from, _to, _value)
      DUP6 			_value
      PUSH 40			Transfer(_from, _to, _value)
      MLOAD 			Transfer(_from, _to, _value)
      DUP1 			Transfer(_from, _to, _value)
      DUP3 			Transfer(_from, _to, _value)
      DUP2 			Transfer(_from, _to, _value)
      MSTORE 			Transfer(_from, _to, _value)
      PUSH 20			Transfer(_from, _to, _value)
      ADD 			Transfer(_from, _to, _value)
      SWAP2 			Transfer(_from, _to, _value)
      POP 			Transfer(_from, _to, _value)
      POP 			Transfer(_from, _to, _value)
      PUSH 40			Transfer(_from, _to, _value)
      MLOAD 			Transfer(_from, _to, _value)
      DUP1 			Transfer(_from, _to, _value)
      SWAP2 			Transfer(_from, _to, _value)
      SUB 			Transfer(_from, _to, _value)
      SWAP1 			Transfer(_from, _to, _value)
      LOG3 			Transfer(_from, _to, _value)
      PUSH 1			true
      SWAP2 			return true
      POP 			return true
      POP 			function transferFrom(address ...
      SWAP4 			function transferFrom(address ...
      SWAP3 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      JUMP [out]			function transferFrom(address ...
    tag 57			function transferEthFromContra...
      JUMPDEST 			function transferEthFromContra...
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 142			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 142			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH A			DEC
      SLOAD 			DEC
      DUP2 			amount
      MUL 			amount*DEC
      SWAP1 			amount = amount*DEC
      POP 			amount = amount*DEC
      DUP2 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			_to.transfer
      AND 			_to.transfer
      PUSH 8FC			_to.transfer(amount)
      DUP3 			amount
      SWAP1 			_to.transfer(amount)
      DUP2 			_to.transfer(amount)
      ISZERO 			_to.transfer(amount)
      MUL 			_to.transfer(amount)
      SWAP1 			_to.transfer(amount)
      PUSH 40			_to.transfer(amount)
      MLOAD 			_to.transfer(amount)
      PUSH 0			_to.transfer(amount)
      PUSH 40			_to.transfer(amount)
      MLOAD 			_to.transfer(amount)
      DUP1 			_to.transfer(amount)
      DUP4 			_to.transfer(amount)
      SUB 			_to.transfer(amount)
      DUP2 			_to.transfer(amount)
      DUP6 			_to.transfer(amount)
      DUP9 			_to.transfer(amount)
      DUP9 			_to.transfer(amount)
      CALL 			_to.transfer(amount)
      SWAP4 			_to.transfer(amount)
      POP 			_to.transfer(amount)
      POP 			_to.transfer(amount)
      POP 			_to.transfer(amount)
      POP 			_to.transfer(amount)
      ISZERO 			_to.transfer(amount)
      ISZERO 			_to.transfer(amount)
      PUSH [tag] 144			_to.transfer(amount)
      JUMPI 			_to.transfer(amount)
      PUSH 0			_to.transfer(amount)
      DUP1 			_to.transfer(amount)
      REVERT 			_to.transfer(amount)
    tag 144			_to.transfer(amount)
      JUMPDEST 			_to.transfer(amount)
      POP 			function transferEthFromContra...
      POP 			function transferEthFromContra...
      JUMP [out]			function transferEthFromContra...
    tag 60			uint32 public constant decimal...
      JUMPDEST 			uint32 public constant decimal...
      PUSH 12			18
      DUP2 			uint32 public constant decimal...
      JUMP [out]			uint32 public constant decimal...
    tag 63			function mint(address _to, uin...
      JUMPDEST 			function mint(address _to, uin...
      PUSH 0			bool
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 146			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 146			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 3			mintingFinished
      PUSH 14			mintingFinished
      SWAP1 			mintingFinished
      SLOAD 			mintingFinished
      SWAP1 			mintingFinished
      PUSH 100			mintingFinished
      EXP 			mintingFinished
      SWAP1 			mintingFinished
      DIV 			mintingFinished
      PUSH FF			mintingFinished
      AND 			mintingFinished
      ISZERO 			!mintingFinished
      ISZERO 			require(!mintingFinished)
      ISZERO 			require(!mintingFinished)
      PUSH [tag] 148			require(!mintingFinished)
      JUMPI 			require(!mintingFinished)
      PUSH 0			require(!mintingFinished)
      DUP1 			require(!mintingFinished)
      REVERT 			require(!mintingFinished)
    tag 148			require(!mintingFinished)
      JUMPDEST 			require(!mintingFinished)
      PUSH [tag] 150			totalSupply.add(_amount)
      DUP3 			_amount
      PUSH 0			totalSupply
      SLOAD 			totalSupply
      PUSH [tag] 137			totalSupply.add
      SWAP1 			totalSupply.add
      SWAP2 			totalSupply.add(_amount)
      SWAP1 			totalSupply.add(_amount)
      PUSH FFFFFFFF			totalSupply.add(_amount)
      AND 			totalSupply.add(_amount)
      JUMP [in]			totalSupply.add(_amount)
    tag 150			totalSupply.add(_amount)
      JUMPDEST 			totalSupply.add(_amount)
      PUSH 0			totalSupply
      DUP2 			totalSupply = totalSupply.add(...
      SWAP1 			totalSupply = totalSupply.add(...
      SSTORE 			totalSupply = totalSupply.add(...
      POP 			totalSupply = totalSupply.add(...
      PUSH [tag] 151			balances[_to].add(_amount)
      DUP3 			_amount
      PUSH 1			balances
      PUSH 0			balances[_to]
      DUP7 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      SLOAD 			balances[_to]
      PUSH [tag] 137			balances[_to].add
      SWAP1 			balances[_to].add
      SWAP2 			balances[_to].add(_amount)
      SWAP1 			balances[_to].add(_amount)
      PUSH FFFFFFFF			balances[_to].add(_amount)
      AND 			balances[_to].add(_amount)
      JUMP [in]			balances[_to].add(_amount)
    tag 151			balances[_to].add(_amount)
      JUMPDEST 			balances[_to].add(_amount)
      PUSH 1			balances
      PUSH 0			balances[_to]
      DUP6 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      DUP2 			balances[_to] = balances[_to]....
      SWAP1 			balances[_to] = balances[_to]....
      SSTORE 			balances[_to] = balances[_to]....
      POP 			balances[_to] = balances[_to]....
      DUP3 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Mint(_to, _amount)
      AND 			Mint(_to, _amount)
      PUSH F6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885			Mint(_to, _amount)
      DUP4 			_amount
      PUSH 40			Mint(_to, _amount)
      MLOAD 			Mint(_to, _amount)
      DUP1 			Mint(_to, _amount)
      DUP3 			Mint(_to, _amount)
      DUP2 			Mint(_to, _amount)
      MSTORE 			Mint(_to, _amount)
      PUSH 20			Mint(_to, _amount)
      ADD 			Mint(_to, _amount)
      SWAP2 			Mint(_to, _amount)
      POP 			Mint(_to, _amount)
      POP 			Mint(_to, _amount)
      PUSH 40			Mint(_to, _amount)
      MLOAD 			Mint(_to, _amount)
      DUP1 			Mint(_to, _amount)
      SWAP2 			Mint(_to, _amount)
      SUB 			Mint(_to, _amount)
      SWAP1 			Mint(_to, _amount)
      LOG2 			Mint(_to, _amount)
      DUP3 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(0, _to, _amount)
      AND 			Transfer(0, _to, _amount)
      PUSH 0			0
      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(0, _to, _amount)
      DUP5 			_amount
      PUSH 40			Transfer(0, _to, _amount)
      MLOAD 			Transfer(0, _to, _amount)
      DUP1 			Transfer(0, _to, _amount)
      DUP3 			Transfer(0, _to, _amount)
      DUP2 			Transfer(0, _to, _amount)
      MSTORE 			Transfer(0, _to, _amount)
      PUSH 20			Transfer(0, _to, _amount)
      ADD 			Transfer(0, _to, _amount)
      SWAP2 			Transfer(0, _to, _amount)
      POP 			Transfer(0, _to, _amount)
      POP 			Transfer(0, _to, _amount)
      PUSH 40			Transfer(0, _to, _amount)
      MLOAD 			Transfer(0, _to, _amount)
      DUP1 			Transfer(0, _to, _amount)
      SWAP2 			Transfer(0, _to, _amount)
      SUB 			Transfer(0, _to, _amount)
      SWAP1 			Transfer(0, _to, _amount)
      LOG3 			Transfer(0, _to, _amount)
      PUSH 1			true
      SWAP1 			return true
      POP 			return true
      SWAP3 			function mint(address _to, uin...
      SWAP2 			function mint(address _to, uin...
      POP 			function mint(address _to, uin...
      POP 			function mint(address _to, uin...
      JUMP [out]			function mint(address _to, uin...
    tag 65			function receiveApproval(addre...
      JUMPDEST 			function receiveApproval(addre...
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 153			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 153			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      DUP2 			from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			from.transfer
      AND 			from.transfer
      PUSH 8FC			from.transfer(skolko.mul(10000...
      PUSH [tag] 155			skolko.mul(1000000000000)
      PUSH E8D4A51000			1000000000000
      DUP5 			skolko
      PUSH [tag] 111			skolko.mul
      SWAP1 			skolko.mul
      SWAP2 			skolko.mul(1000000000000)
      SWAP1 			skolko.mul(1000000000000)
      PUSH FFFFFFFF			skolko.mul(1000000000000)
      AND 			skolko.mul(1000000000000)
      JUMP [in]			skolko.mul(1000000000000)
    tag 155			skolko.mul(1000000000000)
      JUMPDEST 			skolko.mul(1000000000000)
      SWAP1 			from.transfer(skolko.mul(10000...
      DUP2 			from.transfer(skolko.mul(10000...
      ISZERO 			from.transfer(skolko.mul(10000...
      MUL 			from.transfer(skolko.mul(10000...
      SWAP1 			from.transfer(skolko.mul(10000...
      PUSH 40			from.transfer(skolko.mul(10000...
      MLOAD 			from.transfer(skolko.mul(10000...
      PUSH 0			from.transfer(skolko.mul(10000...
      PUSH 40			from.transfer(skolko.mul(10000...
      MLOAD 			from.transfer(skolko.mul(10000...
      DUP1 			from.transfer(skolko.mul(10000...
      DUP4 			from.transfer(skolko.mul(10000...
      SUB 			from.transfer(skolko.mul(10000...
      DUP2 			from.transfer(skolko.mul(10000...
      DUP6 			from.transfer(skolko.mul(10000...
      DUP9 			from.transfer(skolko.mul(10000...
      DUP9 			from.transfer(skolko.mul(10000...
      CALL 			from.transfer(skolko.mul(10000...
      SWAP4 			from.transfer(skolko.mul(10000...
      POP 			from.transfer(skolko.mul(10000...
      POP 			from.transfer(skolko.mul(10000...
      POP 			from.transfer(skolko.mul(10000...
      POP 			from.transfer(skolko.mul(10000...
      ISZERO 			from.transfer(skolko.mul(10000...
      ISZERO 			from.transfer(skolko.mul(10000...
      PUSH [tag] 156			from.transfer(skolko.mul(10000...
      JUMPI 			from.transfer(skolko.mul(10000...
      PUSH 0			from.transfer(skolko.mul(10000...
      DUP1 			from.transfer(skolko.mul(10000...
      REVERT 			from.transfer(skolko.mul(10000...
    tag 156			from.transfer(skolko.mul(10000...
      JUMPDEST 			from.transfer(skolko.mul(10000...
      POP 			function receiveApproval(addre...
      POP 			function receiveApproval(addre...
      JUMP [out]			function receiveApproval(addre...
    tag 68			uint public b=1
      JUMPDEST 			uint public b=1
      PUSH E			uint public b=1
      SLOAD 			uint public b=1
      DUP2 			uint public b=1
      JUMP [out]			uint public b=1
    tag 71			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      PUSH 0			uint256 balance
      PUSH 1			balances
      PUSH 0			balances[_owner]
      DUP4 			_owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_owner]
      AND 			balances[_owner]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_owner]
      AND 			balances[_owner]
      DUP2 			balances[_owner]
      MSTORE 			balances[_owner]
      PUSH 20			balances[_owner]
      ADD 			balances[_owner]
      SWAP1 			balances[_owner]
      DUP2 			balances[_owner]
      MSTORE 			balances[_owner]
      PUSH 20			balances[_owner]
      ADD 			balances[_owner]
      PUSH 0			balances[_owner]
      KECCAK256 			balances[_owner]
      SLOAD 			balances[_owner]
      SWAP1 			return balances[_owner]
      POP 			return balances[_owner]
      SWAP2 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      JUMP [out]			function balanceOf(address _ow...
    tag 74			function finishMinting() publi...
      JUMPDEST 			function finishMinting() publi...
      PUSH 0			bool
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 159			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 159			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 6			token
      PUSH 0			token
      SWAP1 			token
      SLOAD 			token
      SWAP1 			token
      PUSH 100			token
      EXP 			token
      SWAP1 			token
      DIV 			token
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token
      AND 			token
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.finishMinting
      AND 			token.finishMinting
      PUSH 7D64BCB4			token.finishMinting
      PUSH 0			token.finishMinting()
      PUSH 40			token.finishMinting()
      MLOAD 			token.finishMinting()
      PUSH 20			token.finishMinting()
      ADD 			token.finishMinting()
      MSTORE 			token.finishMinting()
      PUSH 40			token.finishMinting()
      MLOAD 			token.finishMinting()
      DUP2 			token.finishMinting()
      PUSH FFFFFFFF			token.finishMinting()
      AND 			token.finishMinting()
      PUSH 100000000000000000000000000000000000000000000000000000000			token.finishMinting()
      MUL 			token.finishMinting()
      DUP2 			token.finishMinting()
      MSTORE 			token.finishMinting()
      PUSH 4			token.finishMinting()
      ADD 			token.finishMinting()
      PUSH 20			token.finishMinting()
      PUSH 40			token.finishMinting()
      MLOAD 			token.finishMinting()
      DUP1 			token.finishMinting()
      DUP4 			token.finishMinting()
      SUB 			token.finishMinting()
      DUP2 			token.finishMinting()
      PUSH 0			token.finishMinting()
      DUP8 			token.finishMinting()
      DUP1 			token.finishMinting()
      EXTCODESIZE 			token.finishMinting()
      ISZERO 			token.finishMinting()
      ISZERO 			token.finishMinting()
      PUSH [tag] 161			token.finishMinting()
      JUMPI 			token.finishMinting()
      PUSH 0			token.finishMinting()
      DUP1 			token.finishMinting()
      REVERT 			token.finishMinting()
    tag 161			token.finishMinting()
      JUMPDEST 			token.finishMinting()
      PUSH 2C6			token.finishMinting()
      GAS 			token.finishMinting()
      SUB 			token.finishMinting()
      CALL 			token.finishMinting()
      ISZERO 			token.finishMinting()
      ISZERO 			token.finishMinting()
      PUSH [tag] 162			token.finishMinting()
      JUMPI 			token.finishMinting()
      PUSH 0			token.finishMinting()
      DUP1 			token.finishMinting()
      REVERT 			token.finishMinting()
    tag 162			token.finishMinting()
      JUMPDEST 			token.finishMinting()
      POP 			token.finishMinting()
      POP 			token.finishMinting()
      POP 			token.finishMinting()
      PUSH 40			token.finishMinting()
      MLOAD 			token.finishMinting()
      DUP1 			token.finishMinting()
      MLOAD 			token.finishMinting()
      SWAP1 			token.finishMinting()
      POP 			token.finishMinting()
      POP 			token.finishMinting()
      PUSH 1			true
      SWAP1 			return true
      POP 			return true
      SWAP1 			function finishMinting() publi...
      JUMP [out]			function finishMinting() publi...
    tag 77			address public owner
      JUMPDEST 			address public owner
      PUSH 3			address public owner
      PUSH 0			address public owner
      SWAP1 			address public owner
      SLOAD 			address public owner
      SWAP1 			address public owner
      PUSH 100			address public owner
      EXP 			address public owner
      SWAP1 			address public owner
      DIV 			address public owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address public owner
      AND 			address public owner
      DUP2 			address public owner
      JUMP [out]			address public owner
    tag 80			string public constant symbol ...
      JUMPDEST 			string public constant symbol ...
      PUSH 40			string public constant symbol ...
      DUP1 			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      ADD 			string public constant symbol ...
      PUSH 40			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      PUSH 3			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      PUSH 4D4D540000000000000000000000000000000000000000000000000000000000			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      POP 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      JUMP [out]			string public constant symbol ...
    tag 87			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      PUSH 0			bool
      PUSH [tag] 164			balances[msg.sender].sub(_valu...
      DUP3 			_value
      PUSH 1			balances
      PUSH 0			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      SLOAD 			balances[msg.sender]
      PUSH [tag] 139			balances[msg.sender].sub
      SWAP1 			balances[msg.sender].sub
      SWAP2 			balances[msg.sender].sub(_valu...
      SWAP1 			balances[msg.sender].sub(_valu...
      PUSH FFFFFFFF			balances[msg.sender].sub(_valu...
      AND 			balances[msg.sender].sub(_valu...
      JUMP [in]			balances[msg.sender].sub(_valu...
    tag 164			balances[msg.sender].sub(_valu...
      JUMPDEST 			balances[msg.sender].sub(_valu...
      PUSH 1			balances
      PUSH 0			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      DUP2 			balances[msg.sender] = balance...
      SWAP1 			balances[msg.sender] = balance...
      SSTORE 			balances[msg.sender] = balance...
      POP 			balances[msg.sender] = balance...
      PUSH [tag] 165			balances[_to].add(_value)
      DUP3 			_value
      PUSH 1			balances
      PUSH 0			balances[_to]
      DUP7 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      SLOAD 			balances[_to]
      PUSH [tag] 137			balances[_to].add
      SWAP1 			balances[_to].add
      SWAP2 			balances[_to].add(_value)
      SWAP1 			balances[_to].add(_value)
      PUSH FFFFFFFF			balances[_to].add(_value)
      AND 			balances[_to].add(_value)
      JUMP [in]			balances[_to].add(_value)
    tag 165			balances[_to].add(_value)
      JUMPDEST 			balances[_to].add(_value)
      PUSH 1			balances
      PUSH 0			balances[_to]
      DUP6 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      DUP2 			balances[_to] = balances[_to]....
      SWAP1 			balances[_to] = balances[_to]....
      SSTORE 			balances[_to] = balances[_to]....
      POP 			balances[_to] = balances[_to]....
      DUP3 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(msg.sender, _to, _val...
      AND 			Transfer(msg.sender, _to, _val...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(msg.sender, _to, _val...
      AND 			Transfer(msg.sender, _to, _val...
      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(msg.sender, _to, _val...
      DUP5 			_value
      PUSH 40			Transfer(msg.sender, _to, _val...
      MLOAD 			Transfer(msg.sender, _to, _val...
      DUP1 			Transfer(msg.sender, _to, _val...
      DUP3 			Transfer(msg.sender, _to, _val...
      DUP2 			Transfer(msg.sender, _to, _val...
      MSTORE 			Transfer(msg.sender, _to, _val...
      PUSH 20			Transfer(msg.sender, _to, _val...
      ADD 			Transfer(msg.sender, _to, _val...
      SWAP2 			Transfer(msg.sender, _to, _val...
      POP 			Transfer(msg.sender, _to, _val...
      POP 			Transfer(msg.sender, _to, _val...
      PUSH 40			Transfer(msg.sender, _to, _val...
      MLOAD 			Transfer(msg.sender, _to, _val...
      DUP1 			Transfer(msg.sender, _to, _val...
      SWAP2 			Transfer(msg.sender, _to, _val...
      SUB 			Transfer(msg.sender, _to, _val...
      SWAP1 			Transfer(msg.sender, _to, _val...
      LOG3 			Transfer(msg.sender, _to, _val...
      PUSH 1			true
      SWAP1 			return true
      POP 			return true
      SWAP3 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      JUMP [out]			function transfer(address _to,...
    tag 91			uint public c=1
      JUMPDEST 			uint public c=1
      PUSH F			uint public c=1
      SLOAD 			uint public c=1
      DUP2 			uint public c=1
      JUMP [out]			uint public c=1
    tag 94			address public whom
      JUMPDEST 			address public whom
      PUSH 12			address public whom
      PUSH 0			address public whom
      SWAP1 			address public whom
      SLOAD 			address public whom
      SWAP1 			address public whom
      PUSH 100			address public whom
      EXP 			address public whom
      SWAP1 			address public whom
      DIV 			address public whom
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address public whom
      AND 			address public whom
      DUP2 			address public whom
      JUMP [out]			address public whom
    tag 97			function allowance(address _ow...
      JUMPDEST 			function allowance(address _ow...
      PUSH 0			uint256 remaining
      PUSH 2			allowed
      PUSH 0			allowed[_owner]
      DUP5 			_owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner]
      AND 			allowed[_owner]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner]
      AND 			allowed[_owner]
      DUP2 			allowed[_owner]
      MSTORE 			allowed[_owner]
      PUSH 20			allowed[_owner]
      ADD 			allowed[_owner]
      SWAP1 			allowed[_owner]
      DUP2 			allowed[_owner]
      MSTORE 			allowed[_owner]
      PUSH 20			allowed[_owner]
      ADD 			allowed[_owner]
      PUSH 0			allowed[_owner]
      KECCAK256 			allowed[_owner]
      PUSH 0			allowed[_owner][_spender]
      DUP4 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner][_spender]
      AND 			allowed[_owner][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner][_spender]
      AND 			allowed[_owner][_spender]
      DUP2 			allowed[_owner][_spender]
      MSTORE 			allowed[_owner][_spender]
      PUSH 20			allowed[_owner][_spender]
      ADD 			allowed[_owner][_spender]
      SWAP1 			allowed[_owner][_spender]
      DUP2 			allowed[_owner][_spender]
      MSTORE 			allowed[_owner][_spender]
      PUSH 20			allowed[_owner][_spender]
      ADD 			allowed[_owner][_spender]
      PUSH 0			allowed[_owner][_spender]
      KECCAK256 			allowed[_owner][_spender]
      SLOAD 			allowed[_owner][_spender]
      SWAP1 			return allowed[_owner][_spende...
      POP 			return allowed[_owner][_spende...
      SWAP3 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      JUMP [out]			function allowance(address _ow...
    tag 100			function distribute() public{\...
      JUMPDEST 			function distribute() public{\...
      PUSH 1			1
      PUSH C			i
      DUP2 			i=1
      SWAP1 			i=1
      SSTORE 			i=1
      POP 			i=1
    tag 168			for (i=1;i<=10;i++){\n        ...
      JUMPDEST 			for (i=1;i<=10;i++){\n        ...
      PUSH A			10
      PUSH C			i
      SLOAD 			i
      GT 			i<=10
      ISZERO 			i<=10
      ISZERO 			for (i=1;i<=10;i++){\n        ...
      PUSH [tag] 169			for (i=1;i<=10;i++){\n        ...
      JUMPI 			for (i=1;i<=10;i++){\n        ...
    tag 171			while (parent >1){\n          ...
      JUMPDEST 			while (parent >1){\n          ...
      PUSH 1			1
      PUSH 10			parent
      SLOAD 			parent
      GT 			parent >1
      ISZERO 			while (parent >1){\n          ...
      PUSH [tag] 172			while (parent >1){\n          ...
      JUMPI 			while (parent >1){\n          ...
      PUSH 0			0
      PUSH 3			3
      PUSH 10			parent
      SLOAD 			parent
      DUP2 			parent%3
      ISZERO 			parent%3
      ISZERO 			parent%3
      PUSH [tag] 173			parent%3
      JUMPI 			parent%3
      INVALID 			parent%3
    tag 173			parent%3
      JUMPDEST 			parent%3
      MOD 			parent%3
      EQ 			parent%3==0
      ISZERO 			if (parent%3==0){\n           ...
      PUSH [tag] 174			if (parent%3==0){\n           ...
      JUMPI 			if (parent%3==0){\n           ...
      PUSH [tag] 175			parent.div(3)
      PUSH 3			3
      PUSH 10			parent
      SLOAD 			parent
      PUSH [tag] 112			parent.div
      SWAP1 			parent.div
      SWAP2 			parent.div(3)
      SWAP1 			parent.div(3)
      PUSH FFFFFFFF			parent.div(3)
      AND 			parent.div(3)
      JUMP [in]			parent.div(3)
    tag 175			parent.div(3)
      JUMPDEST 			parent.div(3)
      PUSH 10			parent
      DUP2 			parent=parent.div(3)
      SWAP1 			parent=parent.div(3)
      SSTORE 			parent=parent.div(3)
      POP 			parent=parent.div(3)
      PUSH 14			order
      PUSH 0			order[tier]
      PUSH B			tier
      SLOAD 			tier
      DUP2 			order[tier]
      MSTORE 			order[tier]
      PUSH 20			order[tier]
      ADD 			order[tier]
      SWAP1 			order[tier]
      DUP2 			order[tier]
      MSTORE 			order[tier]
      PUSH 20			order[tier]
      ADD 			order[tier]
      PUSH 0			order[tier]
      KECCAK256 			order[tier]
      PUSH 0			order[tier][parent]
      PUSH 10			parent
      SLOAD 			parent
      DUP2 			order[tier][parent]
      MSTORE 			order[tier][parent]
      PUSH 20			order[tier][parent]
      ADD 			order[tier][parent]
      SWAP1 			order[tier][parent]
      DUP2 			order[tier][parent]
      MSTORE 			order[tier][parent]
      PUSH 20			order[tier][parent]
      ADD 			order[tier][parent]
      PUSH 0			order[tier][parent]
      KECCAK256 			order[tier][parent]
      PUSH 0			order[tier][parent]
      SWAP1 			order[tier][parent]
      SLOAD 			order[tier][parent]
      SWAP1 			order[tier][parent]
      PUSH 100			order[tier][parent]
      EXP 			order[tier][parent]
      SWAP1 			order[tier][parent]
      DIV 			order[tier][parent]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			order[tier][parent]
      AND 			order[tier][parent]
      PUSH 12			whom
      PUSH 0			whom
      PUSH 100			whom = order[tier][parent]
      EXP 			whom = order[tier][parent]
      DUP2 			whom = order[tier][parent]
      SLOAD 			whom = order[tier][parent]
      DUP2 			whom = order[tier][parent]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			whom = order[tier][parent]
      MUL 			whom = order[tier][parent]
      NOT 			whom = order[tier][parent]
      AND 			whom = order[tier][parent]
      SWAP1 			whom = order[tier][parent]
      DUP4 			whom = order[tier][parent]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			whom = order[tier][parent]
      AND 			whom = order[tier][parent]
      MUL 			whom = order[tier][parent]
      OR 			whom = order[tier][parent]
      SWAP1 			whom = order[tier][parent]
      SSTORE 			whom = order[tier][parent]
      POP 			whom = order[tier][parent]
      PUSH 6			token
      PUSH 0			token
      SWAP1 			token
      SLOAD 			token
      SWAP1 			token
      PUSH 100			token
      EXP 			token
      SWAP1 			token
      DIV 			token
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token
      AND 			token
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.mint
      AND 			token.mint
      PUSH 40C10F19			token.mint
      PUSH 12			whom
      PUSH 0			whom
      SWAP1 			whom
      SLOAD 			whom
      SWAP1 			whom
      PUSH 100			whom
      EXP 			whom
      SWAP1 			whom
      DIV 			whom
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			whom
      AND 			whom
      PUSH 11			parentMoney
      SLOAD 			parentMoney
      PUSH 0			token.mint(whom,parentMoney)
      PUSH 40			token.mint(whom,parentMoney)
      MLOAD 			token.mint(whom,parentMoney)
      PUSH 20			token.mint(whom,parentMoney)
      ADD 			token.mint(whom,parentMoney)
      MSTORE 			token.mint(whom,parentMoney)
      PUSH 40			token.mint(whom,parentMoney)
      MLOAD 			token.mint(whom,parentMoney)
      DUP4 			token.mint(whom,parentMoney)
      PUSH FFFFFFFF			token.mint(whom,parentMoney)
      AND 			token.mint(whom,parentMoney)
      PUSH 100000000000000000000000000000000000000000000000000000000			token.mint(whom,parentMoney)
      MUL 			token.mint(whom,parentMoney)
      DUP2 			token.mint(whom,parentMoney)
      MSTORE 			token.mint(whom,parentMoney)
      PUSH 4			token.mint(whom,parentMoney)
      ADD 			token.mint(whom,parentMoney)
      DUP1 			token.mint(whom,parentMoney)
      DUP4 			token.mint(whom,parentMoney)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.mint(whom,parentMoney)
      AND 			token.mint(whom,parentMoney)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.mint(whom,parentMoney)
      AND 			token.mint(whom,parentMoney)
      DUP2 			token.mint(whom,parentMoney)
      MSTORE 			token.mint(whom,parentMoney)
      PUSH 20			token.mint(whom,parentMoney)
      ADD 			token.mint(whom,parentMoney)
      DUP3 			token.mint(whom,parentMoney)
      DUP2 			token.mint(whom,parentMoney)
      MSTORE 			token.mint(whom,parentMoney)
      PUSH 20			token.mint(whom,parentMoney)
      ADD 			token.mint(whom,parentMoney)
      SWAP3 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      PUSH 20			token.mint(whom,parentMoney)
      PUSH 40			token.mint(whom,parentMoney)
      MLOAD 			token.mint(whom,parentMoney)
      DUP1 			token.mint(whom,parentMoney)
      DUP4 			token.mint(whom,parentMoney)
      SUB 			token.mint(whom,parentMoney)
      DUP2 			token.mint(whom,parentMoney)
      PUSH 0			token.mint(whom,parentMoney)
      DUP8 			token.mint(whom,parentMoney)
      DUP1 			token.mint(whom,parentMoney)
      EXTCODESIZE 			token.mint(whom,parentMoney)
      ISZERO 			token.mint(whom,parentMoney)
      ISZERO 			token.mint(whom,parentMoney)
      PUSH [tag] 176			token.mint(whom,parentMoney)
      JUMPI 			token.mint(whom,parentMoney)
      PUSH 0			token.mint(whom,parentMoney)
      DUP1 			token.mint(whom,parentMoney)
      REVERT 			token.mint(whom,parentMoney)
    tag 176			token.mint(whom,parentMoney)
      JUMPDEST 			token.mint(whom,parentMoney)
      PUSH 2C6			token.mint(whom,parentMoney)
      GAS 			token.mint(whom,parentMoney)
      SUB 			token.mint(whom,parentMoney)
      CALL 			token.mint(whom,parentMoney)
      ISZERO 			token.mint(whom,parentMoney)
      ISZERO 			token.mint(whom,parentMoney)
      PUSH [tag] 177			token.mint(whom,parentMoney)
      JUMPI 			token.mint(whom,parentMoney)
      PUSH 0			token.mint(whom,parentMoney)
      DUP1 			token.mint(whom,parentMoney)
      REVERT 			token.mint(whom,parentMoney)
    tag 177			token.mint(whom,parentMoney)
      JUMPDEST 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      PUSH 40			token.mint(whom,parentMoney)
      MLOAD 			token.mint(whom,parentMoney)
      DUP1 			token.mint(whom,parentMoney)
      MLOAD 			token.mint(whom,parentMoney)
      SWAP1 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      PUSH [tag] 178			if (parent%3==0){\n           ...
      JUMP 			if (parent%3==0){\n           ...
    tag 174			if (parent%3==0){\n           ...
      JUMPDEST 			if (parent%3==0){\n           ...
      PUSH 0			0
      PUSH 3			3
      PUSH 1			1
      PUSH 10			parent
      SLOAD 			parent
      SUB 			parent-1
      DUP2 			(parent-1)%3
      ISZERO 			(parent-1)%3
      ISZERO 			(parent-1)%3
      PUSH [tag] 179			(parent-1)%3
      JUMPI 			(parent-1)%3
      INVALID 			(parent-1)%3
    tag 179			(parent-1)%3
      JUMPDEST 			(parent-1)%3
      MOD 			(parent-1)%3
      EQ 			(parent-1)%3==0
      ISZERO 			if ((parent-1)%3==0){\n       ...
      PUSH [tag] 180			if ((parent-1)%3==0){\n       ...
      JUMPI 			if ((parent-1)%3==0){\n       ...
      PUSH 3			3
      PUSH 1			1
      PUSH 10			parent
      SLOAD 			parent
      SUB 			parent-1
      DUP2 			(parent-1)/3
      ISZERO 			(parent-1)/3
      ISZERO 			(parent-1)/3
      PUSH [tag] 181			(parent-1)/3
      JUMPI 			(parent-1)/3
      INVALID 			(parent-1)/3
    tag 181			(parent-1)/3
      JUMPDEST 			(parent-1)/3
      DIV 			(parent-1)/3
      PUSH 10			parent
      DUP2 			parent=(parent-1)/3
      SWAP1 			parent=(parent-1)/3
      SSTORE 			parent=(parent-1)/3
      POP 			parent=(parent-1)/3
      PUSH 14			order
      PUSH 0			order[tier]
      PUSH B			tier
      SLOAD 			tier
      DUP2 			order[tier]
      MSTORE 			order[tier]
      PUSH 20			order[tier]
      ADD 			order[tier]
      SWAP1 			order[tier]
      DUP2 			order[tier]
      MSTORE 			order[tier]
      PUSH 20			order[tier]
      ADD 			order[tier]
      PUSH 0			order[tier]
      KECCAK256 			order[tier]
      PUSH 0			order[tier][parent]
      PUSH 10			parent
      SLOAD 			parent
      DUP2 			order[tier][parent]
      MSTORE 			order[tier][parent]
      PUSH 20			order[tier][parent]
      ADD 			order[tier][parent]
      SWAP1 			order[tier][parent]
      DUP2 			order[tier][parent]
      MSTORE 			order[tier][parent]
      PUSH 20			order[tier][parent]
      ADD 			order[tier][parent]
      PUSH 0			order[tier][parent]
      KECCAK256 			order[tier][parent]
      PUSH 0			order[tier][parent]
      SWAP1 			order[tier][parent]
      SLOAD 			order[tier][parent]
      SWAP1 			order[tier][parent]
      PUSH 100			order[tier][parent]
      EXP 			order[tier][parent]
      SWAP1 			order[tier][parent]
      DIV 			order[tier][parent]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			order[tier][parent]
      AND 			order[tier][parent]
      PUSH 12			whom
      PUSH 0			whom
      PUSH 100			whom = order[tier][parent]
      EXP 			whom = order[tier][parent]
      DUP2 			whom = order[tier][parent]
      SLOAD 			whom = order[tier][parent]
      DUP2 			whom = order[tier][parent]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			whom = order[tier][parent]
      MUL 			whom = order[tier][parent]
      NOT 			whom = order[tier][parent]
      AND 			whom = order[tier][parent]
      SWAP1 			whom = order[tier][parent]
      DUP4 			whom = order[tier][parent]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			whom = order[tier][parent]
      AND 			whom = order[tier][parent]
      MUL 			whom = order[tier][parent]
      OR 			whom = order[tier][parent]
      SWAP1 			whom = order[tier][parent]
      SSTORE 			whom = order[tier][parent]
      POP 			whom = order[tier][parent]
      PUSH 6			token
      PUSH 0			token
      SWAP1 			token
      SLOAD 			token
      SWAP1 			token
      PUSH 100			token
      EXP 			token
      SWAP1 			token
      DIV 			token
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token
      AND 			token
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.mint
      AND 			token.mint
      PUSH 40C10F19			token.mint
      PUSH 12			whom
      PUSH 0			whom
      SWAP1 			whom
      SLOAD 			whom
      SWAP1 			whom
      PUSH 100			whom
      EXP 			whom
      SWAP1 			whom
      DIV 			whom
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			whom
      AND 			whom
      PUSH 11			parentMoney
      SLOAD 			parentMoney
      PUSH 0			token.mint(whom,parentMoney)
      PUSH 40			token.mint(whom,parentMoney)
      MLOAD 			token.mint(whom,parentMoney)
      PUSH 20			token.mint(whom,parentMoney)
      ADD 			token.mint(whom,parentMoney)
      MSTORE 			token.mint(whom,parentMoney)
      PUSH 40			token.mint(whom,parentMoney)
      MLOAD 			token.mint(whom,parentMoney)
      DUP4 			token.mint(whom,parentMoney)
      PUSH FFFFFFFF			token.mint(whom,parentMoney)
      AND 			token.mint(whom,parentMoney)
      PUSH 100000000000000000000000000000000000000000000000000000000			token.mint(whom,parentMoney)
      MUL 			token.mint(whom,parentMoney)
      DUP2 			token.mint(whom,parentMoney)
      MSTORE 			token.mint(whom,parentMoney)
      PUSH 4			token.mint(whom,parentMoney)
      ADD 			token.mint(whom,parentMoney)
      DUP1 			token.mint(whom,parentMoney)
      DUP4 			token.mint(whom,parentMoney)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.mint(whom,parentMoney)
      AND 			token.mint(whom,parentMoney)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.mint(whom,parentMoney)
      AND 			token.mint(whom,parentMoney)
      DUP2 			token.mint(whom,parentMoney)
      MSTORE 			token.mint(whom,parentMoney)
      PUSH 20			token.mint(whom,parentMoney)
      ADD 			token.mint(whom,parentMoney)
      DUP3 			token.mint(whom,parentMoney)
      DUP2 			token.mint(whom,parentMoney)
      MSTORE 			token.mint(whom,parentMoney)
      PUSH 20			token.mint(whom,parentMoney)
      ADD 			token.mint(whom,parentMoney)
      SWAP3 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      PUSH 20			token.mint(whom,parentMoney)
      PUSH 40			token.mint(whom,parentMoney)
      MLOAD 			token.mint(whom,parentMoney)
      DUP1 			token.mint(whom,parentMoney)
      DUP4 			token.mint(whom,parentMoney)
      SUB 			token.mint(whom,parentMoney)
      DUP2 			token.mint(whom,parentMoney)
      PUSH 0			token.mint(whom,parentMoney)
      DUP8 			token.mint(whom,parentMoney)
      DUP1 			token.mint(whom,parentMoney)
      EXTCODESIZE 			token.mint(whom,parentMoney)
      ISZERO 			token.mint(whom,parentMoney)
      ISZERO 			token.mint(whom,parentMoney)
      PUSH [tag] 182			token.mint(whom,parentMoney)
      JUMPI 			token.mint(whom,parentMoney)
      PUSH 0			token.mint(whom,parentMoney)
      DUP1 			token.mint(whom,parentMoney)
      REVERT 			token.mint(whom,parentMoney)
    tag 182			token.mint(whom,parentMoney)
      JUMPDEST 			token.mint(whom,parentMoney)
      PUSH 2C6			token.mint(whom,parentMoney)
      GAS 			token.mint(whom,parentMoney)
      SUB 			token.mint(whom,parentMoney)
      CALL 			token.mint(whom,parentMoney)
      ISZERO 			token.mint(whom,parentMoney)
      ISZERO 			token.mint(whom,parentMoney)
      PUSH [tag] 183			token.mint(whom,parentMoney)
      JUMPI 			token.mint(whom,parentMoney)
      PUSH 0			token.mint(whom,parentMoney)
      DUP1 			token.mint(whom,parentMoney)
      REVERT 			token.mint(whom,parentMoney)
    tag 183			token.mint(whom,parentMoney)
      JUMPDEST 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      PUSH 40			token.mint(whom,parentMoney)
      MLOAD 			token.mint(whom,parentMoney)
      DUP1 			token.mint(whom,parentMoney)
      MLOAD 			token.mint(whom,parentMoney)
      SWAP1 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      PUSH [tag] 184			if ((parent-1)%3==0){\n       ...
      JUMP 			if ((parent-1)%3==0){\n       ...
    tag 180			if ((parent-1)%3==0){\n       ...
      JUMPDEST 			if ((parent-1)%3==0){\n       ...
      PUSH 3			3
      PUSH 1			1
      PUSH 10			parent
      SLOAD 			parent
      ADD 			parent+1
      DUP2 			(parent+1)/3
      ISZERO 			(parent+1)/3
      ISZERO 			(parent+1)/3
      PUSH [tag] 185			(parent+1)/3
      JUMPI 			(parent+1)/3
      INVALID 			(parent+1)/3
    tag 185			(parent+1)/3
      JUMPDEST 			(parent+1)/3
      DIV 			(parent+1)/3
      PUSH 10			parent
      DUP2 			parent=(parent+1)/3
      SWAP1 			parent=(parent+1)/3
      SSTORE 			parent=(parent+1)/3
      POP 			parent=(parent+1)/3
      PUSH 14			order
      PUSH 0			order[tier]
      PUSH B			tier
      SLOAD 			tier
      DUP2 			order[tier]
      MSTORE 			order[tier]
      PUSH 20			order[tier]
      ADD 			order[tier]
      SWAP1 			order[tier]
      DUP2 			order[tier]
      MSTORE 			order[tier]
      PUSH 20			order[tier]
      ADD 			order[tier]
      PUSH 0			order[tier]
      KECCAK256 			order[tier]
      PUSH 0			order[tier][parent]
      PUSH 10			parent
      SLOAD 			parent
      DUP2 			order[tier][parent]
      MSTORE 			order[tier][parent]
      PUSH 20			order[tier][parent]
      ADD 			order[tier][parent]
      SWAP1 			order[tier][parent]
      DUP2 			order[tier][parent]
      MSTORE 			order[tier][parent]
      PUSH 20			order[tier][parent]
      ADD 			order[tier][parent]
      PUSH 0			order[tier][parent]
      KECCAK256 			order[tier][parent]
      PUSH 0			order[tier][parent]
      SWAP1 			order[tier][parent]
      SLOAD 			order[tier][parent]
      SWAP1 			order[tier][parent]
      PUSH 100			order[tier][parent]
      EXP 			order[tier][parent]
      SWAP1 			order[tier][parent]
      DIV 			order[tier][parent]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			order[tier][parent]
      AND 			order[tier][parent]
      PUSH 12			whom
      PUSH 0			whom
      PUSH 100			whom = order[tier][parent]
      EXP 			whom = order[tier][parent]
      DUP2 			whom = order[tier][parent]
      SLOAD 			whom = order[tier][parent]
      DUP2 			whom = order[tier][parent]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			whom = order[tier][parent]
      MUL 			whom = order[tier][parent]
      NOT 			whom = order[tier][parent]
      AND 			whom = order[tier][parent]
      SWAP1 			whom = order[tier][parent]
      DUP4 			whom = order[tier][parent]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			whom = order[tier][parent]
      AND 			whom = order[tier][parent]
      MUL 			whom = order[tier][parent]
      OR 			whom = order[tier][parent]
      SWAP1 			whom = order[tier][parent]
      SSTORE 			whom = order[tier][parent]
      POP 			whom = order[tier][parent]
      PUSH 6			token
      PUSH 0			token
      SWAP1 			token
      SLOAD 			token
      SWAP1 			token
      PUSH 100			token
      EXP 			token
      SWAP1 			token
      DIV 			token
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token
      AND 			token
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.mint
      AND 			token.mint
      PUSH 40C10F19			token.mint
      PUSH 12			whom
      PUSH 0			whom
      SWAP1 			whom
      SLOAD 			whom
      SWAP1 			whom
      PUSH 100			whom
      EXP 			whom
      SWAP1 			whom
      DIV 			whom
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			whom
      AND 			whom
      PUSH 11			parentMoney
      SLOAD 			parentMoney
      PUSH 0			token.mint(whom,parentMoney)
      PUSH 40			token.mint(whom,parentMoney)
      MLOAD 			token.mint(whom,parentMoney)
      PUSH 20			token.mint(whom,parentMoney)
      ADD 			token.mint(whom,parentMoney)
      MSTORE 			token.mint(whom,parentMoney)
      PUSH 40			token.mint(whom,parentMoney)
      MLOAD 			token.mint(whom,parentMoney)
      DUP4 			token.mint(whom,parentMoney)
      PUSH FFFFFFFF			token.mint(whom,parentMoney)
      AND 			token.mint(whom,parentMoney)
      PUSH 100000000000000000000000000000000000000000000000000000000			token.mint(whom,parentMoney)
      MUL 			token.mint(whom,parentMoney)
      DUP2 			token.mint(whom,parentMoney)
      MSTORE 			token.mint(whom,parentMoney)
      PUSH 4			token.mint(whom,parentMoney)
      ADD 			token.mint(whom,parentMoney)
      DUP1 			token.mint(whom,parentMoney)
      DUP4 			token.mint(whom,parentMoney)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.mint(whom,parentMoney)
      AND 			token.mint(whom,parentMoney)
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			token.mint(whom,parentMoney)
      AND 			token.mint(whom,parentMoney)
      DUP2 			token.mint(whom,parentMoney)
      MSTORE 			token.mint(whom,parentMoney)
      PUSH 20			token.mint(whom,parentMoney)
      ADD 			token.mint(whom,parentMoney)
      DUP3 			token.mint(whom,parentMoney)
      DUP2 			token.mint(whom,parentMoney)
      MSTORE 			token.mint(whom,parentMoney)
      PUSH 20			token.mint(whom,parentMoney)
      ADD 			token.mint(whom,parentMoney)
      SWAP3 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      PUSH 20			token.mint(whom,parentMoney)
      PUSH 40			token.mint(whom,parentMoney)
      MLOAD 			token.mint(whom,parentMoney)
      DUP1 			token.mint(whom,parentMoney)
      DUP4 			token.mint(whom,parentMoney)
      SUB 			token.mint(whom,parentMoney)
      DUP2 			token.mint(whom,parentMoney)
      PUSH 0			token.mint(whom,parentMoney)
      DUP8 			token.mint(whom,parentMoney)
      DUP1 			token.mint(whom,parentMoney)
      EXTCODESIZE 			token.mint(whom,parentMoney)
      ISZERO 			token.mint(whom,parentMoney)
      ISZERO 			token.mint(whom,parentMoney)
      PUSH [tag] 186			token.mint(whom,parentMoney)
      JUMPI 			token.mint(whom,parentMoney)
      PUSH 0			token.mint(whom,parentMoney)
      DUP1 			token.mint(whom,parentMoney)
      REVERT 			token.mint(whom,parentMoney)
    tag 186			token.mint(whom,parentMoney)
      JUMPDEST 			token.mint(whom,parentMoney)
      PUSH 2C6			token.mint(whom,parentMoney)
      GAS 			token.mint(whom,parentMoney)
      SUB 			token.mint(whom,parentMoney)
      CALL 			token.mint(whom,parentMoney)
      ISZERO 			token.mint(whom,parentMoney)
      ISZERO 			token.mint(whom,parentMoney)
      PUSH [tag] 187			token.mint(whom,parentMoney)
      JUMPI 			token.mint(whom,parentMoney)
      PUSH 0			token.mint(whom,parentMoney)
      DUP1 			token.mint(whom,parentMoney)
      REVERT 			token.mint(whom,parentMoney)
    tag 187			token.mint(whom,parentMoney)
      JUMPDEST 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      PUSH 40			token.mint(whom,parentMoney)
      MLOAD 			token.mint(whom,parentMoney)
      DUP1 			token.mint(whom,parentMoney)
      MLOAD 			token.mint(whom,parentMoney)
      SWAP1 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
      POP 			token.mint(whom,parentMoney)
    tag 184			if ((parent-1)%3==0){\n       ...
      JUMPDEST 			if ((parent-1)%3==0){\n       ...
    tag 178			if (parent%3==0){\n           ...
      JUMPDEST 			if (parent%3==0){\n           ...
      PUSH [tag] 171			while (parent >1){\n          ...
      JUMP 			while (parent >1){\n          ...
    tag 172			while (parent >1){\n          ...
      JUMPDEST 			while (parent >1){\n          ...
      PUSH C			i
      PUSH 0			i
      DUP2 			i++
      SLOAD 			i++
      DUP1 			i++
      SWAP3 			i++
      SWAP2 			i++
      SWAP1 			i++
      PUSH 1			i++
      ADD 			i++
      SWAP2 			i++
      SWAP1 			i++
      POP 			i++
      SSTORE 			i++
      POP 			i++
      PUSH [tag] 168			for (i=1;i<=10;i++){\n        ...
      JUMP 			for (i=1;i<=10;i++){\n        ...
    tag 169			for (i=1;i<=10;i++){\n        ...
      JUMPDEST 			for (i=1;i<=10;i++){\n        ...
      JUMP [out]			function distribute() public{\...
    tag 103			function transferOwnership(add...
      JUMPDEST 			function transferOwnership(add...
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 189			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 189			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 0			0
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			newOwner != address(0)
      AND 			newOwner != address(0)
      DUP2 			newOwner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			newOwner != address(0)
      AND 			newOwner != address(0)
      EQ 			newOwner != address(0)
      ISZERO 			newOwner != address(0)
      ISZERO 			require(newOwner != address(0)...
      ISZERO 			require(newOwner != address(0)...
      PUSH [tag] 191			require(newOwner != address(0)...
      JUMPI 			require(newOwner != address(0)...
      PUSH 0			require(newOwner != address(0)...
      DUP1 			require(newOwner != address(0)...
      REVERT 			require(newOwner != address(0)...
    tag 191			require(newOwner != address(0)...
      JUMPDEST 			require(newOwner != address(0)...
      DUP1 			newOwner
      PUSH 3			owner
      PUSH 0			owner
      PUSH 100			owner = newOwner
      EXP 			owner = newOwner
      DUP2 			owner = newOwner
      SLOAD 			owner = newOwner
      DUP2 			owner = newOwner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = newOwner
      MUL 			owner = newOwner
      NOT 			owner = newOwner
      AND 			owner = newOwner
      SWAP1 			owner = newOwner
      DUP4 			owner = newOwner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = newOwner
      AND 			owner = newOwner
      MUL 			owner = newOwner
      OR 			owner = newOwner
      SWAP1 			owner = newOwner
      SSTORE 			owner = newOwner
      POP 			owner = newOwner
      POP 			function transferOwnership(add...
      JUMP [out]			function transferOwnership(add...
    tag 106			MultiLevelToken public token =...
      JUMPDEST 			MultiLevelToken public token =...
      PUSH 6			MultiLevelToken public token =...
      PUSH 0			MultiLevelToken public token =...
      SWAP1 			MultiLevelToken public token =...
      SLOAD 			MultiLevelToken public token =...
      SWAP1 			MultiLevelToken public token =...
      PUSH 100			MultiLevelToken public token =...
      EXP 			MultiLevelToken public token =...
      SWAP1 			MultiLevelToken public token =...
      DIV 			MultiLevelToken public token =...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			MultiLevelToken public token =...
      AND 			MultiLevelToken public token =...
      DUP2 			MultiLevelToken public token =...
      JUMP [out]			MultiLevelToken public token =...
    tag 111			function mul(uint256 a, uint25...
      JUMPDEST 			function mul(uint256 a, uint25...
      PUSH 0			uint256
      DUP1 			uint256 c
      DUP3 			b
      DUP5 			a
      MUL 			a * b
      SWAP1 			uint256 c = a * b
      POP 			uint256 c = a * b
      PUSH 0			0
      DUP5 			a
      EQ 			a == 0
      DUP1 			a == 0 || c / a == b
      PUSH [tag] 193			a == 0 || c / a == b
      JUMPI 			a == 0 || c / a == b
      POP 			a == 0 || c / a == b
      DUP3 			b
      DUP5 			a
      DUP3 			c
      DUP2 			c / a
      ISZERO 			c / a
      ISZERO 			c / a
      PUSH [tag] 194			c / a
      JUMPI 			c / a
      INVALID 			c / a
    tag 194			c / a
      JUMPDEST 			c / a
      DIV 			c / a
      EQ 			c / a == b
    tag 193			a == 0 || c / a == b
      JUMPDEST 			a == 0 || c / a == b
      ISZERO 			assert(a == 0 || c / a == b)
      ISZERO 			assert(a == 0 || c / a == b)
      PUSH [tag] 195			assert(a == 0 || c / a == b)
      JUMPI 			assert(a == 0 || c / a == b)
      INVALID 			assert(a == 0 || c / a == b)
    tag 195			assert(a == 0 || c / a == b)
      JUMPDEST 			assert(a == 0 || c / a == b)
      DUP1 			c
      SWAP2 			return c
      POP 			return c
      POP 			function mul(uint256 a, uint25...
      SWAP3 			function mul(uint256 a, uint25...
      SWAP2 			function mul(uint256 a, uint25...
      POP 			function mul(uint256 a, uint25...
      POP 			function mul(uint256 a, uint25...
      JUMP [out]			function mul(uint256 a, uint25...
    tag 112			function div(uint256 a, uint25...
      JUMPDEST 			function div(uint256 a, uint25...
      PUSH 0			uint256
      DUP1 			uint256 c
      DUP3 			b
      DUP5 			a
      DUP2 			a / b
      ISZERO 			a / b
      ISZERO 			a / b
      PUSH [tag] 197			a / b
      JUMPI 			a / b
      INVALID 			a / b
    tag 197			a / b
      JUMPDEST 			a / b
      DIV 			a / b
      SWAP1 			uint256 c = a / b
      POP 			uint256 c = a / b
      DUP1 			c
      SWAP2 			return c
      POP 			return c
      POP 			function div(uint256 a, uint25...
      SWAP3 			function div(uint256 a, uint25...
      SWAP2 			function div(uint256 a, uint25...
      POP 			function div(uint256 a, uint25...
      POP 			function div(uint256 a, uint25...
      JUMP [out]			function div(uint256 a, uint25...
    tag 137			function add(uint256 a, uint25...
      JUMPDEST 			function add(uint256 a, uint25...
      PUSH 0			uint256
      DUP1 			uint256 c
      DUP3 			b
      DUP5 			a
      ADD 			a + b
      SWAP1 			uint256 c = a + b
      POP 			uint256 c = a + b
      DUP4 			a
      DUP2 			c
      LT 			c >= a
      ISZERO 			c >= a
      ISZERO 			assert(c >= a)
      ISZERO 			assert(c >= a)
      PUSH [tag] 199			assert(c >= a)
      JUMPI 			assert(c >= a)
      INVALID 			assert(c >= a)
    tag 199			assert(c >= a)
      JUMPDEST 			assert(c >= a)
      DUP1 			c
      SWAP2 			return c
      POP 			return c
      POP 			function add(uint256 a, uint25...
      SWAP3 			function add(uint256 a, uint25...
      SWAP2 			function add(uint256 a, uint25...
      POP 			function add(uint256 a, uint25...
      POP 			function add(uint256 a, uint25...
      JUMP [out]			function add(uint256 a, uint25...
    tag 139			function sub(uint256 a, uint25...
      JUMPDEST 			function sub(uint256 a, uint25...
      PUSH 0			uint256
      DUP3 			a
      DUP3 			b
      GT 			b <= a
      ISZERO 			b <= a
      ISZERO 			assert(b <= a)
      ISZERO 			assert(b <= a)
      PUSH [tag] 201			assert(b <= a)
      JUMPI 			assert(b <= a)
      INVALID 			assert(b <= a)
    tag 201			assert(b <= a)
      JUMPDEST 			assert(b <= a)
      DUP2 			b
      DUP4 			a
      SUB 			a - b
      SWAP1 			return a - b
      POP 			return a - b
      SWAP3 			function sub(uint256 a, uint25...
      SWAP2 			function sub(uint256 a, uint25...
      POP 			function sub(uint256 a, uint25...
      POP 			function sub(uint256 a, uint25...
      JUMP [out]			function sub(uint256 a, uint25...
    .data
  1:
    .code
      PUSH 60			contract MultiLevelToken is Mi...
      PUSH 40			contract MultiLevelToken is Mi...
      MSTORE 			contract MultiLevelToken is Mi...
      PUSH 0			false
      PUSH 3			bool public mintingFinished = ...
      PUSH 14			bool public mintingFinished = ...
      PUSH 100			bool public mintingFinished = ...
      EXP 			bool public mintingFinished = ...
      DUP2 			bool public mintingFinished = ...
      SLOAD 			bool public mintingFinished = ...
      DUP2 			bool public mintingFinished = ...
      PUSH FF			bool public mintingFinished = ...
      MUL 			bool public mintingFinished = ...
      NOT 			bool public mintingFinished = ...
      AND 			bool public mintingFinished = ...
      SWAP1 			bool public mintingFinished = ...
      DUP4 			bool public mintingFinished = ...
      ISZERO 			bool public mintingFinished = ...
      ISZERO 			bool public mintingFinished = ...
      MUL 			bool public mintingFinished = ...
      OR 			bool public mintingFinished = ...
      SWAP1 			bool public mintingFinished = ...
      SSTORE 			bool public mintingFinished = ...
      POP 			bool public mintingFinished = ...
      CALLER 			msg.sender
      PUSH 3			owner
      PUSH 0			owner
      PUSH 100			owner = msg.sender
      EXP 			owner = msg.sender
      DUP2 			owner = msg.sender
      SLOAD 			owner = msg.sender
      DUP2 			owner = msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = msg.sender
      MUL 			owner = msg.sender
      NOT 			owner = msg.sender
      AND 			owner = msg.sender
      SWAP1 			owner = msg.sender
      DUP4 			owner = msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = msg.sender
      AND 			owner = msg.sender
      MUL 			owner = msg.sender
      OR 			owner = msg.sender
      SWAP1 			owner = msg.sender
      SSTORE 			owner = msg.sender
      POP 			owner = msg.sender
      PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000			contract MultiLevelToken is Mi...
      DUP1 			contract MultiLevelToken is Mi...
      PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000			contract MultiLevelToken is Mi...
      PUSH 0			contract MultiLevelToken is Mi...
      CODECOPY 			contract MultiLevelToken is Mi...
      PUSH 0			contract MultiLevelToken is Mi...
      RETURN 			contract MultiLevelToken is Mi...
    .data
      0:
        .code
          PUSH 60			contract MultiLevelToken is Mi...
          PUSH 40			contract MultiLevelToken is Mi...
          MSTORE 			contract MultiLevelToken is Mi...
          PUSH 4			contract MultiLevelToken is Mi...
          CALLDATASIZE 			contract MultiLevelToken is Mi...
          LT 			contract MultiLevelToken is Mi...
          PUSH [tag] 1			contract MultiLevelToken is Mi...
          JUMPI 			contract MultiLevelToken is Mi...
          PUSH 0			contract MultiLevelToken is Mi...
          CALLDATALOAD 			contract MultiLevelToken is Mi...
          PUSH 100000000000000000000000000000000000000000000000000000000			contract MultiLevelToken is Mi...
          SWAP1 			contract MultiLevelToken is Mi...
          DIV 			contract MultiLevelToken is Mi...
          PUSH FFFFFFFF			contract MultiLevelToken is Mi...
          AND 			contract MultiLevelToken is Mi...
          DUP1 			contract MultiLevelToken is Mi...
          PUSH 5D2035B			contract MultiLevelToken is Mi...
          EQ 			contract MultiLevelToken is Mi...
          PUSH [tag] 2			contract MultiLevelToken is Mi...
          JUMPI 			contract MultiLevelToken is Mi...
          DUP1 			contract MultiLevelToken is Mi...
          PUSH 6FDDE03			contract MultiLevelToken is Mi...
          EQ 			contract MultiLevelToken is Mi...
          PUSH [tag] 3			contract MultiLevelToken is Mi...
          JUMPI 			contract MultiLevelToken is Mi...
          DUP1 			contract MultiLevelToken is Mi...
          PUSH 95EA7B3			contract MultiLevelToken is Mi...
          EQ 			contract MultiLevelToken is Mi...
          PUSH [tag] 4			contract MultiLevelToken is Mi...
          JUMPI 			contract MultiLevelToken is Mi...
          DUP1 			contract MultiLevelToken is Mi...
          PUSH 18160DDD			contract MultiLevelToken is Mi...
          EQ 			contract MultiLevelToken is Mi...
          PUSH [tag] 5			contract MultiLevelToken is Mi...
          JUMPI 			contract MultiLevelToken is Mi...
          DUP1 			contract MultiLevelToken is Mi...
          PUSH 23B872DD			contract MultiLevelToken is Mi...
          EQ 			contract MultiLevelToken is Mi...
          PUSH [tag] 6			contract MultiLevelToken is Mi...
          JUMPI 			contract MultiLevelToken is Mi...
          DUP1 			contract MultiLevelToken is Mi...
          PUSH 313CE567			contract MultiLevelToken is Mi...
          EQ 			contract MultiLevelToken is Mi...
          PUSH [tag] 7			contract MultiLevelToken is Mi...
          JUMPI 			contract MultiLevelToken is Mi...
          DUP1 			contract MultiLevelToken is Mi...
          PUSH 40C10F19			contract MultiLevelToken is Mi...
          EQ 			contract MultiLevelToken is Mi...
          PUSH [tag] 8			contract MultiLevelToken is Mi...
          JUMPI 			contract MultiLevelToken is Mi...
          DUP1 			contract MultiLevelToken is Mi...
          PUSH 70A08231			contract MultiLevelToken is Mi...
          EQ 			contract MultiLevelToken is Mi...
          PUSH [tag] 9			contract MultiLevelToken is Mi...
          JUMPI 			contract MultiLevelToken is Mi...
          DUP1 			contract MultiLevelToken is Mi...
          PUSH 7D64BCB4			contract MultiLevelToken is Mi...
          EQ 			contract MultiLevelToken is Mi...
          PUSH [tag] 10			contract MultiLevelToken is Mi...
          JUMPI 			contract MultiLevelToken is Mi...
          DUP1 			contract MultiLevelToken is Mi...
          PUSH 8DA5CB5B			contract MultiLevelToken is Mi...
          EQ 			contract MultiLevelToken is Mi...
          PUSH [tag] 11			contract MultiLevelToken is Mi...
          JUMPI 			contract MultiLevelToken is Mi...
          DUP1 			contract MultiLevelToken is Mi...
          PUSH 95D89B41			contract MultiLevelToken is Mi...
          EQ 			contract MultiLevelToken is Mi...
          PUSH [tag] 12			contract MultiLevelToken is Mi...
          JUMPI 			contract MultiLevelToken is Mi...
          DUP1 			contract MultiLevelToken is Mi...
          PUSH A9059CBB			contract MultiLevelToken is Mi...
          EQ 			contract MultiLevelToken is Mi...
          PUSH [tag] 13			contract MultiLevelToken is Mi...
          JUMPI 			contract MultiLevelToken is Mi...
          DUP1 			contract MultiLevelToken is Mi...
          PUSH DD62ED3E			contract MultiLevelToken is Mi...
          EQ 			contract MultiLevelToken is Mi...
          PUSH [tag] 14			contract MultiLevelToken is Mi...
          JUMPI 			contract MultiLevelToken is Mi...
          DUP1 			contract MultiLevelToken is Mi...
          PUSH F2FDE38B			contract MultiLevelToken is Mi...
          EQ 			contract MultiLevelToken is Mi...
          PUSH [tag] 15			contract MultiLevelToken is Mi...
          JUMPI 			contract MultiLevelToken is Mi...
        tag 1			contract MultiLevelToken is Mi...
          JUMPDEST 			contract MultiLevelToken is Mi...
          PUSH 0			contract MultiLevelToken is Mi...
          DUP1 			contract MultiLevelToken is Mi...
          REVERT 			contract MultiLevelToken is Mi...
        tag 2			bool public mintingFinished = ...
          JUMPDEST 			bool public mintingFinished = ...
          CALLVALUE 			bool public mintingFinished = ...
          ISZERO 			bool public mintingFinished = ...
          PUSH [tag] 16			bool public mintingFinished = ...
          JUMPI 			bool public mintingFinished = ...
          PUSH 0			bool public mintingFinished = ...
          DUP1 			bool public mintingFinished = ...
          REVERT 			bool public mintingFinished = ...
        tag 16			bool public mintingFinished = ...
          JUMPDEST 			bool public mintingFinished = ...
          PUSH [tag] 17			bool public mintingFinished = ...
          PUSH [tag] 18			bool public mintingFinished = ...
          JUMP 			bool public mintingFinished = ...
        tag 17			bool public mintingFinished = ...
          JUMPDEST 			bool public mintingFinished = ...
          PUSH 40			bool public mintingFinished = ...
          MLOAD 			bool public mintingFinished = ...
          DUP1 			bool public mintingFinished = ...
          DUP3 			bool public mintingFinished = ...
          ISZERO 			bool public mintingFinished = ...
          ISZERO 			bool public mintingFinished = ...
          ISZERO 			bool public mintingFinished = ...
          ISZERO 			bool public mintingFinished = ...
          DUP2 			bool public mintingFinished = ...
          MSTORE 			bool public mintingFinished = ...
          PUSH 20			bool public mintingFinished = ...
          ADD 			bool public mintingFinished = ...
          SWAP2 			bool public mintingFinished = ...
          POP 			bool public mintingFinished = ...
          POP 			bool public mintingFinished = ...
          PUSH 40			bool public mintingFinished = ...
          MLOAD 			bool public mintingFinished = ...
          DUP1 			bool public mintingFinished = ...
          SWAP2 			bool public mintingFinished = ...
          SUB 			bool public mintingFinished = ...
          SWAP1 			bool public mintingFinished = ...
          RETURN 			bool public mintingFinished = ...
        tag 3			string public constant name = ...
          JUMPDEST 			string public constant name = ...
          CALLVALUE 			string public constant name = ...
          ISZERO 			string public constant name = ...
          PUSH [tag] 19			string public constant name = ...
          JUMPI 			string public constant name = ...
          PUSH 0			string public constant name = ...
          DUP1 			string public constant name = ...
          REVERT 			string public constant name = ...
        tag 19			string public constant name = ...
          JUMPDEST 			string public constant name = ...
          PUSH [tag] 20			string public constant name = ...
          PUSH [tag] 21			string public constant name = ...
          JUMP 			string public constant name = ...
        tag 20			string public constant name = ...
          JUMPDEST 			string public constant name = ...
          PUSH 40			string public constant name = ...
          MLOAD 			string public constant name = ...
          DUP1 			string public constant name = ...
          DUP1 			string public constant name = ...
          PUSH 20			string public constant name = ...
          ADD 			string public constant name = ...
          DUP3 			string public constant name = ...
          DUP2 			string public constant name = ...
          SUB 			string public constant name = ...
          DUP3 			string public constant name = ...
          MSTORE 			string public constant name = ...
          DUP4 			string public constant name = ...
          DUP2 			string public constant name = ...
          DUP2 			string public constant name = ...
          MLOAD 			string public constant name = ...
          DUP2 			string public constant name = ...
          MSTORE 			string public constant name = ...
          PUSH 20			string public constant name = ...
          ADD 			string public constant name = ...
          SWAP2 			string public constant name = ...
          POP 			string public constant name = ...
          DUP1 			string public constant name = ...
          MLOAD 			string public constant name = ...
          SWAP1 			string public constant name = ...
          PUSH 20			string public constant name = ...
          ADD 			string public constant name = ...
          SWAP1 			string public constant name = ...
          DUP1 			string public constant name = ...
          DUP4 			string public constant name = ...
          DUP4 			string public constant name = ...
          PUSH 0			;
        tag 22			olidity ^0.4.13;\n
/**
 * @tit...
          JUMPDEST 			olidity ^0.4.13;\n
/**
 * @tit...
          DUP4 			@ti
          DUP2 			 
          LT 			**\n * @tit
          ISZERO 			olidity ^0.4.13;\n
/**
 * @tit...
          PUSH [tag] 23			olidity ^0.4.13;\n
/**
 * @tit...
          JUMPI 			olidity ^0.4.13;\n
/**
 * @tit...
          DUP1 			e
          DUP3 			 * 
          ADD 			ace\n * @dev
          MLOAD 			interface\n * @dev 
          DUP2 			C
          DUP5 			of 
          ADD 			ion of ERC2
          MSTORE 			er version of ERC20 interface\...
          PUSH 20			* 
          DUP2 			c
          ADD 			Basic\n * @
          SWAP1 			ERC20Basic\n * @
          POP 			ERC20Basic\n * @
          PUSH [tag] 22			olidity ^0.4.13;\n
/**
 * @tit...
          JUMP 			olidity ^0.4.13;\n
/**
 * @tit...
        tag 23			olidity ^0.4.13;\n
/**
 * @tit...
          JUMPDEST 			olidity ^0.4.13;\n
/**
 * @tit...
          POP 			ity ^0.4.13;\n

          POP 			string public constant name = ...
          POP 			string public constant name = ...
          POP 			string public constant name = ...
          SWAP1 			string public constant name = ...
          POP 			string public constant name = ...
          SWAP1 			string public constant name = ...
          DUP2 			string public constant name = ...
          ADD 			string public constant name = ...
          SWAP1 			string public constant name = ...
          PUSH 1F			string public constant name = ...
          AND 			string public constant name = ...
          DUP1 			string public constant name = ...
          ISZERO 			string public constant name = ...
          PUSH [tag] 25			string public constant name = ...
          JUMPI 			string public constant name = ...
          DUP1 			string public constant name = ...
          DUP3 			string public constant name = ...
          SUB 			string public constant name = ...
          DUP1 			string public constant name = ...
          MLOAD 			string public constant name = ...
          PUSH 1			string public constant name = ...
          DUP4 			string public constant name = ...
          PUSH 20			string public constant name = ...
          SUB 			string public constant name = ...
          PUSH 100			string public constant name = ...
          EXP 			string public constant name = ...
          SUB 			string public constant name = ...
          NOT 			string public constant name = ...
          AND 			string public constant name = ...
          DUP2 			string public constant name = ...
          MSTORE 			string public constant name = ...
          PUSH 20			string public constant name = ...
          ADD 			string public constant name = ...
          SWAP2 			string public constant name = ...
          POP 			string public constant name = ...
        tag 25			string public constant name = ...
          JUMPDEST 			string public constant name = ...
          POP 			string public constant name = ...
          SWAP3 			string public constant name = ...
          POP 			string public constant name = ...
          POP 			string public constant name = ...
          POP 			string public constant name = ...
          PUSH 40			string public constant name = ...
          MLOAD 			string public constant name = ...
          DUP1 			string public constant name = ...
          SWAP2 			string public constant name = ...
          SUB 			string public constant name = ...
          SWAP1 			string public constant name = ...
          RETURN 			string public constant name = ...
        tag 4			function approve(address _spen...
          JUMPDEST 			function approve(address _spen...
          CALLVALUE 			function approve(address _spen...
          ISZERO 			function approve(address _spen...
          PUSH [tag] 26			function approve(address _spen...
          JUMPI 			function approve(address _spen...
          PUSH 0			function approve(address _spen...
          DUP1 			function approve(address _spen...
          REVERT 			function approve(address _spen...
        tag 26			function approve(address _spen...
          JUMPDEST 			function approve(address _spen...
          PUSH [tag] 27			function approve(address _spen...
          PUSH 4			function approve(address _spen...
          DUP1 			function approve(address _spen...
          DUP1 			function approve(address _spen...
          CALLDATALOAD 			function approve(address _spen...
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function approve(address _spen...
          AND 			function approve(address _spen...
          SWAP1 			function approve(address _spen...
          PUSH 20			function approve(address _spen...
          ADD 			function approve(address _spen...
          SWAP1 			function approve(address _spen...
          SWAP2 			function approve(address _spen...
          SWAP1 			function approve(address _spen...
          DUP1 			function approve(address _spen...
          CALLDATALOAD 			function approve(address _spen...
          SWAP1 			function approve(address _spen...
          PUSH 20			function approve(address _spen...
          ADD 			function approve(address _spen...
          SWAP1 			function approve(address _spen...
          SWAP2 			function approve(address _spen...
          SWAP1 			function approve(address _spen...
          POP 			function approve(address _spen...
          POP 			function approve(address _spen...
          PUSH [tag] 28			function approve(address _spen...
          JUMP 			function approve(address _spen...
        tag 27			function approve(address _spen...
          JUMPDEST 			function approve(address _spen...
          PUSH 40			function approve(address _spen...
          MLOAD 			function approve(address _spen...
          DUP1 			function approve(address _spen...
          DUP3 			function approve(address _spen...
          ISZERO 			function approve(address _spen...
          ISZERO 			function approve(address _spen...
          ISZERO 			function approve(address _spen...
          ISZERO 			function approve(address _spen...
          DUP2 			function approve(address _spen...
          MSTORE 			function approve(address _spen...
          PUSH 20			function approve(address _spen...
          ADD 			function approve(address _spen...
          SWAP2 			function approve(address _spen...
          POP 			function approve(address _spen...
          POP 			function approve(address _spen...
          PUSH 40			function approve(address _spen...
          MLOAD 			function approve(address _spen...
          DUP1 			function approve(address _spen...
          SWAP2 			function approve(address _spen...
          SUB 			function approve(address _spen...
          SWAP1 			function approve(address _spen...
          RETURN 			function approve(address _spen...
        tag 5			uint256 public totalSupply
          JUMPDEST 			uint256 public totalSupply
          CALLVALUE 			uint256 public totalSupply
          ISZERO 			uint256 public totalSupply
          PUSH [tag] 29			uint256 public totalSupply
          JUMPI 			uint256 public totalSupply
          PUSH 0			uint256 public totalSupply
          DUP1 			uint256 public totalSupply
          REVERT 			uint256 public totalSupply
        tag 29			uint256 public totalSupply
          JUMPDEST 			uint256 public totalSupply
          PUSH [tag] 30			uint256 public totalSupply
          PUSH [tag] 31			uint256 public totalSupply
          JUMP 			uint256 public totalSupply
        tag 30			uint256 public totalSupply
          JUMPDEST 			uint256 public totalSupply
          PUSH 40			uint256 public totalSupply
          MLOAD 			uint256 public totalSupply
          DUP1 			uint256 public totalSupply
          DUP3 			uint256 public totalSupply
          DUP2 			uint256 public totalSupply
          MSTORE 			uint256 public totalSupply
          PUSH 20			uint256 public totalSupply
          ADD 			uint256 public totalSupply
          SWAP2 			uint256 public totalSupply
          POP 			uint256 public totalSupply
          POP 			uint256 public totalSupply
          PUSH 40			uint256 public totalSupply
          MLOAD 			uint256 public totalSupply
          DUP1 			uint256 public totalSupply
          SWAP2 			uint256 public totalSupply
          SUB 			uint256 public totalSupply
          SWAP1 			uint256 public totalSupply
          RETURN 			uint256 public totalSupply
        tag 6			function transferFrom(address ...
          JUMPDEST 			function transferFrom(address ...
          CALLVALUE 			function transferFrom(address ...
          ISZERO 			function transferFrom(address ...
          PUSH [tag] 32			function transferFrom(address ...
          JUMPI 			function transferFrom(address ...
          PUSH 0			function transferFrom(address ...
          DUP1 			function transferFrom(address ...
          REVERT 			function transferFrom(address ...
        tag 32			function transferFrom(address ...
          JUMPDEST 			function transferFrom(address ...
          PUSH [tag] 33			function transferFrom(address ...
          PUSH 4			function transferFrom(address ...
          DUP1 			function transferFrom(address ...
          DUP1 			function transferFrom(address ...
          CALLDATALOAD 			function transferFrom(address ...
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transferFrom(address ...
          AND 			function transferFrom(address ...
          SWAP1 			function transferFrom(address ...
          PUSH 20			function transferFrom(address ...
          ADD 			function transferFrom(address ...
          SWAP1 			function transferFrom(address ...
          SWAP2 			function transferFrom(address ...
          SWAP1 			function transferFrom(address ...
          DUP1 			function transferFrom(address ...
          CALLDATALOAD 			function transferFrom(address ...
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transferFrom(address ...
          AND 			function transferFrom(address ...
          SWAP1 			function transferFrom(address ...
          PUSH 20			function transferFrom(address ...
          ADD 			function transferFrom(address ...
          SWAP1 			function transferFrom(address ...
          SWAP2 			function transferFrom(address ...
          SWAP1 			function transferFrom(address ...
          DUP1 			function transferFrom(address ...
          CALLDATALOAD 			function transferFrom(address ...
          SWAP1 			function transferFrom(address ...
          PUSH 20			function transferFrom(address ...
          ADD 			function transferFrom(address ...
          SWAP1 			function transferFrom(address ...
          SWAP2 			function transferFrom(address ...
          SWAP1 			function transferFrom(address ...
          POP 			function transferFrom(address ...
          POP 			function transferFrom(address ...
          PUSH [tag] 34			function transferFrom(address ...
          JUMP 			function transferFrom(address ...
        tag 33			function transferFrom(address ...
          JUMPDEST 			function transferFrom(address ...
          PUSH 40			function transferFrom(address ...
          MLOAD 			function transferFrom(address ...
          DUP1 			function transferFrom(address ...
          DUP3 			function transferFrom(address ...
          ISZERO 			function transferFrom(address ...
          ISZERO 			function transferFrom(address ...
          ISZERO 			function transferFrom(address ...
          ISZERO 			function transferFrom(address ...
          DUP2 			function transferFrom(address ...
          MSTORE 			function transferFrom(address ...
          PUSH 20			function transferFrom(address ...
          ADD 			function transferFrom(address ...
          SWAP2 			function transferFrom(address ...
          POP 			function transferFrom(address ...
          POP 			function transferFrom(address ...
          PUSH 40			function transferFrom(address ...
          MLOAD 			function transferFrom(address ...
          DUP1 			function transferFrom(address ...
          SWAP2 			function transferFrom(address ...
          SUB 			function transferFrom(address ...
          SWAP1 			function transferFrom(address ...
          RETURN 			function transferFrom(address ...
        tag 7			uint32 public constant decimal...
          JUMPDEST 			uint32 public constant decimal...
          CALLVALUE 			uint32 public constant decimal...
          ISZERO 			uint32 public constant decimal...
          PUSH [tag] 35			uint32 public constant decimal...
          JUMPI 			uint32 public constant decimal...
          PUSH 0			uint32 public constant decimal...
          DUP1 			uint32 public constant decimal...
          REVERT 			uint32 public constant decimal...
        tag 35			uint32 public constant decimal...
          JUMPDEST 			uint32 public constant decimal...
          PUSH [tag] 36			uint32 public constant decimal...
          PUSH [tag] 37			uint32 public constant decimal...
          JUMP 			uint32 public constant decimal...
        tag 36			uint32 public constant decimal...
          JUMPDEST 			uint32 public constant decimal...
          PUSH 40			uint32 public constant decimal...
          MLOAD 			uint32 public constant decimal...
          DUP1 			uint32 public constant decimal...
          DUP3 			uint32 public constant decimal...
          PUSH FFFFFFFF			uint32 public constant decimal...
          AND 			uint32 public constant decimal...
          PUSH FFFFFFFF			uint32 public constant decimal...
          AND 			uint32 public constant decimal...
          DUP2 			uint32 public constant decimal...
          MSTORE 			uint32 public constant decimal...
          PUSH 20			uint32 public constant decimal...
          ADD 			uint32 public constant decimal...
          SWAP2 			uint32 public constant decimal...
          POP 			uint32 public constant decimal...
          POP 			uint32 public constant decimal...
          PUSH 40			uint32 public constant decimal...
          MLOAD 			uint32 public constant decimal...
          DUP1 			uint32 public constant decimal...
          SWAP2 			uint32 public constant decimal...
          SUB 			uint32 public constant decimal...
          SWAP1 			uint32 public constant decimal...
          RETURN 			uint32 public constant decimal...
        tag 8			function mint(address _to, uin...
          JUMPDEST 			function mint(address _to, uin...
          CALLVALUE 			function mint(address _to, uin...
          ISZERO 			function mint(address _to, uin...
          PUSH [tag] 38			function mint(address _to, uin...
          JUMPI 			function mint(address _to, uin...
          PUSH 0			function mint(address _to, uin...
          DUP1 			function mint(address _to, uin...
          REVERT 			function mint(address _to, uin...
        tag 38			function mint(address _to, uin...
          JUMPDEST 			function mint(address _to, uin...
          PUSH [tag] 39			function mint(address _to, uin...
          PUSH 4			function mint(address _to, uin...
          DUP1 			function mint(address _to, uin...
          DUP1 			function mint(address _to, uin...
          CALLDATALOAD 			function mint(address _to, uin...
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function mint(address _to, uin...
          AND 			function mint(address _to, uin...
          SWAP1 			function mint(address _to, uin...
          PUSH 20			function mint(address _to, uin...
          ADD 			function mint(address _to, uin...
          SWAP1 			function mint(address _to, uin...
          SWAP2 			function mint(address _to, uin...
          SWAP1 			function mint(address _to, uin...
          DUP1 			function mint(address _to, uin...
          CALLDATALOAD 			function mint(address _to, uin...
          SWAP1 			function mint(address _to, uin...
          PUSH 20			function mint(address _to, uin...
          ADD 			function mint(address _to, uin...
          SWAP1 			function mint(address _to, uin...
          SWAP2 			function mint(address _to, uin...
          SWAP1 			function mint(address _to, uin...
          POP 			function mint(address _to, uin...
          POP 			function mint(address _to, uin...
          PUSH [tag] 40			function mint(address _to, uin...
          JUMP 			function mint(address _to, uin...
        tag 39			function mint(address _to, uin...
          JUMPDEST 			function mint(address _to, uin...
          PUSH 40			function mint(address _to, uin...
          MLOAD 			function mint(address _to, uin...
          DUP1 			function mint(address _to, uin...
          DUP3 			function mint(address _to, uin...
          ISZERO 			function mint(address _to, uin...
          ISZERO 			function mint(address _to, uin...
          ISZERO 			function mint(address _to, uin...
          ISZERO 			function mint(address _to, uin...
          DUP2 			function mint(address _to, uin...
          MSTORE 			function mint(address _to, uin...
          PUSH 20			function mint(address _to, uin...
          ADD 			function mint(address _to, uin...
          SWAP2 			function mint(address _to, uin...
          POP 			function mint(address _to, uin...
          POP 			function mint(address _to, uin...
          PUSH 40			function mint(address _to, uin...
          MLOAD 			function mint(address _to, uin...
          DUP1 			function mint(address _to, uin...
          SWAP2 			function mint(address _to, uin...
          SUB 			function mint(address _to, uin...
          SWAP1 			function mint(address _to, uin...
          RETURN 			function mint(address _to, uin...
        tag 9			function balanceOf(address _ow...
          JUMPDEST 			function balanceOf(address _ow...
          CALLVALUE 			function balanceOf(address _ow...
          ISZERO 			function balanceOf(address _ow...
          PUSH [tag] 41			function balanceOf(address _ow...
          JUMPI 			function balanceOf(address _ow...
          PUSH 0			function balanceOf(address _ow...
          DUP1 			function balanceOf(address _ow...
          REVERT 			function balanceOf(address _ow...
        tag 41			function balanceOf(address _ow...
          JUMPDEST 			function balanceOf(address _ow...
          PUSH [tag] 42			function balanceOf(address _ow...
          PUSH 4			function balanceOf(address _ow...
          DUP1 			function balanceOf(address _ow...
          DUP1 			function balanceOf(address _ow...
          CALLDATALOAD 			function balanceOf(address _ow...
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function balanceOf(address _ow...
          AND 			function balanceOf(address _ow...
          SWAP1 			function balanceOf(address _ow...
          PUSH 20			function balanceOf(address _ow...
          ADD 			function balanceOf(address _ow...
          SWAP1 			function balanceOf(address _ow...
          SWAP2 			function balanceOf(address _ow...
          SWAP1 			function balanceOf(address _ow...
          POP 			function balanceOf(address _ow...
          POP 			function balanceOf(address _ow...
          PUSH [tag] 43			function balanceOf(address _ow...
          JUMP 			function balanceOf(address _ow...
        tag 42			function balanceOf(address _ow...
          JUMPDEST 			function balanceOf(address _ow...
          PUSH 40			function balanceOf(address _ow...
          MLOAD 			function balanceOf(address _ow...
          DUP1 			function balanceOf(address _ow...
          DUP3 			function balanceOf(address _ow...
          DUP2 			function balanceOf(address _ow...
          MSTORE 			function balanceOf(address _ow...
          PUSH 20			function balanceOf(address _ow...
          ADD 			function balanceOf(address _ow...
          SWAP2 			function balanceOf(address _ow...
          POP 			function balanceOf(address _ow...
          POP 			function balanceOf(address _ow...
          PUSH 40			function balanceOf(address _ow...
          MLOAD 			function balanceOf(address _ow...
          DUP1 			function balanceOf(address _ow...
          SWAP2 			function balanceOf(address _ow...
          SUB 			function balanceOf(address _ow...
          SWAP1 			function balanceOf(address _ow...
          RETURN 			function balanceOf(address _ow...
        tag 10			function finishMinting()public...
          JUMPDEST 			function finishMinting()public...
          CALLVALUE 			function finishMinting()public...
          ISZERO 			function finishMinting()public...
          PUSH [tag] 44			function finishMinting()public...
          JUMPI 			function finishMinting()public...
          PUSH 0			function finishMinting()public...
          DUP1 			function finishMinting()public...
          REVERT 			function finishMinting()public...
        tag 44			function finishMinting()public...
          JUMPDEST 			function finishMinting()public...
          PUSH [tag] 45			function finishMinting()public...
          PUSH [tag] 46			function finishMinting()public...
          JUMP 			function finishMinting()public...
        tag 45			function finishMinting()public...
          JUMPDEST 			function finishMinting()public...
          PUSH 40			function finishMinting()public...
          MLOAD 			function finishMinting()public...
          DUP1 			function finishMinting()public...
          DUP3 			function finishMinting()public...
          ISZERO 			function finishMinting()public...
          ISZERO 			function finishMinting()public...
          ISZERO 			function finishMinting()public...
          ISZERO 			function finishMinting()public...
          DUP2 			function finishMinting()public...
          MSTORE 			function finishMinting()public...
          PUSH 20			function finishMinting()public...
          ADD 			function finishMinting()public...
          SWAP2 			function finishMinting()public...
          POP 			function finishMinting()public...
          POP 			function finishMinting()public...
          PUSH 40			function finishMinting()public...
          MLOAD 			function finishMinting()public...
          DUP1 			function finishMinting()public...
          SWAP2 			function finishMinting()public...
          SUB 			function finishMinting()public...
          SWAP1 			function finishMinting()public...
          RETURN 			function finishMinting()public...
        tag 11			address public owner
          JUMPDEST 			address public owner
          CALLVALUE 			address public owner
          ISZERO 			address public owner
          PUSH [tag] 47			address public owner
          JUMPI 			address public owner
          PUSH 0			address public owner
          DUP1 			address public owner
          REVERT 			address public owner
        tag 47			address public owner
          JUMPDEST 			address public owner
          PUSH [tag] 48			address public owner
          PUSH [tag] 49			address public owner
          JUMP 			address public owner
        tag 48			address public owner
          JUMPDEST 			address public owner
          PUSH 40			address public owner
          MLOAD 			address public owner
          DUP1 			address public owner
          DUP3 			address public owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address public owner
          AND 			address public owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address public owner
          AND 			address public owner
          DUP2 			address public owner
          MSTORE 			address public owner
          PUSH 20			address public owner
          ADD 			address public owner
          SWAP2 			address public owner
          POP 			address public owner
          POP 			address public owner
          PUSH 40			address public owner
          MLOAD 			address public owner
          DUP1 			address public owner
          SWAP2 			address public owner
          SUB 			address public owner
          SWAP1 			address public owner
          RETURN 			address public owner
        tag 12			string public constant symbol ...
          JUMPDEST 			string public constant symbol ...
          CALLVALUE 			string public constant symbol ...
          ISZERO 			string public constant symbol ...
          PUSH [tag] 50			string public constant symbol ...
          JUMPI 			string public constant symbol ...
          PUSH 0			string public constant symbol ...
          DUP1 			string public constant symbol ...
          REVERT 			string public constant symbol ...
        tag 50			string public constant symbol ...
          JUMPDEST 			string public constant symbol ...
          PUSH [tag] 51			string public constant symbol ...
          PUSH [tag] 52			string public constant symbol ...
          JUMP 			string public constant symbol ...
        tag 51			string public constant symbol ...
          JUMPDEST 			string public constant symbol ...
          PUSH 40			string public constant symbol ...
          MLOAD 			string public constant symbol ...
          DUP1 			string public constant symbol ...
          DUP1 			string public constant symbol ...
          PUSH 20			string public constant symbol ...
          ADD 			string public constant symbol ...
          DUP3 			string public constant symbol ...
          DUP2 			string public constant symbol ...
          SUB 			string public constant symbol ...
          DUP3 			string public constant symbol ...
          MSTORE 			string public constant symbol ...
          DUP4 			string public constant symbol ...
          DUP2 			string public constant symbol ...
          DUP2 			string public constant symbol ...
          MLOAD 			string public constant symbol ...
          DUP2 			string public constant symbol ...
          MSTORE 			string public constant symbol ...
          PUSH 20			string public constant symbol ...
          ADD 			string public constant symbol ...
          SWAP2 			string public constant symbol ...
          POP 			string public constant symbol ...
          DUP1 			string public constant symbol ...
          MLOAD 			string public constant symbol ...
          SWAP1 			string public constant symbol ...
          PUSH 20			string public constant symbol ...
          ADD 			string public constant symbol ...
          SWAP1 			string public constant symbol ...
          DUP1 			string public constant symbol ...
          DUP4 			string public constant symbol ...
          DUP4 			string public constant symbol ...
          PUSH 0			;
        tag 53			olidity ^0.4.13;\n
/**
 * @tit...
          JUMPDEST 			olidity ^0.4.13;\n
/**
 * @tit...
          DUP4 			@ti
          DUP2 			 
          LT 			**\n * @tit
          ISZERO 			olidity ^0.4.13;\n
/**
 * @tit...
          PUSH [tag] 54			olidity ^0.4.13;\n
/**
 * @tit...
          JUMPI 			olidity ^0.4.13;\n
/**
 * @tit...
          DUP1 			e
          DUP3 			 * 
          ADD 			ace\n * @dev
          MLOAD 			interface\n * @dev 
          DUP2 			C
          DUP5 			of 
          ADD 			ion of ERC2
          MSTORE 			er version of ERC20 interface\...
          PUSH 20			* 
          DUP2 			c
          ADD 			Basic\n * @
          SWAP1 			ERC20Basic\n * @
          POP 			ERC20Basic\n * @
          PUSH [tag] 53			olidity ^0.4.13;\n
/**
 * @tit...
          JUMP 			olidity ^0.4.13;\n
/**
 * @tit...
        tag 54			olidity ^0.4.13;\n
/**
 * @tit...
          JUMPDEST 			olidity ^0.4.13;\n
/**
 * @tit...
          POP 			ity ^0.4.13;\n

          POP 			string public constant symbol ...
          POP 			string public constant symbol ...
          POP 			string public constant symbol ...
          SWAP1 			string public constant symbol ...
          POP 			string public constant symbol ...
          SWAP1 			string public constant symbol ...
          DUP2 			string public constant symbol ...
          ADD 			string public constant symbol ...
          SWAP1 			string public constant symbol ...
          PUSH 1F			string public constant symbol ...
          AND 			string public constant symbol ...
          DUP1 			string public constant symbol ...
          ISZERO 			string public constant symbol ...
          PUSH [tag] 56			string public constant symbol ...
          JUMPI 			string public constant symbol ...
          DUP1 			string public constant symbol ...
          DUP3 			string public constant symbol ...
          SUB 			string public constant symbol ...
          DUP1 			string public constant symbol ...
          MLOAD 			string public constant symbol ...
          PUSH 1			string public constant symbol ...
          DUP4 			string public constant symbol ...
          PUSH 20			string public constant symbol ...
          SUB 			string public constant symbol ...
          PUSH 100			string public constant symbol ...
          EXP 			string public constant symbol ...
          SUB 			string public constant symbol ...
          NOT 			string public constant symbol ...
          AND 			string public constant symbol ...
          DUP2 			string public constant symbol ...
          MSTORE 			string public constant symbol ...
          PUSH 20			string public constant symbol ...
          ADD 			string public constant symbol ...
          SWAP2 			string public constant symbol ...
          POP 			string public constant symbol ...
        tag 56			string public constant symbol ...
          JUMPDEST 			string public constant symbol ...
          POP 			string public constant symbol ...
          SWAP3 			string public constant symbol ...
          POP 			string public constant symbol ...
          POP 			string public constant symbol ...
          POP 			string public constant symbol ...
          PUSH 40			string public constant symbol ...
          MLOAD 			string public constant symbol ...
          DUP1 			string public constant symbol ...
          SWAP2 			string public constant symbol ...
          SUB 			string public constant symbol ...
          SWAP1 			string public constant symbol ...
          RETURN 			string public constant symbol ...
        tag 13			function transfer(address _to,...
          JUMPDEST 			function transfer(address _to,...
          CALLVALUE 			function transfer(address _to,...
          ISZERO 			function transfer(address _to,...
          PUSH [tag] 57			function transfer(address _to,...
          JUMPI 			function transfer(address _to,...
          PUSH 0			function transfer(address _to,...
          DUP1 			function transfer(address _to,...
          REVERT 			function transfer(address _to,...
        tag 57			function transfer(address _to,...
          JUMPDEST 			function transfer(address _to,...
          PUSH [tag] 58			function transfer(address _to,...
          PUSH 4			function transfer(address _to,...
          DUP1 			function transfer(address _to,...
          DUP1 			function transfer(address _to,...
          CALLDATALOAD 			function transfer(address _to,...
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transfer(address _to,...
          AND 			function transfer(address _to,...
          SWAP1 			function transfer(address _to,...
          PUSH 20			function transfer(address _to,...
          ADD 			function transfer(address _to,...
          SWAP1 			function transfer(address _to,...
          SWAP2 			function transfer(address _to,...
          SWAP1 			function transfer(address _to,...
          DUP1 			function transfer(address _to,...
          CALLDATALOAD 			function transfer(address _to,...
          SWAP1 			function transfer(address _to,...
          PUSH 20			function transfer(address _to,...
          ADD 			function transfer(address _to,...
          SWAP1 			function transfer(address _to,...
          SWAP2 			function transfer(address _to,...
          SWAP1 			function transfer(address _to,...
          POP 			function transfer(address _to,...
          POP 			function transfer(address _to,...
          PUSH [tag] 59			function transfer(address _to,...
          JUMP 			function transfer(address _to,...
        tag 58			function transfer(address _to,...
          JUMPDEST 			function transfer(address _to,...
          PUSH 40			function transfer(address _to,...
          MLOAD 			function transfer(address _to,...
          DUP1 			function transfer(address _to,...
          DUP3 			function transfer(address _to,...
          ISZERO 			function transfer(address _to,...
          ISZERO 			function transfer(address _to,...
          ISZERO 			function transfer(address _to,...
          ISZERO 			function transfer(address _to,...
          DUP2 			function transfer(address _to,...
          MSTORE 			function transfer(address _to,...
          PUSH 20			function transfer(address _to,...
          ADD 			function transfer(address _to,...
          SWAP2 			function transfer(address _to,...
          POP 			function transfer(address _to,...
          POP 			function transfer(address _to,...
          PUSH 40			function transfer(address _to,...
          MLOAD 			function transfer(address _to,...
          DUP1 			function transfer(address _to,...
          SWAP2 			function transfer(address _to,...
          SUB 			function transfer(address _to,...
          SWAP1 			function transfer(address _to,...
          RETURN 			function transfer(address _to,...
        tag 14			function allowance(address _ow...
          JUMPDEST 			function allowance(address _ow...
          CALLVALUE 			function allowance(address _ow...
          ISZERO 			function allowance(address _ow...
          PUSH [tag] 60			function allowance(address _ow...
          JUMPI 			function allowance(address _ow...
          PUSH 0			function allowance(address _ow...
          DUP1 			function allowance(address _ow...
          REVERT 			function allowance(address _ow...
        tag 60			function allowance(address _ow...
          JUMPDEST 			function allowance(address _ow...
          PUSH [tag] 61			function allowance(address _ow...
          PUSH 4			function allowance(address _ow...
          DUP1 			function allowance(address _ow...
          DUP1 			function allowance(address _ow...
          CALLDATALOAD 			function allowance(address _ow...
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function allowance(address _ow...
          AND 			function allowance(address _ow...
          SWAP1 			function allowance(address _ow...
          PUSH 20			function allowance(address _ow...
          ADD 			function allowance(address _ow...
          SWAP1 			function allowance(address _ow...
          SWAP2 			function allowance(address _ow...
          SWAP1 			function allowance(address _ow...
          DUP1 			function allowance(address _ow...
          CALLDATALOAD 			function allowance(address _ow...
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function allowance(address _ow...
          AND 			function allowance(address _ow...
          SWAP1 			function allowance(address _ow...
          PUSH 20			function allowance(address _ow...
          ADD 			function allowance(address _ow...
          SWAP1 			function allowance(address _ow...
          SWAP2 			function allowance(address _ow...
          SWAP1 			function allowance(address _ow...
          POP 			function allowance(address _ow...
          POP 			function allowance(address _ow...
          PUSH [tag] 62			function allowance(address _ow...
          JUMP 			function allowance(address _ow...
        tag 61			function allowance(address _ow...
          JUMPDEST 			function allowance(address _ow...
          PUSH 40			function allowance(address _ow...
          MLOAD 			function allowance(address _ow...
          DUP1 			function allowance(address _ow...
          DUP3 			function allowance(address _ow...
          DUP2 			function allowance(address _ow...
          MSTORE 			function allowance(address _ow...
          PUSH 20			function allowance(address _ow...
          ADD 			function allowance(address _ow...
          SWAP2 			function allowance(address _ow...
          POP 			function allowance(address _ow...
          POP 			function allowance(address _ow...
          PUSH 40			function allowance(address _ow...
          MLOAD 			function allowance(address _ow...
          DUP1 			function allowance(address _ow...
          SWAP2 			function allowance(address _ow...
          SUB 			function allowance(address _ow...
          SWAP1 			function allowance(address _ow...
          RETURN 			function allowance(address _ow...
        tag 15			function transferOwnership(add...
          JUMPDEST 			function transferOwnership(add...
          CALLVALUE 			function transferOwnership(add...
          ISZERO 			function transferOwnership(add...
          PUSH [tag] 63			function transferOwnership(add...
          JUMPI 			function transferOwnership(add...
          PUSH 0			function transferOwnership(add...
          DUP1 			function transferOwnership(add...
          REVERT 			function transferOwnership(add...
        tag 63			function transferOwnership(add...
          JUMPDEST 			function transferOwnership(add...
          PUSH [tag] 64			function transferOwnership(add...
          PUSH 4			function transferOwnership(add...
          DUP1 			function transferOwnership(add...
          DUP1 			function transferOwnership(add...
          CALLDATALOAD 			function transferOwnership(add...
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transferOwnership(add...
          AND 			function transferOwnership(add...
          SWAP1 			function transferOwnership(add...
          PUSH 20			function transferOwnership(add...
          ADD 			function transferOwnership(add...
          SWAP1 			function transferOwnership(add...
          SWAP2 			function transferOwnership(add...
          SWAP1 			function transferOwnership(add...
          POP 			function transferOwnership(add...
          POP 			function transferOwnership(add...
          PUSH [tag] 65			function transferOwnership(add...
          JUMP 			function transferOwnership(add...
        tag 64			function transferOwnership(add...
          JUMPDEST 			function transferOwnership(add...
          STOP 			function transferOwnership(add...
        tag 18			bool public mintingFinished = ...
          JUMPDEST 			bool public mintingFinished = ...
          PUSH 3			bool public mintingFinished = ...
          PUSH 14			bool public mintingFinished = ...
          SWAP1 			bool public mintingFinished = ...
          SLOAD 			bool public mintingFinished = ...
          SWAP1 			bool public mintingFinished = ...
          PUSH 100			bool public mintingFinished = ...
          EXP 			bool public mintingFinished = ...
          SWAP1 			bool public mintingFinished = ...
          DIV 			bool public mintingFinished = ...
          PUSH FF			bool public mintingFinished = ...
          AND 			bool public mintingFinished = ...
          DUP2 			bool public mintingFinished = ...
          JUMP [out]			bool public mintingFinished = ...
        tag 21			string public constant name = ...
          JUMPDEST 			string public constant name = ...
          PUSH 40			string public constant name = ...
          DUP1 			string public constant name = ...
          MLOAD 			string public constant name = ...
          SWAP1 			string public constant name = ...
          DUP2 			string public constant name = ...
          ADD 			string public constant name = ...
          PUSH 40			string public constant name = ...
          MSTORE 			string public constant name = ...
          DUP1 			string public constant name = ...
          PUSH 15			string public constant name = ...
          DUP2 			string public constant name = ...
          MSTORE 			string public constant name = ...
          PUSH 20			string public constant name = ...
          ADD 			string public constant name = ...
          PUSH 4D756C74692D4D61726B6574696E6720746F6B656E0000000000000000000000			string public constant name = ...
          DUP2 			string public constant name = ...
          MSTORE 			string public constant name = ...
          POP 			string public constant name = ...
          DUP2 			string public constant name = ...
          JUMP [out]			string public constant name = ...
        tag 28			function approve(address _spen...
          JUMPDEST 			function approve(address _spen...
          PUSH 0			bool
          DUP1 			0
          DUP3 			_value
          EQ 			_value == 0
          DUP1 			(_value == 0) || (allowed[msg....
          PUSH [tag] 67			(_value == 0) || (allowed[msg....
          JUMPI 			(_value == 0) || (allowed[msg....
          POP 			(_value == 0) || (allowed[msg....
          PUSH 0			0
          PUSH 2			allowed
          PUSH 0			allowed[msg.sender]
          CALLER 			msg.sender
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
          AND 			allowed[msg.sender]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
          AND 			allowed[msg.sender]
          DUP2 			allowed[msg.sender]
          MSTORE 			allowed[msg.sender]
          PUSH 20			allowed[msg.sender]
          ADD 			allowed[msg.sender]
          SWAP1 			allowed[msg.sender]
          DUP2 			allowed[msg.sender]
          MSTORE 			allowed[msg.sender]
          PUSH 20			allowed[msg.sender]
          ADD 			allowed[msg.sender]
          PUSH 0			allowed[msg.sender]
          KECCAK256 			allowed[msg.sender]
          PUSH 0			allowed[msg.sender][_spender]
          DUP6 			_spender
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
          AND 			allowed[msg.sender][_spender]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
          AND 			allowed[msg.sender][_spender]
          DUP2 			allowed[msg.sender][_spender]
          MSTORE 			allowed[msg.sender][_spender]
          PUSH 20			allowed[msg.sender][_spender]
          ADD 			allowed[msg.sender][_spender]
          SWAP1 			allowed[msg.sender][_spender]
          DUP2 			allowed[msg.sender][_spender]
          MSTORE 			allowed[msg.sender][_spender]
          PUSH 20			allowed[msg.sender][_spender]
          ADD 			allowed[msg.sender][_spender]
          PUSH 0			allowed[msg.sender][_spender]
          KECCAK256 			allowed[msg.sender][_spender]
          SLOAD 			allowed[msg.sender][_spender]
          EQ 			allowed[msg.sender][_spender] ...
        tag 67			(_value == 0) || (allowed[msg....
          JUMPDEST 			(_value == 0) || (allowed[msg....
          ISZERO 			require((_value == 0) || (allo...
          ISZERO 			require((_value == 0) || (allo...
          PUSH [tag] 68			require((_value == 0) || (allo...
          JUMPI 			require((_value == 0) || (allo...
          PUSH 0			require((_value == 0) || (allo...
          DUP1 			require((_value == 0) || (allo...
          REVERT 			require((_value == 0) || (allo...
        tag 68			require((_value == 0) || (allo...
          JUMPDEST 			require((_value == 0) || (allo...
          DUP2 			_value
          PUSH 2			allowed
          PUSH 0			allowed[msg.sender]
          CALLER 			msg.sender
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
          AND 			allowed[msg.sender]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
          AND 			allowed[msg.sender]
          DUP2 			allowed[msg.sender]
          MSTORE 			allowed[msg.sender]
          PUSH 20			allowed[msg.sender]
          ADD 			allowed[msg.sender]
          SWAP1 			allowed[msg.sender]
          DUP2 			allowed[msg.sender]
          MSTORE 			allowed[msg.sender]
          PUSH 20			allowed[msg.sender]
          ADD 			allowed[msg.sender]
          PUSH 0			allowed[msg.sender]
          KECCAK256 			allowed[msg.sender]
          PUSH 0			allowed[msg.sender][_spender]
          DUP6 			_spender
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
          AND 			allowed[msg.sender][_spender]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
          AND 			allowed[msg.sender][_spender]
          DUP2 			allowed[msg.sender][_spender]
          MSTORE 			allowed[msg.sender][_spender]
          PUSH 20			allowed[msg.sender][_spender]
          ADD 			allowed[msg.sender][_spender]
          SWAP1 			allowed[msg.sender][_spender]
          DUP2 			allowed[msg.sender][_spender]
          MSTORE 			allowed[msg.sender][_spender]
          PUSH 20			allowed[msg.sender][_spender]
          ADD 			allowed[msg.sender][_spender]
          PUSH 0			allowed[msg.sender][_spender]
          KECCAK256 			allowed[msg.sender][_spender]
          DUP2 			allowed[msg.sender][_spender] ...
          SWAP1 			allowed[msg.sender][_spender] ...
          SSTORE 			allowed[msg.sender][_spender] ...
          POP 			allowed[msg.sender][_spender] ...
          DUP3 			_spender
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Approval(msg.sender, _spender,...
          AND 			Approval(msg.sender, _spender,...
          CALLER 			msg.sender
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Approval(msg.sender, _spender,...
          AND 			Approval(msg.sender, _spender,...
          PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925			Approval(msg.sender, _spender,...
          DUP5 			_value
          PUSH 40			Approval(msg.sender, _spender,...
          MLOAD 			Approval(msg.sender, _spender,...
          DUP1 			Approval(msg.sender, _spender,...
          DUP3 			Approval(msg.sender, _spender,...
          DUP2 			Approval(msg.sender, _spender,...
          MSTORE 			Approval(msg.sender, _spender,...
          PUSH 20			Approval(msg.sender, _spender,...
          ADD 			Approval(msg.sender, _spender,...
          SWAP2 			Approval(msg.sender, _spender,...
          POP 			Approval(msg.sender, _spender,...
          POP 			Approval(msg.sender, _spender,...
          PUSH 40			Approval(msg.sender, _spender,...
          MLOAD 			Approval(msg.sender, _spender,...
          DUP1 			Approval(msg.sender, _spender,...
          SWAP2 			Approval(msg.sender, _spender,...
          SUB 			Approval(msg.sender, _spender,...
          SWAP1 			Approval(msg.sender, _spender,...
          LOG3 			Approval(msg.sender, _spender,...
          PUSH 1			true
          SWAP1 			return true
          POP 			return true
          SWAP3 			function approve(address _spen...
          SWAP2 			function approve(address _spen...
          POP 			function approve(address _spen...
          POP 			function approve(address _spen...
          JUMP [out]			function approve(address _spen...
        tag 31			uint256 public totalSupply
          JUMPDEST 			uint256 public totalSupply
          PUSH 0			uint256 public totalSupply
          SLOAD 			uint256 public totalSupply
          DUP2 			uint256 public totalSupply
          JUMP [out]			uint256 public totalSupply
        tag 34			function transferFrom(address ...
          JUMPDEST 			function transferFrom(address ...
          PUSH 0			bool
          DUP1 			uint _allowance
          PUSH 2			allowed
          PUSH 0			allowed[_from]
          DUP7 			_from
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
          AND 			allowed[_from]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
          AND 			allowed[_from]
          DUP2 			allowed[_from]
          MSTORE 			allowed[_from]
          PUSH 20			allowed[_from]
          ADD 			allowed[_from]
          SWAP1 			allowed[_from]
          DUP2 			allowed[_from]
          MSTORE 			allowed[_from]
          PUSH 20			allowed[_from]
          ADD 			allowed[_from]
          PUSH 0			allowed[_from]
          KECCAK256 			allowed[_from]
          PUSH 0			allowed[_from][msg.sender]
          CALLER 			msg.sender
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
          AND 			allowed[_from][msg.sender]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
          AND 			allowed[_from][msg.sender]
          DUP2 			allowed[_from][msg.sender]
          MSTORE 			allowed[_from][msg.sender]
          PUSH 20			allowed[_from][msg.sender]
          ADD 			allowed[_from][msg.sender]
          SWAP1 			allowed[_from][msg.sender]
          DUP2 			allowed[_from][msg.sender]
          MSTORE 			allowed[_from][msg.sender]
          PUSH 20			allowed[_from][msg.sender]
          ADD 			allowed[_from][msg.sender]
          PUSH 0			allowed[_from][msg.sender]
          KECCAK256 			allowed[_from][msg.sender]
          SLOAD 			allowed[_from][msg.sender]
          SWAP1 			uint _allowance = allowed[_fro...
          POP 			uint _allowance = allowed[_fro...
          PUSH [tag] 70			balances[_to].add(_value)
          DUP4 			_value
          PUSH 1			balances
          PUSH 0			balances[_to]
          DUP8 			_to
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
          AND 			balances[_to]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
          AND 			balances[_to]
          DUP2 			balances[_to]
          MSTORE 			balances[_to]
          PUSH 20			balances[_to]
          ADD 			balances[_to]
          SWAP1 			balances[_to]
          DUP2 			balances[_to]
          MSTORE 			balances[_to]
          PUSH 20			balances[_to]
          ADD 			balances[_to]
          PUSH 0			balances[_to]
          KECCAK256 			balances[_to]
          SLOAD 			balances[_to]
          PUSH [tag] 71			balances[_to].add
          SWAP1 			balances[_to].add
          SWAP2 			balances[_to].add(_value)
          SWAP1 			balances[_to].add(_value)
          PUSH FFFFFFFF			balances[_to].add(_value)
          AND 			balances[_to].add(_value)
          JUMP [in]			balances[_to].add(_value)
        tag 70			balances[_to].add(_value)
          JUMPDEST 			balances[_to].add(_value)
          PUSH 1			balances
          PUSH 0			balances[_to]
          DUP7 			_to
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
          AND 			balances[_to]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
          AND 			balances[_to]
          DUP2 			balances[_to]
          MSTORE 			balances[_to]
          PUSH 20			balances[_to]
          ADD 			balances[_to]
          SWAP1 			balances[_to]
          DUP2 			balances[_to]
          MSTORE 			balances[_to]
          PUSH 20			balances[_to]
          ADD 			balances[_to]
          PUSH 0			balances[_to]
          KECCAK256 			balances[_to]
          DUP2 			balances[_to] = balances[_to]....
          SWAP1 			balances[_to] = balances[_to]....
          SSTORE 			balances[_to] = balances[_to]....
          POP 			balances[_to] = balances[_to]....
          PUSH [tag] 72			balances[_from].sub(_value)
          DUP4 			_value
          PUSH 1			balances
          PUSH 0			balances[_from]
          DUP9 			_from
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
          AND 			balances[_from]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
          AND 			balances[_from]
          DUP2 			balances[_from]
          MSTORE 			balances[_from]
          PUSH 20			balances[_from]
          ADD 			balances[_from]
          SWAP1 			balances[_from]
          DUP2 			balances[_from]
          MSTORE 			balances[_from]
          PUSH 20			balances[_from]
          ADD 			balances[_from]
          PUSH 0			balances[_from]
          KECCAK256 			balances[_from]
          SLOAD 			balances[_from]
          PUSH [tag] 73			balances[_from].sub
          SWAP1 			balances[_from].sub
          SWAP2 			balances[_from].sub(_value)
          SWAP1 			balances[_from].sub(_value)
          PUSH FFFFFFFF			balances[_from].sub(_value)
          AND 			balances[_from].sub(_value)
          JUMP [in]			balances[_from].sub(_value)
        tag 72			balances[_from].sub(_value)
          JUMPDEST 			balances[_from].sub(_value)
          PUSH 1			balances
          PUSH 0			balances[_from]
          DUP8 			_from
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
          AND 			balances[_from]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
          AND 			balances[_from]
          DUP2 			balances[_from]
          MSTORE 			balances[_from]
          PUSH 20			balances[_from]
          ADD 			balances[_from]
          SWAP1 			balances[_from]
          DUP2 			balances[_from]
          MSTORE 			balances[_from]
          PUSH 20			balances[_from]
          ADD 			balances[_from]
          PUSH 0			balances[_from]
          KECCAK256 			balances[_from]
          DUP2 			balances[_from] = balances[_fr...
          SWAP1 			balances[_from] = balances[_fr...
          SSTORE 			balances[_from] = balances[_fr...
          POP 			balances[_from] = balances[_fr...
          PUSH [tag] 74			_allowance.sub(_value)
          DUP4 			_value
          DUP3 			_allowance
          PUSH [tag] 73			_allowance.sub
          SWAP1 			_allowance.sub
          SWAP2 			_allowance.sub(_value)
          SWAP1 			_allowance.sub(_value)
          PUSH FFFFFFFF			_allowance.sub(_value)
          AND 			_allowance.sub(_value)
          JUMP [in]			_allowance.sub(_value)
        tag 74			_allowance.sub(_value)
          JUMPDEST 			_allowance.sub(_value)
          PUSH 2			allowed
          PUSH 0			allowed[_from]
          DUP8 			_from
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
          AND 			allowed[_from]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
          AND 			allowed[_from]
          DUP2 			allowed[_from]
          MSTORE 			allowed[_from]
          PUSH 20			allowed[_from]
          ADD 			allowed[_from]
          SWAP1 			allowed[_from]
          DUP2 			allowed[_from]
          MSTORE 			allowed[_from]
          PUSH 20			allowed[_from]
          ADD 			allowed[_from]
          PUSH 0			allowed[_from]
          KECCAK256 			allowed[_from]
          PUSH 0			allowed[_from][msg.sender]
          CALLER 			msg.sender
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
          AND 			allowed[_from][msg.sender]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
          AND 			allowed[_from][msg.sender]
          DUP2 			allowed[_from][msg.sender]
          MSTORE 			allowed[_from][msg.sender]
          PUSH 20			allowed[_from][msg.sender]
          ADD 			allowed[_from][msg.sender]
          SWAP1 			allowed[_from][msg.sender]
          DUP2 			allowed[_from][msg.sender]
          MSTORE 			allowed[_from][msg.sender]
          PUSH 20			allowed[_from][msg.sender]
          ADD 			allowed[_from][msg.sender]
          PUSH 0			allowed[_from][msg.sender]
          KECCAK256 			allowed[_from][msg.sender]
          DUP2 			allowed[_from][msg.sender] = _...
          SWAP1 			allowed[_from][msg.sender] = _...
          SSTORE 			allowed[_from][msg.sender] = _...
          POP 			allowed[_from][msg.sender] = _...
          DUP4 			_to
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(_from, _to, _value)
          AND 			Transfer(_from, _to, _value)
          DUP6 			_from
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(_from, _to, _value)
          AND 			Transfer(_from, _to, _value)
          PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(_from, _to, _value)
          DUP6 			_value
          PUSH 40			Transfer(_from, _to, _value)
          MLOAD 			Transfer(_from, _to, _value)
          DUP1 			Transfer(_from, _to, _value)
          DUP3 			Transfer(_from, _to, _value)
          DUP2 			Transfer(_from, _to, _value)
          MSTORE 			Transfer(_from, _to, _value)
          PUSH 20			Transfer(_from, _to, _value)
          ADD 			Transfer(_from, _to, _value)
          SWAP2 			Transfer(_from, _to, _value)
          POP 			Transfer(_from, _to, _value)
          POP 			Transfer(_from, _to, _value)
          PUSH 40			Transfer(_from, _to, _value)
          MLOAD 			Transfer(_from, _to, _value)
          DUP1 			Transfer(_from, _to, _value)
          SWAP2 			Transfer(_from, _to, _value)
          SUB 			Transfer(_from, _to, _value)
          SWAP1 			Transfer(_from, _to, _value)
          LOG3 			Transfer(_from, _to, _value)
          PUSH 1			true
          SWAP2 			return true
          POP 			return true
          POP 			function transferFrom(address ...
          SWAP4 			function transferFrom(address ...
          SWAP3 			function transferFrom(address ...
          POP 			function transferFrom(address ...
          POP 			function transferFrom(address ...
          POP 			function transferFrom(address ...
          JUMP [out]			function transferFrom(address ...
        tag 37			uint32 public constant decimal...
          JUMPDEST 			uint32 public constant decimal...
          PUSH 12			18
          DUP2 			uint32 public constant decimal...
          JUMP [out]			uint32 public constant decimal...
        tag 40			function mint(address _to, uin...
          JUMPDEST 			function mint(address _to, uin...
          PUSH 0			bool
          PUSH 3			owner
          PUSH 0			owner
          SWAP1 			owner
          SLOAD 			owner
          SWAP1 			owner
          PUSH 100			owner
          EXP 			owner
          SWAP1 			owner
          DIV 			owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
          AND 			owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
          AND 			msg.sender == owner
          CALLER 			msg.sender
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
          AND 			msg.sender == owner
          EQ 			msg.sender == owner
          ISZERO 			require(msg.sender == owner)
          ISZERO 			require(msg.sender == owner)
          PUSH [tag] 76			require(msg.sender == owner)
          JUMPI 			require(msg.sender == owner)
          PUSH 0			require(msg.sender == owner)
          DUP1 			require(msg.sender == owner)
          REVERT 			require(msg.sender == owner)
        tag 76			require(msg.sender == owner)
          JUMPDEST 			require(msg.sender == owner)
          PUSH 3			mintingFinished
          PUSH 14			mintingFinished
          SWAP1 			mintingFinished
          SLOAD 			mintingFinished
          SWAP1 			mintingFinished
          PUSH 100			mintingFinished
          EXP 			mintingFinished
          SWAP1 			mintingFinished
          DIV 			mintingFinished
          PUSH FF			mintingFinished
          AND 			mintingFinished
          ISZERO 			!mintingFinished
          ISZERO 			require(!mintingFinished)
          ISZERO 			require(!mintingFinished)
          PUSH [tag] 78			require(!mintingFinished)
          JUMPI 			require(!mintingFinished)
          PUSH 0			require(!mintingFinished)
          DUP1 			require(!mintingFinished)
          REVERT 			require(!mintingFinished)
        tag 78			require(!mintingFinished)
          JUMPDEST 			require(!mintingFinished)
          PUSH [tag] 80			totalSupply.add(_amount)
          DUP3 			_amount
          PUSH 0			totalSupply
          SLOAD 			totalSupply
          PUSH [tag] 71			totalSupply.add
          SWAP1 			totalSupply.add
          SWAP2 			totalSupply.add(_amount)
          SWAP1 			totalSupply.add(_amount)
          PUSH FFFFFFFF			totalSupply.add(_amount)
          AND 			totalSupply.add(_amount)
          JUMP [in]			totalSupply.add(_amount)
        tag 80			totalSupply.add(_amount)
          JUMPDEST 			totalSupply.add(_amount)
          PUSH 0			totalSupply
          DUP2 			totalSupply = totalSupply.add(...
          SWAP1 			totalSupply = totalSupply.add(...
          SSTORE 			totalSupply = totalSupply.add(...
          POP 			totalSupply = totalSupply.add(...
          PUSH [tag] 81			balances[_to].add(_amount)
          DUP3 			_amount
          PUSH 1			balances
          PUSH 0			balances[_to]
          DUP7 			_to
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
          AND 			balances[_to]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
          AND 			balances[_to]
          DUP2 			balances[_to]
          MSTORE 			balances[_to]
          PUSH 20			balances[_to]
          ADD 			balances[_to]
          SWAP1 			balances[_to]
          DUP2 			balances[_to]
          MSTORE 			balances[_to]
          PUSH 20			balances[_to]
          ADD 			balances[_to]
          PUSH 0			balances[_to]
          KECCAK256 			balances[_to]
          SLOAD 			balances[_to]
          PUSH [tag] 71			balances[_to].add
          SWAP1 			balances[_to].add
          SWAP2 			balances[_to].add(_amount)
          SWAP1 			balances[_to].add(_amount)
          PUSH FFFFFFFF			balances[_to].add(_amount)
          AND 			balances[_to].add(_amount)
          JUMP [in]			balances[_to].add(_amount)
        tag 81			balances[_to].add(_amount)
          JUMPDEST 			balances[_to].add(_amount)
          PUSH 1			balances
          PUSH 0			balances[_to]
          DUP6 			_to
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
          AND 			balances[_to]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
          AND 			balances[_to]
          DUP2 			balances[_to]
          MSTORE 			balances[_to]
          PUSH 20			balances[_to]
          ADD 			balances[_to]
          SWAP1 			balances[_to]
          DUP2 			balances[_to]
          MSTORE 			balances[_to]
          PUSH 20			balances[_to]
          ADD 			balances[_to]
          PUSH 0			balances[_to]
          KECCAK256 			balances[_to]
          DUP2 			balances[_to] = balances[_to]....
          SWAP1 			balances[_to] = balances[_to]....
          SSTORE 			balances[_to] = balances[_to]....
          POP 			balances[_to] = balances[_to]....
          DUP3 			_to
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Mint(_to, _amount)
          AND 			Mint(_to, _amount)
          PUSH F6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885			Mint(_to, _amount)
          DUP4 			_amount
          PUSH 40			Mint(_to, _amount)
          MLOAD 			Mint(_to, _amount)
          DUP1 			Mint(_to, _amount)
          DUP3 			Mint(_to, _amount)
          DUP2 			Mint(_to, _amount)
          MSTORE 			Mint(_to, _amount)
          PUSH 20			Mint(_to, _amount)
          ADD 			Mint(_to, _amount)
          SWAP2 			Mint(_to, _amount)
          POP 			Mint(_to, _amount)
          POP 			Mint(_to, _amount)
          PUSH 40			Mint(_to, _amount)
          MLOAD 			Mint(_to, _amount)
          DUP1 			Mint(_to, _amount)
          SWAP2 			Mint(_to, _amount)
          SUB 			Mint(_to, _amount)
          SWAP1 			Mint(_to, _amount)
          LOG2 			Mint(_to, _amount)
          DUP3 			_to
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(0, _to, _amount)
          AND 			Transfer(0, _to, _amount)
          PUSH 0			0
          PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(0, _to, _amount)
          DUP5 			_amount
          PUSH 40			Transfer(0, _to, _amount)
          MLOAD 			Transfer(0, _to, _amount)
          DUP1 			Transfer(0, _to, _amount)
          DUP3 			Transfer(0, _to, _amount)
          DUP2 			Transfer(0, _to, _amount)
          MSTORE 			Transfer(0, _to, _amount)
          PUSH 20			Transfer(0, _to, _amount)
          ADD 			Transfer(0, _to, _amount)
          SWAP2 			Transfer(0, _to, _amount)
          POP 			Transfer(0, _to, _amount)
          POP 			Transfer(0, _to, _amount)
          PUSH 40			Transfer(0, _to, _amount)
          MLOAD 			Transfer(0, _to, _amount)
          DUP1 			Transfer(0, _to, _amount)
          SWAP2 			Transfer(0, _to, _amount)
          SUB 			Transfer(0, _to, _amount)
          SWAP1 			Transfer(0, _to, _amount)
          LOG3 			Transfer(0, _to, _amount)
          PUSH 1			true
          SWAP1 			return true
          POP 			return true
          SWAP3 			function mint(address _to, uin...
          SWAP2 			function mint(address _to, uin...
          POP 			function mint(address _to, uin...
          POP 			function mint(address _to, uin...
          JUMP [out]			function mint(address _to, uin...
        tag 43			function balanceOf(address _ow...
          JUMPDEST 			function balanceOf(address _ow...
          PUSH 0			uint256 balance
          PUSH 1			balances
          PUSH 0			balances[_owner]
          DUP4 			_owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_owner]
          AND 			balances[_owner]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_owner]
          AND 			balances[_owner]
          DUP2 			balances[_owner]
          MSTORE 			balances[_owner]
          PUSH 20			balances[_owner]
          ADD 			balances[_owner]
          SWAP1 			balances[_owner]
          DUP2 			balances[_owner]
          MSTORE 			balances[_owner]
          PUSH 20			balances[_owner]
          ADD 			balances[_owner]
          PUSH 0			balances[_owner]
          KECCAK256 			balances[_owner]
          SLOAD 			balances[_owner]
          SWAP1 			return balances[_owner]
          POP 			return balances[_owner]
          SWAP2 			function balanceOf(address _ow...
          SWAP1 			function balanceOf(address _ow...
          POP 			function balanceOf(address _ow...
          JUMP [out]			function balanceOf(address _ow...
        tag 46			function finishMinting()public...
          JUMPDEST 			function finishMinting()public...
          PUSH 0			bool
          PUSH 3			owner
          PUSH 0			owner
          SWAP1 			owner
          SLOAD 			owner
          SWAP1 			owner
          PUSH 100			owner
          EXP 			owner
          SWAP1 			owner
          DIV 			owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
          AND 			owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
          AND 			msg.sender == owner
          CALLER 			msg.sender
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
          AND 			msg.sender == owner
          EQ 			msg.sender == owner
          ISZERO 			require(msg.sender == owner)
          ISZERO 			require(msg.sender == owner)
          PUSH [tag] 84			require(msg.sender == owner)
          JUMPI 			require(msg.sender == owner)
          PUSH 0			require(msg.sender == owner)
          DUP1 			require(msg.sender == owner)
          REVERT 			require(msg.sender == owner)
        tag 84			require(msg.sender == owner)
          JUMPDEST 			require(msg.sender == owner)
          PUSH 1			true
          PUSH 3			mintingFinished
          PUSH 14			mintingFinished
          PUSH 100			mintingFinished = true
          EXP 			mintingFinished = true
          DUP2 			mintingFinished = true
          SLOAD 			mintingFinished = true
          DUP2 			mintingFinished = true
          PUSH FF			mintingFinished = true
          MUL 			mintingFinished = true
          NOT 			mintingFinished = true
          AND 			mintingFinished = true
          SWAP1 			mintingFinished = true
          DUP4 			mintingFinished = true
          ISZERO 			mintingFinished = true
          ISZERO 			mintingFinished = true
          MUL 			mintingFinished = true
          OR 			mintingFinished = true
          SWAP1 			mintingFinished = true
          SSTORE 			mintingFinished = true
          POP 			mintingFinished = true
          PUSH AE5184FBA832CB2B1F702ACA6117B8D265EAF03AD33EB133F19DDE0F5920FA08			MintFinished()
          PUSH 40			MintFinished()
          MLOAD 			MintFinished()
          PUSH 40			MintFinished()
          MLOAD 			MintFinished()
          DUP1 			MintFinished()
          SWAP2 			MintFinished()
          SUB 			MintFinished()
          SWAP1 			MintFinished()
          LOG1 			MintFinished()
          PUSH 1			true
          SWAP1 			return true
          POP 			return true
          SWAP1 			function finishMinting()public...
          JUMP [out]			function finishMinting()public...
        tag 49			address public owner
          JUMPDEST 			address public owner
          PUSH 3			address public owner
          PUSH 0			address public owner
          SWAP1 			address public owner
          SLOAD 			address public owner
          SWAP1 			address public owner
          PUSH 100			address public owner
          EXP 			address public owner
          SWAP1 			address public owner
          DIV 			address public owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address public owner
          AND 			address public owner
          DUP2 			address public owner
          JUMP [out]			address public owner
        tag 52			string public constant symbol ...
          JUMPDEST 			string public constant symbol ...
          PUSH 40			string public constant symbol ...
          DUP1 			string public constant symbol ...
          MLOAD 			string public constant symbol ...
          SWAP1 			string public constant symbol ...
          DUP2 			string public constant symbol ...
          ADD 			string public constant symbol ...
          PUSH 40			string public constant symbol ...
          MSTORE 			string public constant symbol ...
          DUP1 			string public constant symbol ...
          PUSH 3			string public constant symbol ...
          DUP2 			string public constant symbol ...
          MSTORE 			string public constant symbol ...
          PUSH 20			string public constant symbol ...
          ADD 			string public constant symbol ...
          PUSH 4D4D540000000000000000000000000000000000000000000000000000000000			string public constant symbol ...
          DUP2 			string public constant symbol ...
          MSTORE 			string public constant symbol ...
          POP 			string public constant symbol ...
          DUP2 			string public constant symbol ...
          JUMP [out]			string public constant symbol ...
        tag 59			function transfer(address _to,...
          JUMPDEST 			function transfer(address _to,...
          PUSH 0			bool
          PUSH [tag] 87			balances[msg.sender].sub(_valu...
          DUP3 			_value
          PUSH 1			balances
          PUSH 0			balances[msg.sender]
          CALLER 			msg.sender
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
          AND 			balances[msg.sender]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
          AND 			balances[msg.sender]
          DUP2 			balances[msg.sender]
          MSTORE 			balances[msg.sender]
          PUSH 20			balances[msg.sender]
          ADD 			balances[msg.sender]
          SWAP1 			balances[msg.sender]
          DUP2 			balances[msg.sender]
          MSTORE 			balances[msg.sender]
          PUSH 20			balances[msg.sender]
          ADD 			balances[msg.sender]
          PUSH 0			balances[msg.sender]
          KECCAK256 			balances[msg.sender]
          SLOAD 			balances[msg.sender]
          PUSH [tag] 73			balances[msg.sender].sub
          SWAP1 			balances[msg.sender].sub
          SWAP2 			balances[msg.sender].sub(_valu...
          SWAP1 			balances[msg.sender].sub(_valu...
          PUSH FFFFFFFF			balances[msg.sender].sub(_valu...
          AND 			balances[msg.sender].sub(_valu...
          JUMP [in]			balances[msg.sender].sub(_valu...
        tag 87			balances[msg.sender].sub(_valu...
          JUMPDEST 			balances[msg.sender].sub(_valu...
          PUSH 1			balances
          PUSH 0			balances[msg.sender]
          CALLER 			msg.sender
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
          AND 			balances[msg.sender]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
          AND 			balances[msg.sender]
          DUP2 			balances[msg.sender]
          MSTORE 			balances[msg.sender]
          PUSH 20			balances[msg.sender]
          ADD 			balances[msg.sender]
          SWAP1 			balances[msg.sender]
          DUP2 			balances[msg.sender]
          MSTORE 			balances[msg.sender]
          PUSH 20			balances[msg.sender]
          ADD 			balances[msg.sender]
          PUSH 0			balances[msg.sender]
          KECCAK256 			balances[msg.sender]
          DUP2 			balances[msg.sender] = balance...
          SWAP1 			balances[msg.sender] = balance...
          SSTORE 			balances[msg.sender] = balance...
          POP 			balances[msg.sender] = balance...
          PUSH [tag] 88			balances[_to].add(_value)
          DUP3 			_value
          PUSH 1			balances
          PUSH 0			balances[_to]
          DUP7 			_to
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
          AND 			balances[_to]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
          AND 			balances[_to]
          DUP2 			balances[_to]
          MSTORE 			balances[_to]
          PUSH 20			balances[_to]
          ADD 			balances[_to]
          SWAP1 			balances[_to]
          DUP2 			balances[_to]
          MSTORE 			balances[_to]
          PUSH 20			balances[_to]
          ADD 			balances[_to]
          PUSH 0			balances[_to]
          KECCAK256 			balances[_to]
          SLOAD 			balances[_to]
          PUSH [tag] 71			balances[_to].add
          SWAP1 			balances[_to].add
          SWAP2 			balances[_to].add(_value)
          SWAP1 			balances[_to].add(_value)
          PUSH FFFFFFFF			balances[_to].add(_value)
          AND 			balances[_to].add(_value)
          JUMP [in]			balances[_to].add(_value)
        tag 88			balances[_to].add(_value)
          JUMPDEST 			balances[_to].add(_value)
          PUSH 1			balances
          PUSH 0			balances[_to]
          DUP6 			_to
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
          AND 			balances[_to]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
          AND 			balances[_to]
          DUP2 			balances[_to]
          MSTORE 			balances[_to]
          PUSH 20			balances[_to]
          ADD 			balances[_to]
          SWAP1 			balances[_to]
          DUP2 			balances[_to]
          MSTORE 			balances[_to]
          PUSH 20			balances[_to]
          ADD 			balances[_to]
          PUSH 0			balances[_to]
          KECCAK256 			balances[_to]
          DUP2 			balances[_to] = balances[_to]....
          SWAP1 			balances[_to] = balances[_to]....
          SSTORE 			balances[_to] = balances[_to]....
          POP 			balances[_to] = balances[_to]....
          DUP3 			_to
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(msg.sender, _to, _val...
          AND 			Transfer(msg.sender, _to, _val...
          CALLER 			msg.sender
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(msg.sender, _to, _val...
          AND 			Transfer(msg.sender, _to, _val...
          PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(msg.sender, _to, _val...
          DUP5 			_value
          PUSH 40			Transfer(msg.sender, _to, _val...
          MLOAD 			Transfer(msg.sender, _to, _val...
          DUP1 			Transfer(msg.sender, _to, _val...
          DUP3 			Transfer(msg.sender, _to, _val...
          DUP2 			Transfer(msg.sender, _to, _val...
          MSTORE 			Transfer(msg.sender, _to, _val...
          PUSH 20			Transfer(msg.sender, _to, _val...
          ADD 			Transfer(msg.sender, _to, _val...
          SWAP2 			Transfer(msg.sender, _to, _val...
          POP 			Transfer(msg.sender, _to, _val...
          POP 			Transfer(msg.sender, _to, _val...
          PUSH 40			Transfer(msg.sender, _to, _val...
          MLOAD 			Transfer(msg.sender, _to, _val...
          DUP1 			Transfer(msg.sender, _to, _val...
          SWAP2 			Transfer(msg.sender, _to, _val...
          SUB 			Transfer(msg.sender, _to, _val...
          SWAP1 			Transfer(msg.sender, _to, _val...
          LOG3 			Transfer(msg.sender, _to, _val...
          PUSH 1			true
          SWAP1 			return true
          POP 			return true
          SWAP3 			function transfer(address _to,...
          SWAP2 			function transfer(address _to,...
          POP 			function transfer(address _to,...
          POP 			function transfer(address _to,...
          JUMP [out]			function transfer(address _to,...
        tag 62			function allowance(address _ow...
          JUMPDEST 			function allowance(address _ow...
          PUSH 0			uint256 remaining
          PUSH 2			allowed
          PUSH 0			allowed[_owner]
          DUP5 			_owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner]
          AND 			allowed[_owner]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner]
          AND 			allowed[_owner]
          DUP2 			allowed[_owner]
          MSTORE 			allowed[_owner]
          PUSH 20			allowed[_owner]
          ADD 			allowed[_owner]
          SWAP1 			allowed[_owner]
          DUP2 			allowed[_owner]
          MSTORE 			allowed[_owner]
          PUSH 20			allowed[_owner]
          ADD 			allowed[_owner]
          PUSH 0			allowed[_owner]
          KECCAK256 			allowed[_owner]
          PUSH 0			allowed[_owner][_spender]
          DUP4 			_spender
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner][_spender]
          AND 			allowed[_owner][_spender]
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner][_spender]
          AND 			allowed[_owner][_spender]
          DUP2 			allowed[_owner][_spender]
          MSTORE 			allowed[_owner][_spender]
          PUSH 20			allowed[_owner][_spender]
          ADD 			allowed[_owner][_spender]
          SWAP1 			allowed[_owner][_spender]
          DUP2 			allowed[_owner][_spender]
          MSTORE 			allowed[_owner][_spender]
          PUSH 20			allowed[_owner][_spender]
          ADD 			allowed[_owner][_spender]
          PUSH 0			allowed[_owner][_spender]
          KECCAK256 			allowed[_owner][_spender]
          SLOAD 			allowed[_owner][_spender]
          SWAP1 			return allowed[_owner][_spende...
          POP 			return allowed[_owner][_spende...
          SWAP3 			function allowance(address _ow...
          SWAP2 			function allowance(address _ow...
          POP 			function allowance(address _ow...
          POP 			function allowance(address _ow...
          JUMP [out]			function allowance(address _ow...
        tag 65			function transferOwnership(add...
          JUMPDEST 			function transferOwnership(add...
          PUSH 3			owner
          PUSH 0			owner
          SWAP1 			owner
          SLOAD 			owner
          SWAP1 			owner
          PUSH 100			owner
          EXP 			owner
          SWAP1 			owner
          DIV 			owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
          AND 			owner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
          AND 			msg.sender == owner
          CALLER 			msg.sender
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
          AND 			msg.sender == owner
          EQ 			msg.sender == owner
          ISZERO 			require(msg.sender == owner)
          ISZERO 			require(msg.sender == owner)
          PUSH [tag] 91			require(msg.sender == owner)
          JUMPI 			require(msg.sender == owner)
          PUSH 0			require(msg.sender == owner)
          DUP1 			require(msg.sender == owner)
          REVERT 			require(msg.sender == owner)
        tag 91			require(msg.sender == owner)
          JUMPDEST 			require(msg.sender == owner)
          PUSH 0			0
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			newOwner != address(0)
          AND 			newOwner != address(0)
          DUP2 			newOwner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			newOwner != address(0)
          AND 			newOwner != address(0)
          EQ 			newOwner != address(0)
          ISZERO 			newOwner != address(0)
          ISZERO 			require(newOwner != address(0)...
          ISZERO 			require(newOwner != address(0)...
          PUSH [tag] 93			require(newOwner != address(0)...
          JUMPI 			require(newOwner != address(0)...
          PUSH 0			require(newOwner != address(0)...
          DUP1 			require(newOwner != address(0)...
          REVERT 			require(newOwner != address(0)...
        tag 93			require(newOwner != address(0)...
          JUMPDEST 			require(newOwner != address(0)...
          DUP1 			newOwner
          PUSH 3			owner
          PUSH 0			owner
          PUSH 100			owner = newOwner
          EXP 			owner = newOwner
          DUP2 			owner = newOwner
          SLOAD 			owner = newOwner
          DUP2 			owner = newOwner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = newOwner
          MUL 			owner = newOwner
          NOT 			owner = newOwner
          AND 			owner = newOwner
          SWAP1 			owner = newOwner
          DUP4 			owner = newOwner
          PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = newOwner
          AND 			owner = newOwner
          MUL 			owner = newOwner
          OR 			owner = newOwner
          SWAP1 			owner = newOwner
          SSTORE 			owner = newOwner
          POP 			owner = newOwner
          POP 			function transferOwnership(add...
          JUMP [out]			function transferOwnership(add...
        tag 71			function add(uint256 a, uint25...
          JUMPDEST 			function add(uint256 a, uint25...
          PUSH 0			uint256
          DUP1 			uint256 c
          DUP3 			b
          DUP5 			a
          ADD 			a + b
          SWAP1 			uint256 c = a + b
          POP 			uint256 c = a + b
          DUP4 			a
          DUP2 			c
          LT 			c >= a
          ISZERO 			c >= a
          ISZERO 			assert(c >= a)
          ISZERO 			assert(c >= a)
          PUSH [tag] 95			assert(c >= a)
          JUMPI 			assert(c >= a)
          INVALID 			assert(c >= a)
        tag 95			assert(c >= a)
          JUMPDEST 			assert(c >= a)
          DUP1 			c
          SWAP2 			return c
          POP 			return c
          POP 			function add(uint256 a, uint25...
          SWAP3 			function add(uint256 a, uint25...
          SWAP2 			function add(uint256 a, uint25...
          POP 			function add(uint256 a, uint25...
          POP 			function add(uint256 a, uint25...
          JUMP [out]			function add(uint256 a, uint25...
        tag 73			function sub(uint256 a, uint25...
          JUMPDEST 			function sub(uint256 a, uint25...
          PUSH 0			uint256
          DUP3 			a
          DUP3 			b
          GT 			b <= a
          ISZERO 			b <= a
          ISZERO 			assert(b <= a)
          ISZERO 			assert(b <= a)
          PUSH [tag] 97			assert(b <= a)
          JUMPI 			assert(b <= a)
          INVALID 			assert(b <= a)
        tag 97			assert(b <= a)
          JUMPDEST 			assert(b <= a)
          DUP2 			b
          DUP4 			a
          SUB 			a - b
          SWAP1 			return a - b
          POP 			return a - b
          SWAP3 			function sub(uint256 a, uint25...
          SWAP2 			function sub(uint256 a, uint25...
          POP 			function sub(uint256 a, uint25...
          POP 			function sub(uint256 a, uint25...
          JUMP [out]			function sub(uint256 a, uint25...
        .data
